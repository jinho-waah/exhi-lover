{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport colorSet from \"../../lib/styles/colorSet\";\nimport TagsCheckBox from \"./TagsCheckBox\";\nimport HorizontalLine from \"../common/HorizontalLine\";\nimport PostTemplate from \"../post/PostTemplate\";\n\nfunction IdToShow(_ref) {\n  _s();\n\n  let {\n    TagItems\n  } = _ref;\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchShowsId = async () => {\n      try {\n        setError(null);\n        const tagIdString = TagItems.join(\"&\");\n        const url = tagIdString ? `/api/exhibition_showId/${tagIdString}` : \"/api/shows\";\n        console.log(url);\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    fetchShowsId();\n  }, []); // useEffect(() => {\n  //   // const tagObject = TagItems.reduce((acc, tagName) => {\n  //   //   if (database.hasOwnProperty(tagName)) {\n  //   //     acc[tagName] = database[tagName];\n  //   //   }\n  //   //   return acc;\n  //   // }, {});\n  //   const tagIds = Object.values(tagObject).filter(\n  //     (value) => typeof value === \"number\"\n  //   );\n  //   const tagIdsString = tagIds.join(\"&\");\n  //   tagIds.sort((a, b) => a - b);\n  // const url = tagIdsString\n  //   ? `/api/exhibition_showId/${tagIdsString}`\n  //   : \"/api/shows\";\n  //   const fetchShowsId = async () => {\n  //     try {\n  //       setError(null);\n  //       setShowsId(null);\n  //       // const response = await axios.get(`https://exhi-lover.com${url}`);\n  //       const response = await axios.get(`http://localhost:5100${url}`);\n  //       if (url !== \"/api/shows\") {\n  //         const exhibitionIds = response.data.map(\n  //           ({ exhibition_id }) => exhibition_id\n  //         );\n  //         exhibitionIds.sort((a, b) => a - b);\n  //         setShowsId(exhibitionIds);\n  //         console.log(showsId);\n  //         setShows(null);\n  //       } else if (url === \"/api/shows\") {\n  //         setShows(response.data);\n  //       }\n  //     } catch (e) {\n  //       setError(e);\n  //     }\n  //   };\n  //   fetchShowsId();\n  // }, [TagItems]);\n  //   useEffect(() => {\n  //     const fetchShow = async () => {\n  //       if (showsId !== null) {\n  //         try {\n  //           setError(null);\n  //           setShows(null);\n  //           const showUrl = showsId ? `/api/shows_id/${showsId}` : \"/api/shows\";\n  //           // const response = await axios.get(`https://exhi-lover.com${showUrl}`);\n  //           const response = await axios.get(`http://localhost:5100${showUrl}`);\n  //           setShows(response.data);\n  //         } catch (e) {\n  //           setError(e);\n  //         }\n  //       }\n  //     };\n  //     fetchShow();\n  //   }, [showsId]);\n  //   return { shows, tags };\n}\n\n_s(IdToShow, \"JfhGochNIqPkY17zyDsXnSE7zLQ=\");\n\n_c = IdToShow;\nexport default IdToShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"IdToShow\");","map":{"version":3,"names":["useState","useEffect","styled","axios","colorSet","TagsCheckBox","HorizontalLine","PostTemplate","IdToShow","TagItems","error","setError","fetchShowsId","tagIdString","join","url","console","log","e"],"sources":["/Users/andrew/Desktop/exhi/exhi/client/src/component/hashtag/IdToShow.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport colorSet from \"../../lib/styles/colorSet\";\nimport TagsCheckBox from \"./TagsCheckBox\";\nimport HorizontalLine from \"../common/HorizontalLine\";\nimport PostTemplate from \"../post/PostTemplate\";\n\nfunction IdToShow({ TagItems }) {\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchShowsId = async () => {\n      try {\n        setError(null);\n        const tagIdString = TagItems.join(\"&\");\n        const url = tagIdString\n          ? `/api/exhibition_showId/${tagIdString}`\n          : \"/api/shows\";\n        console.log(url);\n      } catch (e) {\n        setError(e);\n      }\n    };\n    fetchShowsId();\n  }, []);\n  // useEffect(() => {\n  //   // const tagObject = TagItems.reduce((acc, tagName) => {\n  //   //   if (database.hasOwnProperty(tagName)) {\n  //   //     acc[tagName] = database[tagName];\n  //   //   }\n  //   //   return acc;\n  //   // }, {});\n  //   const tagIds = Object.values(tagObject).filter(\n  //     (value) => typeof value === \"number\"\n  //   );\n  //   const tagIdsString = tagIds.join(\"&\");\n  //   tagIds.sort((a, b) => a - b);\n  // const url = tagIdsString\n  //   ? `/api/exhibition_showId/${tagIdsString}`\n  //   : \"/api/shows\";\n\n  //   const fetchShowsId = async () => {\n  //     try {\n  //       setError(null);\n  //       setShowsId(null);\n  //       // const response = await axios.get(`https://exhi-lover.com${url}`);\n  //       const response = await axios.get(`http://localhost:5100${url}`);\n  //       if (url !== \"/api/shows\") {\n  //         const exhibitionIds = response.data.map(\n  //           ({ exhibition_id }) => exhibition_id\n  //         );\n  //         exhibitionIds.sort((a, b) => a - b);\n\n  //         setShowsId(exhibitionIds);\n  //         console.log(showsId);\n  //         setShows(null);\n  //       } else if (url === \"/api/shows\") {\n  //         setShows(response.data);\n  //       }\n  //     } catch (e) {\n  //       setError(e);\n  //     }\n  //   };\n\n  //   fetchShowsId();\n  // }, [TagItems]);\n\n  //   useEffect(() => {\n  //     const fetchShow = async () => {\n  //       if (showsId !== null) {\n  //         try {\n  //           setError(null);\n  //           setShows(null);\n  //           const showUrl = showsId ? `/api/shows_id/${showsId}` : \"/api/shows\";\n  //           // const response = await axios.get(`https://exhi-lover.com${showUrl}`);\n  //           const response = await axios.get(`http://localhost:5100${showUrl}`);\n  //           setShows(response.data);\n  //         } catch (e) {\n  //           setError(e);\n  //         }\n  //       }\n  //     };\n\n  //     fetchShow();\n  //   }, [showsId]);\n\n  //   return { shows, tags };\n}\n\nexport default IdToShow;\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;AAEA,SAASC,QAAT,OAAgC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC9B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAG,YAAY;MAC/B,IAAI;QACFD,QAAQ,CAAC,IAAD,CAAR;QACA,MAAME,WAAW,GAAGJ,QAAQ,CAACK,IAAT,CAAc,GAAd,CAApB;QACA,MAAMC,GAAG,GAAGF,WAAW,GAClB,0BAAyBA,WAAY,EADnB,GAEnB,YAFJ;QAGAG,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACD,CAPD,CAOE,OAAOG,CAAP,EAAU;QACVP,QAAQ,CAACO,CAAD,CAAR;MACD;IACF,CAXD;;IAYAN,YAAY;EACb,CAdQ,EAcN,EAdM,CAAT,CAH8B,CAkB9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;AACD;;GAhFQJ,Q;;KAAAA,Q;AAkFT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}