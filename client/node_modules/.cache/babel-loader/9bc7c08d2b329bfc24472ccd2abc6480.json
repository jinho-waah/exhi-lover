{"ast":null,"code":"import _classCallCheck from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classPrivateFieldInitSpec from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateFieldSet from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\n\nvar _gcTimeout;\n\n// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = (_gcTimeout = /*#__PURE__*/new WeakMap(), /*#__PURE__*/function () {\n  function Removable() {\n    _classCallCheck(this, Removable);\n\n    _classPrivateFieldInitSpec(this, _gcTimeout, {\n      writable: true,\n      value: void 0\n    });\n  }\n\n  _createClass(Removable, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.clearGcTimeout();\n    }\n  }, {\n    key: \"scheduleGc\",\n    value: function scheduleGc() {\n      var _this = this;\n\n      this.clearGcTimeout();\n\n      if (isValidTimeout(this.gcTime)) {\n        _classPrivateFieldSet(this, _gcTimeout, setTimeout(function () {\n          _this.optionalRemove();\n        }, this.gcTime));\n      }\n    }\n  }, {\n    key: \"updateGcTime\",\n    value: function updateGcTime(newGcTime) {\n      this.gcTime = Math.max(this.gcTime || 0, newGcTime !== null && newGcTime !== void 0 ? newGcTime : isServer ? Infinity : 5 * 60 * 1e3);\n    }\n  }, {\n    key: \"clearGcTimeout\",\n    value: function clearGcTimeout() {\n      if (_classPrivateFieldGet(this, _gcTimeout)) {\n        clearTimeout(_classPrivateFieldGet(this, _gcTimeout));\n\n        _classPrivateFieldSet(this, _gcTimeout, void 0);\n      }\n    }\n  }]);\n\n  return Removable;\n}());\nexport { Removable };","map":{"version":3,"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,cAAnB,QAAyC,YAAzC;AAEO,IAAeC;EAAA;IAAA;;IAAA;MAAA;MAAA;IAAA;EAAA;;EAAA;IAAA;IAAA,OAIpB,mBAAgB;MACd,KAAKC,cAAL;IACF;EANoB;IAAA;IAAA,OAQV,sBAAmB;MAAA;;MAC3B,KAAKA,cAAL;;MAEA,IAAIF,eAAe,KAAKG,MAApB,CAAJ,EAAiC;QAC/B,wCAAkBC,WAAW,YAAM;UACjC,MAAKC,cAAL;QACF,CAFkB,EAEf,KAAKF,MAFU,CAAlB;MAGF;IACF;EAhBoB;IAAA;IAAA,OAkBV,sBAAaG,SAAb,EAAkD;MAE1D,KAAKH,MAAL,GAAcI,KAAKC,GAAL,CACZ,KAAKL,MAAL,IAAe,CADH,EAEZG,SAFY,aAEZA,SAFY,cAEZA,SAFY,GAEEP,WAAWU,QAAX,GAAsB,IAAI,EAAJ,GAAS,GAFjC,CAAd;IAIF;EAxBoB;IAAA;IAAA,OA0BV,0BAAiB;MACzB,0BAAI,IAAJ,eAAqB;QACnBC,mCAAa,IAAb;;QACA,wCAAkB,MAAlB;MACF;IACF;EA/BoB;;EAAA;AAAA,IAAf","names":["isServer","isValidTimeout","Removable","clearGcTimeout","gcTime","setTimeout","optionalRemove","newGcTime","Math","max","Infinity","clearTimeout"],"sources":["/Users/andrew/node_modules/@tanstack/query-core/src/removable.ts"],"sourcesContent":["import { isServer, isValidTimeout } from './utils'\n\nexport abstract class Removable {\n  gcTime!: number\n  #gcTimeout?: ReturnType<typeof setTimeout>\n\n  destroy(): void {\n    this.clearGcTimeout()\n  }\n\n  protected scheduleGc(): void {\n    this.clearGcTimeout()\n\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove()\n      }, this.gcTime)\n    }\n  }\n\n  protected updateGcTime(newGcTime: number | undefined): void {\n    // Default to 5 minutes (Infinity for server-side) if no gcTime is set\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1000),\n    )\n  }\n\n  protected clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout)\n      this.#gcTimeout = undefined\n    }\n  }\n\n  protected abstract optionalRemove(): void\n}\n"]},"metadata":{},"sourceType":"module"}