{"ast":null,"code":"import _classCallCheck from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n// src/subscribable.ts\nvar Subscribable = /*#__PURE__*/function () {\n  function Subscribable() {\n    _classCallCheck(this, Subscribable);\n\n    this.listeners = /* @__PURE__ */new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  _createClass(Subscribable, [{\n    key: \"subscribe\",\n    value: function subscribe(listener) {\n      var _this = this;\n\n      this.listeners.add(listener);\n      this.onSubscribe();\n      return function () {\n        _this.listeners.delete(listener);\n\n        _this.onUnsubscribe();\n      };\n    }\n  }, {\n    key: \"hasListeners\",\n    value: function hasListeners() {\n      return this.listeners.size > 0;\n    }\n  }, {\n    key: \"onSubscribe\",\n    value: function onSubscribe() {}\n  }, {\n    key: \"onUnsubscribe\",\n    value: function onUnsubscribe() {}\n  }]);\n\n  return Subscribable;\n}();\n\nexport { Subscribable };","map":{"version":3,"mappings":";;;;AAAO,IAAMA;EAGX,wBAAc;IAAA;;IAFd,KAAUC,SAAV,GAAsB,mBAAIC,GAAJ,EAAtB;IAGE,KAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;EACF;;EALW;IAAA;IAAA,OAOX,mBAAUC,QAAV,EAA2C;MAAA;;MACzC,KAAKJ,SAAL,CAAeK,GAAf,CAAmBD,QAAnB;MAEA,KAAKE,WAAL;MAEA,OAAO,YAAM;QACX,MAAKN,SAAL,CAAeO,MAAf,CAAsBH,QAAtB;;QACA,MAAKI,aAAL;MACF,CAHA;IAIF;EAhBW;IAAA;IAAA,OAkBX,wBAAwB;MACtB,OAAO,KAAKR,SAAL,CAAeS,IAAf,GAAsB,CAA7B;IACF;EApBW;IAAA;IAAA,OAsBD,uBAAoB,CAE9B;EAxBW;IAAA;IAAA,OA0BD,yBAAsB,CAEhC;EA5BW;;EAAA;AAAA,GAAN","names":["Subscribable","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","size"],"sources":["/Users/andrew/node_modules/@tanstack/query-core/src/subscribable.ts"],"sourcesContent":["export class Subscribable<TListener extends Function> {\n  protected listeners = new Set<TListener>()\n\n  constructor() {\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  subscribe(listener: TListener): () => void {\n    this.listeners.add(listener)\n\n    this.onSubscribe()\n\n    return () => {\n      this.listeners.delete(listener)\n      this.onUnsubscribe()\n    }\n  }\n\n  hasListeners(): boolean {\n    return this.listeners.size > 0\n  }\n\n  protected onSubscribe(): void {\n    // Do nothing\n  }\n\n  protected onUnsubscribe(): void {\n    // Do nothing\n  }\n}\n"]},"metadata":{},"sourceType":"module"}