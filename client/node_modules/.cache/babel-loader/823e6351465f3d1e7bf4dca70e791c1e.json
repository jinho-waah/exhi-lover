{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/MapTemplate.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useMemo } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport KakaoMap from \"./KaKaoMap\";\nimport Marker from \"./Marker\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { fetchGalleryLocation } from \"../../lib/api/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapBox = styled.div`\n  width: 100%;\n  align-items: center;\n  margin: 0;\n\n  @media (max-width: 560px) {\n    height: calc(110vw + 50px);\n  }\n\n  @media (min-width: 561px) {\n    // height: 616px;\n    height: 666px;\n  }\n`;\n_c = MapBox;\n\nconst MapTemplate = () => {\n  _s();\n\n  const [state, setState] = useState({\n    center: {\n      lat: 37.56649,\n      lng: 126.978488\n    },\n    errMsg: null,\n    isLoading: true\n  }); // const { positions, isLoading: markersLoading } = Marker(); // Marker에서 로딩 상태와 positions을 받음\n\n  const {\n    data: galleries,\n    isLoading: isGalleriesLoading,\n    error: galleriesError\n  } = useQuery({\n    queryKey: [\"galleries\"],\n    queryFn: Marker\n  });\n  const [flag, setFlag] = useState(false); // true -> marker 활성화 (위치 활성화를 하지 않으면 no marker)\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(position => {\n        setState(prev => ({ ...prev,\n          center: {\n            lat: position.coords.latitude,\n            // 위도\n            lng: position.coords.longitude // 경도\n\n          },\n          isLoading: false\n        }));\n      }, err => {\n        setState(prev => ({ ...prev,\n          errMsg: err.message,\n          isLoading: false\n        }));\n      });\n    } else {\n      // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n      setState(prev => ({ ...prev,\n        errMsg: \"geolocation을 사용할수 없어요..\",\n        isLoading: false\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    if (!state.isLoading && !markersLoading) {\n      setFlag(true); // 모든 로딩이 완료되었을 때 flag를 true로 설정\n    }\n  }, [state.isLoading, markersLoading]);\n  return /*#__PURE__*/_jsxDEV(MapBox, {\n    children: flag && /*#__PURE__*/_jsxDEV(KakaoMap, {\n      lat: state.center.lat,\n      lng: state.center.lng,\n      flag: flag // showMarker에 flag 값 전달\n      ,\n      galleriesMarker: positions // 갤러리 마커 데이터 전달\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapTemplate, \"GJS0zezY7TR9/GmtFtqdvCdu9Ds=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = MapTemplate;\nexport default MapTemplate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapBox\");\n$RefreshReg$(_c2, \"MapTemplate\");","map":{"version":3,"names":["React","styled","useMemo","useEffect","useState","KakaoMap","Marker","useQuery","fetchGalleryLocation","MapBox","div","MapTemplate","state","setState","center","lat","lng","errMsg","isLoading","data","galleries","isGalleriesLoading","error","galleriesError","queryKey","queryFn","flag","setFlag","navigator","geolocation","getCurrentPosition","position","prev","coords","latitude","longitude","err","message","markersLoading","positions"],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/MapTemplate.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useMemo } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport KakaoMap from \"./KaKaoMap\";\nimport Marker from \"./Marker\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { fetchGalleryLocation } from \"../../lib/api/Api\";\n\nconst MapBox = styled.div`\n  width: 100%;\n  align-items: center;\n  margin: 0;\n\n  @media (max-width: 560px) {\n    height: calc(110vw + 50px);\n  }\n\n  @media (min-width: 561px) {\n    // height: 616px;\n    height: 666px;\n  }\n`;\n\nconst MapTemplate = () => {\n  const [state, setState] = useState({\n    center: {\n      lat: 37.56649,\n      lng: 126.978488,\n    },\n    errMsg: null,\n    isLoading: true,\n  });\n\n  // const { positions, isLoading: markersLoading } = Marker(); // Marker에서 로딩 상태와 positions을 받음\n\n  const {\n    data: galleries,\n    isLoading: isGalleriesLoading,\n    error: galleriesError,\n  } = useQuery({\n    queryKey: [\"galleries\"],\n    queryFn: Marker,\n  });\n\n  const [flag, setFlag] = useState(false); // true -> marker 활성화 (위치 활성화를 하지 않으면 no marker)\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setState((prev) => ({\n            ...prev,\n            center: {\n              lat: position.coords.latitude, // 위도\n              lng: position.coords.longitude, // 경도\n            },\n            isLoading: false,\n          }));\n        },\n        (err) => {\n          setState((prev) => ({\n            ...prev,\n            errMsg: err.message,\n            isLoading: false,\n          }));\n        }\n      );\n    } else {\n      // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n      setState((prev) => ({\n        ...prev,\n        errMsg: \"geolocation을 사용할수 없어요..\",\n        isLoading: false,\n      }));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!state.isLoading && !markersLoading) {\n      setFlag(true); // 모든 로딩이 완료되었을 때 flag를 true로 설정\n    }\n  }, [state.isLoading, markersLoading]);\n\n  return (\n    <MapBox>\n      {flag && (\n        <KakaoMap\n          lat={state.center.lat}\n          lng={state.center.lng}\n          flag={flag} // showMarker에 flag 값 전달\n          galleriesMarker={positions} // 갤러리 마커 데이터 전달\n        />\n      )}\n    </MapBox>\n  );\n};\n\nexport default MapTemplate;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,oBAAT,QAAqC,mBAArC;;AAEA,MAAMC,MAAM,GAAGR,MAAM,CAACS,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;KAAMD,M;;AAeN,MAAME,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;IACjCU,MAAM,EAAE;MACNC,GAAG,EAAE,QADC;MAENC,GAAG,EAAE;IAFC,CADyB;IAKjCC,MAAM,EAAE,IALyB;IAMjCC,SAAS,EAAE;EANsB,CAAD,CAAlC,CADwB,CAUxB;;EAEA,MAAM;IACJC,IAAI,EAAEC,SADF;IAEJF,SAAS,EAAEG,kBAFP;IAGJC,KAAK,EAAEC;EAHH,IAIFhB,QAAQ,CAAC;IACXiB,QAAQ,EAAE,CAAC,WAAD,CADC;IAEXC,OAAO,EAAEnB;EAFE,CAAD,CAJZ;EASA,MAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,KAAD,CAAhC,CArBwB,CAqBiB;;EAEzCD,SAAS,CAAC,MAAM;IACd,IAAIyB,SAAS,CAACC,WAAd,EAA2B;MACzB;MACAD,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACGC,QAAD,IAAc;QACZlB,QAAQ,CAAEmB,IAAD,KAAW,EAClB,GAAGA,IADe;UAElBlB,MAAM,EAAE;YACNC,GAAG,EAAEgB,QAAQ,CAACE,MAAT,CAAgBC,QADf;YACyB;YAC/BlB,GAAG,EAAEe,QAAQ,CAACE,MAAT,CAAgBE,SAFf,CAE0B;;UAF1B,CAFU;UAMlBjB,SAAS,EAAE;QANO,CAAX,CAAD,CAAR;MAQD,CAVH,EAWGkB,GAAD,IAAS;QACPvB,QAAQ,CAAEmB,IAAD,KAAW,EAClB,GAAGA,IADe;UAElBf,MAAM,EAAEmB,GAAG,CAACC,OAFM;UAGlBnB,SAAS,EAAE;QAHO,CAAX,CAAD,CAAR;MAKD,CAjBH;IAmBD,CArBD,MAqBO;MACL;MACAL,QAAQ,CAAEmB,IAAD,KAAW,EAClB,GAAGA,IADe;QAElBf,MAAM,EAAE,yBAFU;QAGlBC,SAAS,EAAE;MAHO,CAAX,CAAD,CAAR;IAKD;EACF,CA9BQ,EA8BN,EA9BM,CAAT;EAgCAf,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,KAAK,CAACM,SAAP,IAAoB,CAACoB,cAAzB,EAAyC;MACvCX,OAAO,CAAC,IAAD,CAAP,CADuC,CACxB;IAChB;EACF,CAJQ,EAIN,CAACf,KAAK,CAACM,SAAP,EAAkBoB,cAAlB,CAJM,CAAT;EAMA,oBACE,QAAC,MAAD;IAAA,UACGZ,IAAI,iBACH,QAAC,QAAD;MACE,GAAG,EAAEd,KAAK,CAACE,MAAN,CAAaC,GADpB;MAEE,GAAG,EAAEH,KAAK,CAACE,MAAN,CAAaE,GAFpB;MAGE,IAAI,EAAEU,IAHR,CAGc;MAHd;MAIE,eAAe,EAAEa,SAJnB,CAI8B;;IAJ9B;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAzED;;GAAM5B,W;UAgBAJ,Q;;;MAhBAI,W;AA2EN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}