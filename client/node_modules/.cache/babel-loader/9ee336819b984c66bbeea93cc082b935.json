{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/MapTemplate.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useMemo } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport KakaoMap from \"./KakaoMap\";\nimport Marker from \"./Marker\";\nimport { fetchGalleryLocation } from \"../../lib/api/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapBox = styled.div`\n  width: 100%;\n  align-items: center;\n  margin: 0 auto;\n\n  @media (max-width: 560px) {\n    height: 110vw;\n  }\n\n  @media (min-width: 561px) {\n    height: 616px;\n  }\n`;\n_c = MapBox;\n\nconst MapTemplate = () => {\n  _s();\n\n  // const [location, setLocation] = useState(\"\");\n  // const [map, setMap] = useState();\n  // var options = {\n  //   enableHighAccuracy: true,\n  //   timeout: 5000,\n  //   maximumAge: 0,\n  // };\n  const [state, setState] = useState({\n    center: {\n      lat: 37.56649,\n      lng: 126.978488\n    },\n    errMsg: null,\n    isLoading: true\n  });\n  const [flag, setFlag] = useState(false); // true -> marker 활성화 (위치 활성화를 하지 않으면 no marker)\n\n  const [galleries, setGalleries] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchGallery = async () => {\n      try {\n        setError(null);\n        setGalleries(await fetchGalleryLocation());\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    fetchGallery();\n  }, []);\n  const positions = galleries ? galleries.map(gallery => ({\n    id: gallery.id,\n    title: gallery.gallery_name,\n    latlng: {\n      lat: parseFloat(gallery.gallery_add_tude.split(\",\")[0]),\n      lng: parseFloat(gallery.gallery_add_tude.split(\",\")[1])\n    },\n    add: gallery.gallery_add_word,\n    contact: gallery.gallery_phone_num,\n    url: gallery.site\n  })) : []; // return positions;\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(position => {\n        setState(prev => ({ ...prev,\n          center: {\n            lat: position.coords.latitude,\n            // 위도\n            lng: position.coords.longitude // 경도\n\n          },\n          isLoading: false\n        }));\n      }, err => {\n        setState(prev => ({ ...prev,\n          errMsg: err.message,\n          isLoading: false\n        }));\n      });\n    } else {\n      // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n      setState(prev => ({ ...prev,\n        errMsg: \"geolocation을 사용할수 없어요..\",\n        isLoading: false\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    if (!state.isLoading) {\n      setFlag(true);\n    }\n  }, [state.isLoading]);\n  return /*#__PURE__*/_jsxDEV(MapBox, {\n    children: /*#__PURE__*/_jsxDEV(KakaoMap, {\n      lat: state.center.lat,\n      lng: state.center.lng,\n      showMarker: flag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapTemplate, \"9MgBKvfipnZcRrGU+51x1UZYfmA=\");\n\n_c2 = MapTemplate;\nexport default MapTemplate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapBox\");\n$RefreshReg$(_c2, \"MapTemplate\");","map":{"version":3,"names":["React","styled","useMemo","useEffect","useState","KakaoMap","Marker","fetchGalleryLocation","MapBox","div","MapTemplate","state","setState","center","lat","lng","errMsg","isLoading","flag","setFlag","galleries","setGalleries","error","setError","fetchGallery","e","positions","map","gallery","id","title","gallery_name","latlng","parseFloat","gallery_add_tude","split","add","gallery_add_word","contact","gallery_phone_num","url","site","navigator","geolocation","getCurrentPosition","position","prev","coords","latitude","longitude","err","message"],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/MapTemplate.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useMemo } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport KakaoMap from \"./KakaoMap\";\nimport Marker from \"./Marker\";\nimport { fetchGalleryLocation } from \"../../lib/api/Api\";\n\nconst MapBox = styled.div`\n  width: 100%;\n  align-items: center;\n  margin: 0 auto;\n\n  @media (max-width: 560px) {\n    height: 110vw;\n  }\n\n  @media (min-width: 561px) {\n    height: 616px;\n  }\n`;\n\nconst MapTemplate = () => {\n  // const [location, setLocation] = useState(\"\");\n  // const [map, setMap] = useState();\n\n  // var options = {\n  //   enableHighAccuracy: true,\n  //   timeout: 5000,\n  //   maximumAge: 0,\n  // };\n  const [state, setState] = useState({\n    center: {\n      lat: 37.56649,\n      lng: 126.978488,\n    },\n    errMsg: null,\n    isLoading: true,\n  });\n\n  const [flag, setFlag] = useState(false); // true -> marker 활성화 (위치 활성화를 하지 않으면 no marker)\n\n  const [galleries, setGalleries] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchGallery = async () => {\n      try {\n        setError(null);\n        setGalleries(await fetchGalleryLocation());\n      } catch (e) {\n        setError(e);\n      }\n    };\n    fetchGallery();\n  }, []);\n\n  const positions = galleries\n    ? galleries.map((gallery) => ({\n        id: gallery.id,\n        title: gallery.gallery_name,\n        latlng: {\n          lat: parseFloat(gallery.gallery_add_tude.split(\",\")[0]),\n          lng: parseFloat(gallery.gallery_add_tude.split(\",\")[1]),\n        },\n        add: gallery.gallery_add_word,\n        contact: gallery.gallery_phone_num,\n        url: gallery.site,\n      }))\n    : [];\n\n  // return positions;\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setState((prev) => ({\n            ...prev,\n            center: {\n              lat: position.coords.latitude, // 위도\n              lng: position.coords.longitude, // 경도\n            },\n            isLoading: false,\n          }));\n        },\n        (err) => {\n          setState((prev) => ({\n            ...prev,\n            errMsg: err.message,\n            isLoading: false,\n          }));\n        }\n      );\n    } else {\n      // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n      setState((prev) => ({\n        ...prev,\n        errMsg: \"geolocation을 사용할수 없어요..\",\n        isLoading: false,\n      }));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!state.isLoading) {\n      setFlag(true);\n    }\n  }, [state.isLoading]);\n\n  return (\n    <MapBox>\n      <KakaoMap\n        lat={state.center.lat}\n        lng={state.center.lng}\n        showMarker={flag}\n      />\n    </MapBox>\n  );\n};\n\nexport default MapTemplate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}