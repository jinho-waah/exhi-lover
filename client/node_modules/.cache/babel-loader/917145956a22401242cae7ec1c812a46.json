{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KakaoMap.js\";\n\n/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nimport Marker from \"./Marker\";\nimport { Map, MapMarker, CustomOverlayMap } from \"react-kakao-maps-sdk\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport icon from \"../../lib/icon/loc4.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction KakaoMap(_ref) {\n  let {\n    state,\n    flag\n  } = _ref;\n  const mapHeight = window.innerWidth >= 560 ? 560 : window.innerWidth;\n  const center = state;\n  const test = Marker();\n  console.log(typeof test, test);\n  const positions = [{\n    title: \"카카오\",\n    latlng: {\n      lat: 33.450705,\n      lng: 126.570677\n    }\n  }, {\n    title: \"생태연못\",\n    latlng: {\n      lat: 33.450936,\n      lng: 126.569477\n    }\n  }, {\n    title: \"텃밭\",\n    latlng: {\n      lat: 33.450879,\n      lng: 126.56994\n    }\n  }, {\n    title: \"근린공원\",\n    latlng: {\n      lat: 33.451393,\n      lng: 126.570738\n    }\n  }]; // useEffect(() => {\n  //   setCenter(state);\n  // }, [state]);\n  // const [center, setCenter] = useState({ lat: 36.5, lng: 127.8 });\n  // setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n  // useEffect(() => {\n  //   // setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n  //   var container = document.getElementById(\"map\");\n  //   var options = {\n  //     center: new kakao.maps.LatLng(state.lat, state.lng),\n  //     level: 3,\n  //   };\n  //   var map = new kakao.maps.Map(container, options);\n  //   var markerPosition = new kakao.maps.LatLng(state.lat, state.lng);\n  //   if (flag === true) {\n  //     var marker = new kakao.maps.Marker({\n  //       position: markerPosition,\n  //     });\n  //     marker.setMap(map);\n  //   }\n  // }, [state, flag]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Map // 지도를 표시할 Container\n    , {\n      center: center,\n      style: {\n        // 지도의 크기\n        width: \"100%\",\n        height: `${mapHeight}px`\n      },\n      level: 3 // 지도의 확대 레벨\n      ,\n      children: [flag && /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: center\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }, this), test.map((position, index) => /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: position.latlng // 마커를 표시할 위치\n        ,\n        image: {\n          src: icon,\n          size: {\n            width: 35,\n            height: 35\n          } // 마커이미지의 크기입니다\n\n        },\n        title: position.title // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n\n      }, `${position.title}-${position.latlng}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_c = KakaoMap;\nexport default _c2 = /*#__PURE__*/React.memo(KakaoMap);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"KakaoMap\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","Marker","Map","MapMarker","CustomOverlayMap","AccountBalanceIcon","icon","KakaoMap","state","flag","mapHeight","window","innerWidth","center","test","console","log","positions","title","latlng","lat","lng","width","height","map","position","index","src","size","memo"],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KakaoMap.js"],"sourcesContent":["/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nimport Marker from \"./Marker\";\nimport { Map, MapMarker, CustomOverlayMap } from \"react-kakao-maps-sdk\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport icon from \"../../lib/icon/loc4.png\";\n\nfunction KakaoMap({ state, flag }) {\n  const mapHeight = window.innerWidth >= 560 ? 560 : window.innerWidth;\n  const center = state;\n  const test = Marker();\n  console.log(typeof test, test);\n  const positions = [\n    {\n      title: \"카카오\",\n      latlng: { lat: 33.450705, lng: 126.570677 },\n    },\n    {\n      title: \"생태연못\",\n      latlng: { lat: 33.450936, lng: 126.569477 },\n    },\n    {\n      title: \"텃밭\",\n      latlng: { lat: 33.450879, lng: 126.56994 },\n    },\n    {\n      title: \"근린공원\",\n      latlng: { lat: 33.451393, lng: 126.570738 },\n    },\n  ];\n  // useEffect(() => {\n  //   setCenter(state);\n  // }, [state]);\n  // const [center, setCenter] = useState({ lat: 36.5, lng: 127.8 });\n  // setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n  // useEffect(() => {\n  //   // setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n\n  //   var container = document.getElementById(\"map\");\n  //   var options = {\n  //     center: new kakao.maps.LatLng(state.lat, state.lng),\n  //     level: 3,\n  //   };\n\n  //   var map = new kakao.maps.Map(container, options);\n  //   var markerPosition = new kakao.maps.LatLng(state.lat, state.lng);\n\n  //   if (flag === true) {\n  //     var marker = new kakao.maps.Marker({\n  //       position: markerPosition,\n  //     });\n  //     marker.setMap(map);\n  //   }\n  // }, [state, flag]);\n\n  return (\n    <div>\n      <Map // 지도를 표시할 Container\n        center={center}\n        style={{\n          // 지도의 크기\n          width: \"100%\",\n          height: `${mapHeight}px`,\n        }}\n        level={3} // 지도의 확대 레벨\n      >\n        {flag && <MapMarker position={center} />}\n        {test.map((position, index) => (\n          <MapMarker\n            key={`${position.title}-${position.latlng}`}\n            position={position.latlng} // 마커를 표시할 위치\n            image={{\n              src: icon,\n              size: {\n                width: 35,\n                height: 35,\n              }, // 마커이미지의 크기입니다\n            }}\n            title={position.title} // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n          />\n        ))}\n      </Map>\n    </div>\n  );\n}\n\nexport default React.memo(KakaoMap);\n"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,gBAAzB,QAAiD,sBAAjD;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;;AAEA,SAASC,QAAT,OAAmC;EAAA,IAAjB;IAAEC,KAAF;IAASC;EAAT,CAAiB;EACjC,MAAMC,SAAS,GAAGC,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,GAA3B,GAAiCD,MAAM,CAACC,UAA1D;EACA,MAAMC,MAAM,GAAGL,KAAf;EACA,MAAMM,IAAI,GAAGb,MAAM,EAAnB;EACAc,OAAO,CAACC,GAAR,CAAY,OAAOF,IAAnB,EAAyBA,IAAzB;EACA,MAAMG,SAAS,GAAG,CAChB;IACEC,KAAK,EAAE,KADT;IAEEC,MAAM,EAAE;MAAEC,GAAG,EAAE,SAAP;MAAkBC,GAAG,EAAE;IAAvB;EAFV,CADgB,EAKhB;IACEH,KAAK,EAAE,MADT;IAEEC,MAAM,EAAE;MAAEC,GAAG,EAAE,SAAP;MAAkBC,GAAG,EAAE;IAAvB;EAFV,CALgB,EAShB;IACEH,KAAK,EAAE,IADT;IAEEC,MAAM,EAAE;MAAEC,GAAG,EAAE,SAAP;MAAkBC,GAAG,EAAE;IAAvB;EAFV,CATgB,EAahB;IACEH,KAAK,EAAE,MADT;IAEEC,MAAM,EAAE;MAAEC,GAAG,EAAE,SAAP;MAAkBC,GAAG,EAAE;IAAvB;EAFV,CAbgB,CAAlB,CALiC,CAuBjC;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,uBACE,QAAC,GAAD,CAAK;IAAL;MACE,MAAM,EAAER,MADV;MAEE,KAAK,EAAE;QACL;QACAS,KAAK,EAAE,MAFF;QAGLC,MAAM,EAAG,GAAEb,SAAU;MAHhB,CAFT;MAOE,KAAK,EAAE,CAPT,CAOY;MAPZ;MAAA,WASGD,IAAI,iBAAI,QAAC,SAAD;QAAW,QAAQ,EAAEI;MAArB;QAAA;QAAA;QAAA;MAAA,QATX,EAUGC,IAAI,CAACU,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,kBACR,QAAC,SAAD;QAEE,QAAQ,EAAED,QAAQ,CAACN,MAFrB,CAE6B;QAF7B;QAGE,KAAK,EAAE;UACLQ,GAAG,EAAErB,IADA;UAELsB,IAAI,EAAE;YACJN,KAAK,EAAE,EADH;YAEJC,MAAM,EAAE;UAFJ,CAFD,CAKF;;QALE,CAHT;QAUE,KAAK,EAAEE,QAAQ,CAACP,KAVlB,CAUyB;;MAVzB,GACQ,GAAEO,QAAQ,CAACP,KAAM,IAAGO,QAAQ,CAACN,MAAO,EAD5C;QAAA;QAAA;QAAA;MAAA,QADD,CAVH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD;;KA7EQZ,Q;AA+ET,kCAAeT,KAAK,CAAC+B,IAAN,CAAWtB,QAAX,CAAf"},"metadata":{},"sourceType":"module"}