{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { database } from \"./Tags\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport colorSet from \"../../lib/styles/colorSet\";\nimport TagsCheckBox from \"./TagsCheckBox\";\nimport HorizontalLine from \"../common/HorizontalLine\";\nimport PostTemplate from \"../post/PostTemplate\";\n\nfunction IdToShow(_ref) {\n  _s();\n\n  let {\n    TagItems\n  } = _ref;\n  const [tagIdsUrl, setTagIdsUrl] = useState(\"\");\n  const [showsId, setShowsId] = useState(null);\n  const [shows, setShows] = useState(null);\n  const [tags, setTags] = useState(null);\n  const [tagsId, setTagsId] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchShowsId = async () => {\n      try {\n        setError(null);\n        setShowsId(null);\n        const tagObject = TagItems.reduce((acc, tagName) => {\n          if (database.hasOwnProperty(tagName)) {\n            acc[tagName] = database[tagName];\n          }\n\n          return acc;\n        }, {});\n        const tagIds = Object.values(tagObject).filter(value => typeof value === \"number\");\n        const tagIdsString = tagIds.join(\"&\");\n        tagIds.sort((a, b) => a - b);\n        const url = tagIdsString ? `/api/exhibition_showId/${tagIdsString}` : \"/api/shows\"; // const response = await axios.get(`https://exhi-lover.com${url}`);\n\n        const response = await axios.get(`http://localhost:5100${url}`);\n\n        if (url !== \"/api/shows\") {\n          const exhibitionIds = response.data.map(_ref2 => {\n            let {\n              exhibition_id\n            } = _ref2;\n            return exhibition_id;\n          });\n          exhibitionIds.sort((a, b) => a - b);\n          setShowsId(exhibitionIds);\n          console.log(showsId);\n          setShows(null);\n        } else if (url === \"/api/shows\") {\n          setShows(response.data);\n        }\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    const fetchShow = async () => {\n      if (showsId !== null) {\n        try {\n          setError(null);\n          setShows(null);\n          const showUrl = showsId ? `/api/shows_id/${showsId}` : \"/api/shows\"; // const response = await axios.get(`https://exhi-lover.com${showUrl}`);\n\n          const response = await axios.get(`http://localhost:5100${showUrl}`);\n          setShows(response.data);\n        } catch (e) {\n          setError(e);\n        }\n      }\n    }; // const fetchTagsId = async () => {\n    //   try {\n    //     setError(null);\n    //     const tagsIdData = await Promise.all(\n    //       shows.map(async (show) => {\n    //         const url = `/api/exhibition_tags/${show.id}`;\n    //         // const response = await axios.get(`https://exhi-lover.com${url}`);\n    //         const response = await axios.get(`http://localhost:5100${url}`);\n    //         return response.data;\n    //       })\n    //     );\n    //     if (tagsIdData.length > 0) {\n    //       const tagsIdArray = tagsIdData.reduce((acc, innerArray) => {\n    //         innerArray.forEach((row) => {\n    //           const { exhibition_id, tag_id } = row;\n    //           const index = acc.findIndex(\n    //             (obj) => obj.exhibition_id === exhibition_id\n    //           );\n    //           if (index === -1) {\n    //             acc.push({ exhibition_id, tags: [tag_id] });\n    //           } else {\n    //             acc[index].tags.push(tag_id);\n    //           }\n    //         });\n    //         return acc;\n    //       }, []);\n    //       setTagsId(tagsIdArray);\n    //     }\n    //   } catch (e) {\n    //     setError(e);\n    //   }\n    // };\n\n\n    fetchShowsId(); // fetchTagsId();\n  }, [TagItems, showsId]);\n  return {\n    shows,\n    tags\n  };\n}\n\n_s(IdToShow, \"2RYjoGVfeSK6n+vCd4uWKRbzu/8=\");\n\n_c = IdToShow;\nexport default IdToShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"IdToShow\");","map":{"version":3,"names":["useState","useEffect","database","styled","axios","colorSet","TagsCheckBox","HorizontalLine","PostTemplate","IdToShow","TagItems","tagIdsUrl","setTagIdsUrl","showsId","setShowsId","shows","setShows","tags","setTags","tagsId","setTagsId","error","setError","fetchShowsId","tagObject","reduce","acc","tagName","hasOwnProperty","tagIds","Object","values","filter","value","tagIdsString","join","sort","a","b","url","response","get","exhibitionIds","data","map","exhibition_id","console","log","e","fetchShow","showUrl"],"sources":["/Users/andrew/Desktop/exhi/exhi/client/src/component/hashtag/IdToShow.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { database } from \"./Tags\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport colorSet from \"../../lib/styles/colorSet\";\nimport TagsCheckBox from \"./TagsCheckBox\";\nimport HorizontalLine from \"../common/HorizontalLine\";\nimport PostTemplate from \"../post/PostTemplate\";\n\nfunction IdToShow({ TagItems }) {\n  const [tagIdsUrl, setTagIdsUrl] = useState(\"\");\n  const [showsId, setShowsId] = useState(null);\n  const [shows, setShows] = useState(null);\n  const [tags, setTags] = useState(null);\n  const [tagsId, setTagsId] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchShowsId = async () => {\n      try {\n        setError(null);\n        setShowsId(null);\n        const tagObject = TagItems.reduce((acc, tagName) => {\n          if (database.hasOwnProperty(tagName)) {\n            acc[tagName] = database[tagName];\n          }\n          return acc;\n        }, {});\n        const tagIds = Object.values(tagObject).filter(\n          (value) => typeof value === \"number\"\n        );\n        const tagIdsString = tagIds.join(\"&\");\n        tagIds.sort((a, b) => a - b);\n        const url = tagIdsString\n          ? `/api/exhibition_showId/${tagIdsString}`\n          : \"/api/shows\";\n        // const response = await axios.get(`https://exhi-lover.com${url}`);\n        const response = await axios.get(`http://localhost:5100${url}`);\n        if (url !== \"/api/shows\") {\n          const exhibitionIds = response.data.map(\n            ({ exhibition_id }) => exhibition_id\n          );\n          exhibitionIds.sort((a, b) => a - b);\n\n          setShowsId(exhibitionIds);\n          console.log(showsId);\n          setShows(null);\n        } else if (url === \"/api/shows\") {\n          setShows(response.data);\n        }\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    const fetchShow = async () => {\n      if (showsId !== null) {\n        try {\n          setError(null);\n          setShows(null);\n          const showUrl = showsId ? `/api/shows_id/${showsId}` : \"/api/shows\";\n          // const response = await axios.get(`https://exhi-lover.com${showUrl}`);\n          const response = await axios.get(`http://localhost:5100${showUrl}`);\n          setShows(response.data);\n        } catch (e) {\n          setError(e);\n        }\n      }\n    };\n\n    // const fetchTagsId = async () => {\n    //   try {\n    //     setError(null);\n    //     const tagsIdData = await Promise.all(\n    //       shows.map(async (show) => {\n    //         const url = `/api/exhibition_tags/${show.id}`;\n    //         // const response = await axios.get(`https://exhi-lover.com${url}`);\n    //         const response = await axios.get(`http://localhost:5100${url}`);\n    //         return response.data;\n    //       })\n    //     );\n    //     if (tagsIdData.length > 0) {\n    //       const tagsIdArray = tagsIdData.reduce((acc, innerArray) => {\n    //         innerArray.forEach((row) => {\n    //           const { exhibition_id, tag_id } = row;\n    //           const index = acc.findIndex(\n    //             (obj) => obj.exhibition_id === exhibition_id\n    //           );\n    //           if (index === -1) {\n    //             acc.push({ exhibition_id, tags: [tag_id] });\n    //           } else {\n    //             acc[index].tags.push(tag_id);\n    //           }\n    //         });\n    //         return acc;\n    //       }, []);\n    //       setTagsId(tagsIdArray);\n    //     }\n    //   } catch (e) {\n    //     setError(e);\n    //   }\n    // };\n\n    fetchShowsId();\n\n    // fetchTagsId();\n  }, [TagItems, showsId]);\n\n  return { shows, tags };\n}\n\nexport default IdToShow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}