{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/MapTemplate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport KakaoMap from \"./KaKaoMap\";\nimport { fetchGalleryLocation } from \"../../lib/api/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapBox = styled.div`\n  width: 100%;\n  align-items: center;\n  margin: 0;\n\n  @media (max-width: 560px) {\n    height: calc(110vw + 50px);\n  }\n\n  @media (min-width: 561px) {\n    height: 666px;\n  }\n`;\n_c = MapBox;\n\nconst MapTemplate = () => {\n  _s();\n\n  const [state, setState] = useState({\n    center: {\n      lat: 37.56649,\n      // 서울 기본 좌표\n      lng: 126.978488\n    },\n    errMsg: null,\n    isLoading: true\n  }); // TanStack Query를 사용해 갤러리 위치 데이터를 가져옴\n\n  const {\n    data: galleries,\n    isLoading,\n    error\n  } = useQuery({\n    queryKey: [\"galleries\"],\n    queryFn: fetchGalleryLocation\n  });\n  const [flag, setFlag] = useState(false); // 마커 활성화 상태 관리\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      // 사용자의 현재 위치 가져오기\n      navigator.geolocation.getCurrentPosition(position => {\n        setState(prev => ({ ...prev,\n          center: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          },\n          isLoading: false\n        }));\n      }, err => {\n        setState(prev => ({ ...prev,\n          errMsg: err.message,\n          isLoading: false\n        }));\n      });\n    } else {\n      setState(prev => ({ ...prev,\n        errMsg: \"Geolocation을 사용할 수 없습니다.\",\n        isLoading: false\n      }));\n    }\n  }, []); // 데이터 로딩이 완료되었을 때 flag를 true로 설정\n\n  useEffect(() => {\n    if (!state.isLoading && !isGalleriesLoading && galleries) {\n      setFlag(true);\n    }\n  }, [state.isLoading, isGalleriesLoading, galleries]);\n  if (isGalleriesLoading || state.isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 53\n  }, this);\n  if (galleriesError || state.errMsg) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 46\n  }, this); // 갤러리 위치 데이터를 포맷팅하여 KakaoMap에 전달할 마커 위치 생성\n\n  const positions = galleries.map(gallery => ({\n    id: gallery.id,\n    title: gallery.gallery_name,\n    latlng: {\n      lat: parseFloat(gallery.gallery_add_tude.split(\",\")[0]),\n      lng: parseFloat(gallery.gallery_add_tude.split(\",\")[1])\n    },\n    add: gallery.gallery_add_word,\n    contact: gallery.gallery_phone_num,\n    url: gallery.site,\n    onDisplay: gallery.on_display\n  }));\n  return /*#__PURE__*/_jsxDEV(MapBox, {\n    children: flag && /*#__PURE__*/_jsxDEV(KakaoMap, {\n      lat: state.center.lat,\n      lng: state.center.lng,\n      showMarker: flag // showMarker로 flag 전달\n      ,\n      galleriesMarker: positions // 포맷된 마커 데이터 전달\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapTemplate, \"mn0nirPvwUljf7QttZrceFQZrpY=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = MapTemplate;\nexport default MapTemplate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapBox\");\n$RefreshReg$(_c2, \"MapTemplate\");","map":{"version":3,"names":["React","useState","useEffect","styled","useQuery","KakaoMap","fetchGalleryLocation","MapBox","div","MapTemplate","state","setState","center","lat","lng","errMsg","isLoading","data","galleries","error","queryKey","queryFn","flag","setFlag","navigator","geolocation","getCurrentPosition","position","prev","coords","latitude","longitude","err","message","isGalleriesLoading","galleriesError","positions","map","gallery","id","title","gallery_name","latlng","parseFloat","gallery_add_tude","split","add","gallery_add_word","contact","gallery_phone_num","url","site","onDisplay","on_display"],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/MapTemplate.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport KakaoMap from \"./KaKaoMap\";\nimport { fetchGalleryLocation } from \"../../lib/api/Api\";\n\nconst MapBox = styled.div`\n  width: 100%;\n  align-items: center;\n  margin: 0;\n\n  @media (max-width: 560px) {\n    height: calc(110vw + 50px);\n  }\n\n  @media (min-width: 561px) {\n    height: 666px;\n  }\n`;\n\nconst MapTemplate = () => {\n  const [state, setState] = useState({\n    center: {\n      lat: 37.56649, // 서울 기본 좌표\n      lng: 126.978488,\n    },\n    errMsg: null,\n    isLoading: true,\n  });\n\n  // TanStack Query를 사용해 갤러리 위치 데이터를 가져옴\n  const {\n    data: galleries,\n    isLoading,\n    error,\n  } = useQuery({\n    queryKey: [\"galleries\"],\n    queryFn: fetchGalleryLocation,\n  });\n\n  const [flag, setFlag] = useState(false); // 마커 활성화 상태 관리\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      // 사용자의 현재 위치 가져오기\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setState((prev) => ({\n            ...prev,\n            center: {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            },\n            isLoading: false,\n          }));\n        },\n        (err) => {\n          setState((prev) => ({\n            ...prev,\n            errMsg: err.message,\n            isLoading: false,\n          }));\n        }\n      );\n    } else {\n      setState((prev) => ({\n        ...prev,\n        errMsg: \"Geolocation을 사용할 수 없습니다.\",\n        isLoading: false,\n      }));\n    }\n  }, []);\n\n  // 데이터 로딩이 완료되었을 때 flag를 true로 설정\n  useEffect(() => {\n    if (!state.isLoading && !isGalleriesLoading && galleries) {\n      setFlag(true);\n    }\n  }, [state.isLoading, isGalleriesLoading, galleries]);\n\n  if (isGalleriesLoading || state.isLoading) return <div>Loading map...</div>;\n  if (galleriesError || state.errMsg) return <div>Error loading map...</div>;\n\n  // 갤러리 위치 데이터를 포맷팅하여 KakaoMap에 전달할 마커 위치 생성\n  const positions = galleries.map((gallery) => ({\n    id: gallery.id,\n    title: gallery.gallery_name,\n    latlng: {\n      lat: parseFloat(gallery.gallery_add_tude.split(\",\")[0]),\n      lng: parseFloat(gallery.gallery_add_tude.split(\",\")[1]),\n    },\n    add: gallery.gallery_add_word,\n    contact: gallery.gallery_phone_num,\n    url: gallery.site,\n    onDisplay: gallery.on_display,\n  }));\n\n  return (\n    <MapBox>\n      {flag && (\n        <KakaoMap\n          lat={state.center.lat}\n          lng={state.center.lng}\n          showMarker={flag} // showMarker로 flag 전달\n          galleriesMarker={positions} // 포맷된 마커 데이터 전달\n        />\n      )}\n    </MapBox>\n  );\n};\n\nexport default MapTemplate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}