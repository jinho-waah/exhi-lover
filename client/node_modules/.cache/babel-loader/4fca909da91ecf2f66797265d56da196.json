{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport Post from \"../Post\";\nimport Typography from \"@mui/material/Typography\";\nimport axios from \"axios\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [shows, setShows] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchShows = async () => {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null);\n        setShows(null); //local에서 할때\n        //const response = await axios.get(\"http://localhost:5100/api/shows\");\n        //build할때\n\n        const response = await axios.get(\"https://exhi-lover.com/api/shows\");\n        setShows(response.data); // 데이터는 response.data 안에 들어있습니다.\n\n        console.log(shows);\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    fetchShows();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Search, \"VxLDQCHQIXJ7hBohkb5khdzsdzo=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","Box","TextField","Paper","Post","Typography","axios","Search","shows","setShows","error","setError","fetchShows","response","get","data","console","log","e"],"sources":["/Users/andrew/Desktop/exhi/exhi/client/src/component/items/Search.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport Post from \"../Post\";\nimport Typography from \"@mui/material/Typography\";\nimport axios from \"axios\";\n\nfunction Search() {\n  const [shows, setShows] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchShows = async () => {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null);\n        setShows(null);\n\n        //local에서 할때\n        //const response = await axios.get(\"http://localhost:5100/api/shows\");\n        //build할때\n        const response = await axios.get(\"https://exhi-lover.com/api/shows\");\n        setShows(response.data); // 데이터는 response.data 안에 들어있습니다.\n        console.log(shows);\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    fetchShows();\n  }, []);\n  return <></>;\n}\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,YAAY;MAC7B,IAAI;QACF;QACAD,QAAQ,CAAC,IAAD,CAAR;QACAF,QAAQ,CAAC,IAAD,CAAR,CAHE,CAKF;QACA;QACA;;QACA,MAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,kCAAV,CAAvB;QACAL,QAAQ,CAACI,QAAQ,CAACE,IAAV,CAAR,CATE,CASuB;;QACzBC,OAAO,CAACC,GAAR,CAAYT,KAAZ;MACD,CAXD,CAWE,OAAOU,CAAP,EAAU;QACVP,QAAQ,CAACO,CAAD,CAAR;MACD;IACF,CAfD;;IAiBAN,UAAU;EACX,CAnBQ,EAmBN,EAnBM,CAAT;EAoBA,oBAAO,qCAAP;AACD;;GAzBQL,M;;KAAAA,M;AA2BT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}