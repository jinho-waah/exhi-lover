{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport createRequestSaga, { createRequestActionTypes } from \"../lib/createRequestSaga\";\nimport * as postsApi from \"../lib/api/post\";\nimport { takeLatest } from \"redux-saga/effects\";\nconst [READ_POST, READ_POST_SUCCESS, READ_POST_FAILURE] = createRequestActionTypes(\"post/READ_POST\");\nexport const readPost = createAction(READ_POST);\nconst readPostSaga = createRequestSaga(READ_POST, postsApi.readPost);\nexport function* postSaga() {\n  yield takeLatest(READ_POST, readPostSaga);\n}\nconst initialState = {\n  post: null,\n  error: null\n};\nconst post = handleActions({\n  [READ_POST_SUCCESS]: (state, _ref) => {\n    let {\n      payload: post\n    } = _ref;\n    return { ...state,\n      post\n    };\n  },\n  [READ_POST_FAILURE]: (state, _ref2) => {\n    let {\n      payload: error\n    } = _ref2;\n    return { ...state,\n      error\n    };\n  }\n}, initialState);\nexport default post;","map":{"version":3,"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","postsApi","takeLatest","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","readPost","readPostSaga","postSaga","initialState","post","error","state","payload"],"sources":["/Users/andrew/Desktop/exhi/exhi/client/src/modules/post.js"],"sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from \"../lib/createRequestSaga\";\nimport * as postsApi from \"../lib/api/post\";\nimport { takeLatest } from \"redux-saga/effects\";\n\nconst [READ_POST, READ_POST_SUCCESS, READ_POST_FAILURE] =\n  createRequestActionTypes(\"post/READ_POST\");\n\nexport const readPost = createAction(READ_POST);\n\nconst readPostSaga = createRequestSaga(READ_POST, postsApi.readPost);\nexport function* postSaga() {\n  yield takeLatest(READ_POST, readPostSaga);\n}\n\nconst initialState = {\n  post: null,\n  error: null,\n};\n\nconst post = handleActions(\n  {\n    [READ_POST_SUCCESS]: (state, { payload: post }) => ({\n      ...state,\n      post,\n    }),\n    [READ_POST_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n  },\n  initialState\n);\n\nexport default post;\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,QAAZ,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,MAAM,CAACC,SAAD,EAAYC,iBAAZ,EAA+BC,iBAA/B,IACJL,wBAAwB,CAAC,gBAAD,CAD1B;AAGA,OAAO,MAAMM,QAAQ,GAAGT,YAAY,CAACM,SAAD,CAA7B;AAEP,MAAMI,YAAY,GAAGR,iBAAiB,CAACI,SAAD,EAAYF,QAAQ,CAACK,QAArB,CAAtC;AACA,OAAO,UAAUE,QAAV,GAAqB;EAC1B,MAAMN,UAAU,CAACC,SAAD,EAAYI,YAAZ,CAAhB;AACD;AAED,MAAME,YAAY,GAAG;EACnBC,IAAI,EAAE,IADa;EAEnBC,KAAK,EAAE;AAFY,CAArB;AAKA,MAAMD,IAAI,GAAGZ,aAAa,CACxB;EACE,CAACM,iBAAD,GAAqB,CAACQ,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEH;IAAX,CAAR;IAAA,OAA+B,EAClD,GAAGE,KAD+C;MAElDF;IAFkD,CAA/B;EAAA,CADvB;EAKE,CAACL,iBAAD,GAAqB,CAACO,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEF;IAAX,CAAR;IAAA,OAAgC,EACnD,GAAGC,KADgD;MAEnDD;IAFmD,CAAhC;EAAA;AALvB,CADwB,EAWxBF,YAXwB,CAA1B;AAcA,eAAeC,IAAf"},"metadata":{},"sourceType":"module"}