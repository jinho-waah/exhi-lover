{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import styled from \"styled-components\";\n// import KakaoMap from \"./KaKaoMap\";\n// import Marker from \"./Marker\";\n// import { useQuery } from \"@tanstack/react-query\";\n// const MapBox = styled.div`\n//   width: 100%;\n//   align-items: center;\n//   margin: 0;\n//   @media (max-width: 560px) {\n//     height: calc(110vw + 50px);\n//   }\n//   @media (min-width: 561px) {\n//     height: 666px;\n//   }\n// `;\n// const fetchUserLocation = () => {\n//   return new Promise((resolve, reject) => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.getCurrentPosition(\n//         (position) => {\n//           resolve({\n//             lat: position.coords.latitude,\n//             lng: position.coords.longitude,\n//           });\n//         },\n//         (err) => {\n//           reject(new Error(\"geolocation을 사용할 수 없어요.\"));\n//         }\n//       );\n//     } else {\n//       reject(new Error(\"geolocation을 지원하지 않습니다.\"));\n//     }\n//   });\n// };\n// const MapTemplate = () => {\n//   const [flag, setFlag] = useState(false); // marker 활성화를 위한 flag 유지\n//   const {\n//     data: userLocation,\n//     isError: locationError,\n//     isLoading: locationLoading,\n//   } = useQuery({\n//     queryKey: [\"userLocation\"],\n//     queryFn: fetchUserLocation,\n//   });\n//   const { positions, isLoading: markersLoading } = Marker(); // Marker에서 positions과 로딩 상태 받아옴\n//   useEffect(() => {\n//     if (!locationLoading && !markersLoading && userLocation) {\n//       setFlag(true); // 모든 로딩이 완료되었을 때 flag를 true로 설정\n//     }\n//   }, [locationLoading, markersLoading, userLocation]);\n//   if (locationError) {\n//     return <div>{locationError.message}</div>;\n//   }\n//   return (\n//     <MapBox>\n//       {flag && (\n//         <KakaoMap\n//           lat={userLocation.lat}\n//           lng={userLocation.lng}\n//           flag={flag} // showMarker에 flag 값 전달\n//           galleriesMarker={positions} // 갤러리 마커 데이터 전달\n//         />\n//       )}\n//     </MapBox>\n//   );\n// };\n// export default MapTemplate;","map":{"version":3,"names":[],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/MapTemplate.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import styled from \"styled-components\";\n// import KakaoMap from \"./KaKaoMap\";\n// import Marker from \"./Marker\";\n// import { useQuery } from \"@tanstack/react-query\";\n\n// const MapBox = styled.div`\n//   width: 100%;\n//   align-items: center;\n//   margin: 0;\n\n//   @media (max-width: 560px) {\n//     height: calc(110vw + 50px);\n//   }\n\n//   @media (min-width: 561px) {\n//     height: 666px;\n//   }\n// `;\n\n// const fetchUserLocation = () => {\n//   return new Promise((resolve, reject) => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.getCurrentPosition(\n//         (position) => {\n//           resolve({\n//             lat: position.coords.latitude,\n//             lng: position.coords.longitude,\n//           });\n//         },\n//         (err) => {\n//           reject(new Error(\"geolocation을 사용할 수 없어요.\"));\n//         }\n//       );\n//     } else {\n//       reject(new Error(\"geolocation을 지원하지 않습니다.\"));\n//     }\n//   });\n// };\n\n// const MapTemplate = () => {\n//   const [flag, setFlag] = useState(false); // marker 활성화를 위한 flag 유지\n\n//   const {\n//     data: userLocation,\n//     isError: locationError,\n//     isLoading: locationLoading,\n//   } = useQuery({\n//     queryKey: [\"userLocation\"],\n//     queryFn: fetchUserLocation,\n//   });\n\n//   const { positions, isLoading: markersLoading } = Marker(); // Marker에서 positions과 로딩 상태 받아옴\n\n//   useEffect(() => {\n//     if (!locationLoading && !markersLoading && userLocation) {\n//       setFlag(true); // 모든 로딩이 완료되었을 때 flag를 true로 설정\n//     }\n//   }, [locationLoading, markersLoading, userLocation]);\n\n//   if (locationError) {\n//     return <div>{locationError.message}</div>;\n//   }\n\n//   return (\n//     <MapBox>\n//       {flag && (\n//         <KakaoMap\n//           lat={userLocation.lat}\n//           lng={userLocation.lng}\n//           flag={flag} // showMarker에 flag 값 전달\n//           galleriesMarker={positions} // 갤러리 마커 데이터 전달\n//         />\n//       )}\n//     </MapBox>\n//   );\n// };\n\n// export default MapTemplate;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}