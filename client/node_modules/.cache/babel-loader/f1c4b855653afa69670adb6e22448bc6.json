{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { fetchShowTagsId, fetchTagName } from \"../../lib/api/Api\";\n\nfunction FetchShowTags(galleriesInfo) {\n  _s();\n\n  const [tagIds, setTagIds] = useState(null);\n  const [tags, setTags] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showIds, setShowIds] = useState(null); //   console.log(\"ga\", galleriesInfo);\n\n  useEffect(() => {\n    if (galleriesInfo !== null) {\n      setShowIds(galleriesInfo.map(galleryInfo => {\n        return galleryInfo.id;\n      }));\n    }\n  }, [galleriesInfo]);\n  useEffect(() => {\n    const fetchTagsIds = async () => {\n      try {\n        setError(null);\n        const ids = await fetchShowTagsId(showIds);\n        const sortedIds = [...ids.filter(item => item.tag_id === 52).map(item => item.tag_id), ...ids.filter(item => item.tag_id !== 52).map(item => item.tag_id)];\n        setTagIds(sortedIds);\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    fetchTagsIds();\n  }, [showIds]); //   useEffect(() => {\n  //     const fetchTags = async () => {\n  //       try {\n  //         setError(null);\n  //         const fetchedTags = await Promise.all(\n  //           tagIds.map(async (tagId) => {\n  //             return fetchTagName(tagId);\n  //           })\n  //         );\n  //         setTags(fetchedTags);\n  //       } catch (e) {\n  //         setError(e);\n  //       }\n  //     };\n  //     if (tagIds && tagIds.length > 0) {\n  //       fetchTags()\n  //         .then(() => setLoading(false))\n  //         .catch((error) => setError(error));\n  //     }\n  //   }, [tagIds]);\n\n  return tags;\n}\n\n_s(FetchShowTags, \"42EXrGETng3wQZN8pC38oM2hpw8=\");\n\n_c = FetchShowTags;\nexport default FetchShowTags;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchShowTags\");","map":{"version":3,"names":["useState","useEffect","fetchShowTagsId","fetchTagName","FetchShowTags","galleriesInfo","tagIds","setTagIds","tags","setTags","loading","setLoading","error","setError","showIds","setShowIds","map","galleryInfo","id","fetchTagsIds","ids","sortedIds","filter","item","tag_id","e"],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/FetchShowTags.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { fetchShowTagsId, fetchTagName } from \"../../lib/api/Api\";\n\nfunction FetchShowTags(galleriesInfo) {\n  const [tagIds, setTagIds] = useState(null);\n  const [tags, setTags] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showIds, setShowIds] = useState(null);\n  //   console.log(\"ga\", galleriesInfo);\n  useEffect(() => {\n    if (galleriesInfo !== null) {\n      setShowIds(\n        galleriesInfo.map((galleryInfo) => {\n          return galleryInfo.id;\n        })\n      );\n    }\n  }, [galleriesInfo]);\n\n  useEffect(() => {\n    const fetchTagsIds = async () => {\n      try {\n        setError(null);\n\n        const ids = await fetchShowTagsId(showIds);\n        const sortedIds = [\n          ...ids\n            .filter((item) => item.tag_id === 52)\n            .map((item) => item.tag_id),\n          ...ids\n            .filter((item) => item.tag_id !== 52)\n            .map((item) => item.tag_id),\n        ];\n        setTagIds(sortedIds);\n      } catch (e) {\n        setError(e);\n      }\n    };\n    fetchTagsIds();\n  }, [showIds]);\n\n  //   useEffect(() => {\n  //     const fetchTags = async () => {\n  //       try {\n  //         setError(null);\n  //         const fetchedTags = await Promise.all(\n  //           tagIds.map(async (tagId) => {\n  //             return fetchTagName(tagId);\n  //           })\n  //         );\n  //         setTags(fetchedTags);\n  //       } catch (e) {\n  //         setError(e);\n  //       }\n  //     };\n\n  //     if (tagIds && tagIds.length > 0) {\n  //       fetchTags()\n  //         .then(() => setLoading(false))\n  //         .catch((error) => setError(error));\n  //     }\n  //   }, [tagIds]);\n\n  return tags;\n}\n\nexport default FetchShowTags;\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,mBAA9C;;AAEA,SAASC,aAAT,CAAuBC,aAAvB,EAAsC;EAAA;;EACpC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC,CALoC,CAMpC;;EACAC,SAAS,CAAC,MAAM;IACd,IAAII,aAAa,KAAK,IAAtB,EAA4B;MAC1BU,UAAU,CACRV,aAAa,CAACW,GAAd,CAAmBC,WAAD,IAAiB;QACjC,OAAOA,WAAW,CAACC,EAAnB;MACD,CAFD,CADQ,CAAV;IAKD;EACF,CARQ,EAQN,CAACb,aAAD,CARM,CAAT;EAUAJ,SAAS,CAAC,MAAM;IACd,MAAMkB,YAAY,GAAG,YAAY;MAC/B,IAAI;QACFN,QAAQ,CAAC,IAAD,CAAR;QAEA,MAAMO,GAAG,GAAG,MAAMlB,eAAe,CAACY,OAAD,CAAjC;QACA,MAAMO,SAAS,GAAG,CAChB,GAAGD,GAAG,CACHE,MADA,CACQC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgB,EADjC,EAEAR,GAFA,CAEKO,IAAD,IAAUA,IAAI,CAACC,MAFnB,CADa,EAIhB,GAAGJ,GAAG,CACHE,MADA,CACQC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgB,EADjC,EAEAR,GAFA,CAEKO,IAAD,IAAUA,IAAI,CAACC,MAFnB,CAJa,CAAlB;QAQAjB,SAAS,CAACc,SAAD,CAAT;MACD,CAbD,CAaE,OAAOI,CAAP,EAAU;QACVZ,QAAQ,CAACY,CAAD,CAAR;MACD;IACF,CAjBD;;IAkBAN,YAAY;EACb,CApBQ,EAoBN,CAACL,OAAD,CApBM,CAAT,CAjBoC,CAuCpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAON,IAAP;AACD;;GA9DQJ,a;;KAAAA,a;AAgET,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}