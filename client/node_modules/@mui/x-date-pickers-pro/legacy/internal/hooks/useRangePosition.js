import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import useControlled from '@mui/utils/useControlled';
import useEventCallback from '@mui/utils/useEventCallback';
export var useRangePosition = function useRangePosition(props) {
  var _props$defaultRangePo;
  var _useControlled = useControlled({
      name: 'useRangePosition',
      state: 'rangePosition',
      controlled: props.rangePosition,
      default: (_props$defaultRangePo = props.defaultRangePosition) != null ? _props$defaultRangePo : 'start'
    }),
    _useControlled2 = _slicedToArray(_useControlled, 2),
    rangePosition = _useControlled2[0],
    setRangePosition = _useControlled2[1];
  var handleRangePositionChange = useEventCallback(function (newRangePosition) {
    var _props$onRangePositio;
    setRangePosition(newRangePosition);
    (_props$onRangePositio = props.onRangePositionChange) == null ? void 0 : _props$onRangePositio.call(props, newRangePosition);
  });
  return {
    rangePosition: rangePosition,
    onRangePositionChange: handleRangePositionChange
  };
};