{"ast":null,"code":"import { getKeys } from \"./chunk-4MXCHP7N.mjs\";\nimport { getUncontrolledKey, makeUncontrolledKeyMap } from \"./chunk-SI4FST6P.mjs\";\nimport { omitUndefined } from \"./chunk-RVDAKL7Q.mjs\";\nimport { useNavermaps } from \"./chunk-TWFVD6WD.mjs\";\nimport { HandleEvents } from \"./chunk-533MYCRP.mjs\";\nimport { Overlay } from \"./chunk-IV7GZJYG.mjs\"; // src/overlays/marker.tsx\n\nimport mapKeys from \"lodash.mapkeys\";\nimport pick from \"lodash.pick\";\nimport { forwardRef, useLayoutEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { useFirstMountState } from \"react-use\";\nimport { jsx } from \"react/jsx-runtime\";\nvar primitiveKeys = [\"animation\", \"icon\", \"shape\", \"title\", \"cursor\", \"clickable\", \"draggable\", \"visible\", \"zIndex\"];\nvar locationalKeys = [\"position\"];\nvar uncontrolledKeyMap = makeUncontrolledKeyMap(locationalKeys);\nvar kvoKeys = [...primitiveKeys, ...locationalKeys];\nvar kvoEvents = kvoKeys.map(key => `${key}_changed`);\nvar uiEvents = [\"mousedown\", \"mouseup\", \"click\", \"dblclick\", \"rightclick\", \"mouseover\", \"mouseout\", \"dragstart\", \"drag\", \"dragend\"];\nvar events = [...uiEvents, ...kvoEvents];\n\nfunction makeInitialOption(props) {\n  const uncontrolledProps = pick(props, getKeys(uncontrolledKeyMap));\n  const prefixCleared = mapKeys(uncontrolledProps, (_, key) => uncontrolledKeyMap[key]);\n  const kvoProps = pick(props, kvoKeys);\n  return omitUndefined({ ...kvoProps,\n    ...prefixCleared\n  });\n}\n\nfunction isLocationalKey(key) {\n  return locationalKeys.includes(key);\n}\n\nfunction isEqualKvo(kvo, target) {\n  if (kvo === void 0) {\n    return false;\n  }\n\n  if (kvo === target) {\n    return true;\n  }\n\n  try {\n    return kvo.equals(target);\n  } catch {\n    return kvo === target;\n  }\n}\n\nvar Marker = forwardRef(function Marker2(props, ref) {\n  const navermaps = useNavermaps();\n  const [marker] = useState(() => new navermaps.Marker(makeInitialOption(props)));\n  useImperativeHandle(ref, () => marker);\n  const isFirst = useFirstMountState();\n  const dirtiesRef = useRef({});\n  dirtiesRef.current = getDirties();\n\n  function getDirties() {\n    if (isFirst) {\n      return {};\n    }\n\n    return kvoKeys.reduce((acc, key) => {\n      if (props[key] === void 0) {\n        return acc;\n      }\n\n      if (isLocationalKey(key) && props[getUncontrolledKey(key)] !== void 0) {\n        return acc;\n      }\n\n      const kvos = marker.getOptions(key);\n\n      if (isEqualKvo(kvos[key], props[key])) {\n        return acc;\n      }\n\n      return { ...acc,\n        [key]: props[key]\n      };\n    }, {});\n  }\n\n  function pickDirties(keys) {\n    return pick(dirtiesRef.current, keys);\n  }\n\n  useLayoutEffect(() => {\n    const {\n      position\n    } = pickDirties([\"position\"]);\n\n    if (position) {\n      marker.setPosition(position);\n    }\n  }, [dirtiesRef.current[\"position\"]]);\n  useLayoutEffect(() => {\n    const dirties = pickDirties(primitiveKeys);\n\n    if (Object.values(dirties).length < 1) {\n      return;\n    }\n\n    marker.setOptions(dirties);\n  }, primitiveKeys.map(key => dirtiesRef.current[key]));\n  return /* @__PURE__ */jsx(Overlay, {\n    element: marker,\n    children: /* @__PURE__ */jsx(HandleEvents, {\n      events,\n      listeners: props\n    })\n  });\n});\nexport { Marker };","map":{"version":3,"mappings":"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","names":["mapKeys","pick","forwardRef","useLayoutEffect","useImperativeHandle","useRef","useState","useFirstMountState","primitiveKeys","locationalKeys","uncontrolledKeyMap","makeUncontrolledKeyMap","kvoKeys","kvoEvents","map","key","uiEvents","events","makeInitialOption","props","uncontrolledProps","getKeys","prefixCleared","_","kvoProps","omitUndefined","isLocationalKey","includes","isEqualKvo","kvo","target","equals","Marker","ref","navermaps","useNavermaps","marker","isFirst","dirtiesRef","current","getDirties","reduce","acc","getUncontrolledKey","kvos","getOptions","pickDirties","keys","position","setPosition","dirties","Object","values","length","setOptions","Overlay","element","children","HandleEvents","listeners"],"sources":["/Users/andrew/Desktop/exhi/exhi/client/node_modules/react-naver-maps/src/overlays/marker.tsx"],"sourcesContent":["import mapKeys from 'lodash.mapkeys';\nimport pick from 'lodash.pick';\nimport { forwardRef, useLayoutEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { useFirstMountState } from 'react-use';\n\nimport { HandleEvents } from '../helpers/event';\nimport { Overlay } from '../overlay';\nimport type { UIEventHandlers } from '../types/event';\nimport { useNavermaps } from '../use-navermaps';\nimport { getKeys } from '../utils/get-keys';\nimport { omitUndefined } from '../utils/omit-undefined';\nimport { getUncontrolledKey, makeUncontrolledKeyMap, UncontrolledKey } from '../utils/uncontrolled';\n\nconst primitiveKeys = [\n  'animation',\n  'icon',\n  'shape',\n  'title',\n  'cursor',\n  'clickable',\n  'draggable',\n  'visible',\n  'zIndex',\n] as const;\nconst locationalKeys = ['position'] as const;\nconst uncontrolledKeyMap = makeUncontrolledKeyMap(locationalKeys);\nconst kvoKeys = [\n  ...primitiveKeys,\n  ...locationalKeys,\n] as const;\nconst kvoEvents = kvoKeys.map(key => `${key}_changed`);\nconst uiEvents = [\n  'mousedown',\n  'mouseup',\n  'click',\n  'dblclick',\n  'rightclick',\n  'mouseover',\n  'mouseout',\n  'dragstart',\n  'drag',\n  'dragend',\n] as const;\nconst events = [...uiEvents, ...kvoEvents];\n\ntype MarkerKVO = {\n  /** Animation??? */\n  animation: naver.maps.Animation;\n  position: naver.maps.Coord | naver.maps.CoordLiteral;\n  icon: string | naver.maps.ImageIcon | naver.maps.SymbolIcon | naver.maps.HtmlIcon;\n  shape: naver.maps.MarkerShape;\n  title: string;\n  cursor: string;\n  clickable: boolean;\n  draggable: boolean;\n  visible: boolean;\n  zIndex: number;\n};\n\ntype UncontrolledProps = {\n  [key in typeof locationalKeys[number] as UncontrolledKey<key>]: MarkerKVO[key];\n};\n\n// TODO: Fix DefinitelyTyped\ntype MarkerOptions = Partial<MarkerKVO>;\n\nexport type Props = MarkerOptions & Partial<UncontrolledProps> & UIEventHandlers<typeof uiEvents> & {\n  onAnimationChanged?: (value: naver.maps.Animation) => void;\n  onPositionChanged?: (value: naver.maps.Coord) => void;\n  onIconChanged?: (value: string | naver.maps.ImageIcon | naver.maps.HtmlIcon | naver.maps.SymbolIcon) => void;\n  onShapeChanged?: (event: naver.maps.MarkerShape) => void;\n  onTitleChanged?: (event: string) => void;\n  onCursorChanged?: (event: string) => void;\n  onClickableChanged?: (event: boolean) => void;\n  onDraggableChanged?: (event: boolean) => void;\n  onVisibleChanged?: (event: boolean) => void;\n  /**\n   * hello yeah\n   * @param event helo?\n   * @returns\n   */\n  onZIndexChanged?: (event: number) => void;\n};\n\nfunction makeInitialOption(props: Props) {\n  const uncontrolledProps = pick(props, getKeys(uncontrolledKeyMap));\n  const prefixCleared = mapKeys(uncontrolledProps, (_, key) => uncontrolledKeyMap[key as keyof typeof uncontrolledKeyMap]);\n  const kvoProps = pick(props, kvoKeys);\n\n  return omitUndefined({ ...kvoProps, ...prefixCleared });\n}\n\nfunction isLocationalKey(key: string): key is typeof locationalKeys[number] {\n  return locationalKeys.includes(key as typeof locationalKeys[number]);\n}\n\nfunction isEqualKvo(kvo: any, target: any) {\n  if (kvo === undefined) {\n    return false;\n  }\n\n  if (kvo === target) {\n    return true;\n  }\n\n  try {\n    return kvo.equals(target);\n  } catch {\n    return kvo === target;\n  }\n}\n\nexport const Marker = forwardRef<naver.maps.Marker, Props>(function Marker(props, ref) {\n  const navermaps = useNavermaps();\n  const [marker] = useState(() => new navermaps.Marker(makeInitialOption(props)));\n  useImperativeHandle<naver.maps.Marker | undefined, naver.maps.Marker | undefined>(ref, () => marker);\n\n  // make dirties\n  const isFirst = useFirstMountState();\n  const dirtiesRef = useRef<Pick<Props, typeof kvoKeys[number]>>({});\n  dirtiesRef.current = getDirties();\n\n  function getDirties() {\n    // initialize의 option과 중복되지 않도록 첫 렌더시 제외한다.\n    if (isFirst) {\n      return {};\n    }\n\n    return kvoKeys.reduce((acc, key) => {\n      if (props[key] === undefined) {\n        return acc;\n      }\n\n      if (isLocationalKey(key) && props[getUncontrolledKey(key)] !== undefined) {\n        return acc;\n      }\n\n      const kvos = marker.getOptions(key);\n      if (isEqualKvo(kvos[key], props[key])) {\n        return acc;\n      }\n\n      return {\n        ...acc,\n        [key]: props[key],\n      };\n    }, {});\n  }\n\n  function pickDirties(keys: readonly string[]) {\n    return pick(dirtiesRef.current, keys);\n  }\n\n  // side effects\n  useLayoutEffect(() => {\n    const { position } = pickDirties(['position']);\n    if (position) {\n      marker.setPosition(position);\n    }\n  }, [dirtiesRef.current['position']]);\n\n  useLayoutEffect(() => {\n    const dirties = pickDirties(primitiveKeys);\n    if (Object.values(dirties).length < 1) {\n      return;\n    }\n\n    marker.setOptions(dirties);\n  }, primitiveKeys.map(key => dirtiesRef.current[key]));\n\n  return (\n    <Overlay element={marker}>\n      <HandleEvents events={events} listeners={props as any} />\n    </Overlay>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}