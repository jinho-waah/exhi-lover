{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KakaoMap.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nimport Marker from \"./Marker\";\nimport { Map, MapMarker, CustomOverlayMap } from \"react-kakao-maps-sdk\";\nimport icon from \"../../lib/icon/loc7.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction KakaoMap(_ref) {\n  _s();\n\n  let {\n    state,\n    flag\n  } = _ref;\n  const mapHeight = window.innerWidth >= 560 ? 560 : window.innerWidth;\n  const center = state;\n  const [isOpen, setIsOpen] = useState(false);\n  const marker = Marker();\n  console.log(typeof marker, marker);\n  const data = [{\n    content: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#000\"\n      },\n      children: \"\\uCE74\\uCE74\\uC624\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this),\n    latlng: {\n      lat: 33.450705,\n      lng: 126.570677\n    }\n  }, {\n    content: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#000\"\n      },\n      children: \"\\uC0DD\\uD0DC\\uC5F0\\uBABB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this),\n    latlng: {\n      lat: 33.450936,\n      lng: 126.569477\n    }\n  }, {\n    content: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#000\"\n      },\n      children: \"\\uD143\\uBC2D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this),\n    latlng: {\n      lat: 33.450879,\n      lng: 126.56994\n    }\n  }, {\n    content: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#000\"\n      },\n      children: \"\\uADFC\\uB9B0\\uACF5\\uC6D0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this),\n    latlng: {\n      lat: 33.451393,\n      lng: 126.570738\n    }\n  }];\n\n  const EventMarkerContainer = _ref2 => {\n    let {\n      position\n    } = _ref2;\n\n    /*#__PURE__*/\n    _jsxDEV(MapMarker, {\n      position: position.latlng // 마커를 표시할 위치\n      ,\n      image: {\n        src: icon,\n        size: {\n          width: 33,\n          height: 33\n        } // 마커이미지의 크기입니다\n\n      }\n    }, `${position.title}-${position.latlng}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Map // 지도를 표시할 Container\n    , {\n      center: center,\n      style: {\n        // 지도의 크기\n        width: \"100%\",\n        height: `${mapHeight}px`\n      },\n      level: 3 // 지도의 확대 레벨\n      ,\n      children: [flag && /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: center\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }, this), marker.map((position, index) => /*#__PURE__*/_jsxDEV(EventMarkerContainer, {\n        position: position\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) // <MapMarker\n      //   key={`${position.title}-${position.latlng}`}\n      //   position={position.latlng} // 마커를 표시할 위치\n      //   clickable={true}\n      //   onClick={() => setIsOpen(true)}\n      //   image={{\n      //     src: icon,\n      //     size: {\n      //       width: 33,\n      //       height: 33,\n      //     }, // 마커이미지의 크기입니다\n      //   }}\n      //   title={position.title} // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n      // >\n      //   {/* MapMarker의 자식을 넣어줌으로 해당 자식이 InfoWindow로 만들어지게 합니다 */}\n      //   {/* 인포윈도우에 표출될 내용으로 HTML 문자열이나 React Component가 가능합니다 */}\n      //   {isOpen && (\n      //     <div style={{ minWidth: \"180px\" }}>\n      //       <div style={{ padding: \"5px\", color: \"#000\" }}>\n      //         {position.title}\n      //       </div>\n      //     </div>\n      //   )}\n      // </MapMarker>\n      )]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(KakaoMap, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = KakaoMap;\nexport default _c2 = /*#__PURE__*/React.memo(KakaoMap);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"KakaoMap\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","Marker","Map","MapMarker","CustomOverlayMap","icon","KakaoMap","state","flag","mapHeight","window","innerWidth","center","isOpen","setIsOpen","marker","console","log","data","content","color","latlng","lat","lng","EventMarkerContainer","position","src","size","width","height","title","map","index","memo"],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KakaoMap.js"],"sourcesContent":["/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nimport Marker from \"./Marker\";\nimport { Map, MapMarker, CustomOverlayMap } from \"react-kakao-maps-sdk\";\nimport icon from \"../../lib/icon/loc7.png\";\n\nfunction KakaoMap({ state, flag }) {\n  const mapHeight = window.innerWidth >= 560 ? 560 : window.innerWidth;\n  const center = state;\n  const [isOpen, setIsOpen] = useState(false);\n  const marker = Marker();\n  console.log(typeof marker, marker);\n  const data = [\n    {\n      content: <div style={{ color: \"#000\" }}>카카오</div>,\n      latlng: { lat: 33.450705, lng: 126.570677 },\n    },\n    {\n      content: <div style={{ color: \"#000\" }}>생태연못</div>,\n      latlng: { lat: 33.450936, lng: 126.569477 },\n    },\n    {\n      content: <div style={{ color: \"#000\" }}>텃밭</div>,\n      latlng: { lat: 33.450879, lng: 126.56994 },\n    },\n    {\n      content: <div style={{ color: \"#000\" }}>근린공원</div>,\n      latlng: { lat: 33.451393, lng: 126.570738 },\n    },\n  ];\n\n  const EventMarkerContainer = ({ position }) => {\n    <MapMarker\n      key={`${position.title}-${position.latlng}`}\n      position={position.latlng} // 마커를 표시할 위치\n      image={{\n        src: icon,\n        size: {\n          width: 33,\n          height: 33,\n        }, // 마커이미지의 크기입니다\n      }}\n    ></MapMarker>;\n  };\n\n  return (\n    <div>\n      <Map // 지도를 표시할 Container\n        center={center}\n        style={{\n          // 지도의 크기\n          width: \"100%\",\n          height: `${mapHeight}px`,\n        }}\n        level={3} // 지도의 확대 레벨\n      >\n        {flag && <MapMarker position={center} />}\n        {marker.map((position, index) => (\n          <EventMarkerContainer key={index} position={position} />\n          // <MapMarker\n          //   key={`${position.title}-${position.latlng}`}\n          //   position={position.latlng} // 마커를 표시할 위치\n          //   clickable={true}\n          //   onClick={() => setIsOpen(true)}\n          //   image={{\n          //     src: icon,\n          //     size: {\n          //       width: 33,\n          //       height: 33,\n          //     }, // 마커이미지의 크기입니다\n          //   }}\n          //   title={position.title} // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n          // >\n          //   {/* MapMarker의 자식을 넣어줌으로 해당 자식이 InfoWindow로 만들어지게 합니다 */}\n          //   {/* 인포윈도우에 표출될 내용으로 HTML 문자열이나 React Component가 가능합니다 */}\n          //   {isOpen && (\n          //     <div style={{ minWidth: \"180px\" }}>\n          //       <div style={{ padding: \"5px\", color: \"#000\" }}>\n          //         {position.title}\n          //       </div>\n          //     </div>\n          //   )}\n          // </MapMarker>\n        ))}\n      </Map>\n    </div>\n  );\n}\n\nexport default React.memo(KakaoMap);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}