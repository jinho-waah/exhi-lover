{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { useTheme } from './ThemeProvider';\nimport defaultTheme from './defaultTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ColorInversion = /*#__PURE__*/React.createContext(undefined);\nexport const useColorInversion = childVariant => {\n  const overridableVariants = React.useContext(ColorInversion);\n  return {\n    /**\n     * Resolve the `color` value for the component.\n     * @param {ColorPaletteProp | 'inherit' | undefined} instanceColorProp The color defined on the instance.\n     * @param {ColorPaletteProp | 'inherit' | undefined} defaultColorProp The default color to use when variant inversion is not enabled.\n     */\n    getColor: (instanceColorProp, defaultColorProp) => {\n      if (overridableVariants && childVariant) {\n        if (overridableVariants.includes(childVariant)) {\n          // @ts-ignore internal logic\n          return instanceColorProp || 'context';\n        }\n      } // @ts-ignore internal logic\n\n\n      return instanceColorProp || defaultColorProp;\n    }\n  };\n};\nexport function ColorInversionProvider(_ref) {\n  let {\n    children,\n    variant\n  } = _ref;\n\n  var _theme$colorInversion;\n\n  const theme = useTheme();\n  return /*#__PURE__*/_jsx(ColorInversion.Provider, {\n    value: variant ? // `theme` could come from other emotion/styled-components context.\n    ((_theme$colorInversion = theme.colorInversionConfig) != null ? _theme$colorInversion : defaultTheme.colorInversionConfig)[variant] : undefined,\n    children: children\n  });\n}\nexport default ColorInversion;","map":{"version":3,"names":["React","useTheme","defaultTheme","jsx","_jsx","ColorInversion","createContext","undefined","useColorInversion","childVariant","overridableVariants","useContext","getColor","instanceColorProp","defaultColorProp","includes","ColorInversionProvider","children","variant","_theme$colorInversion","theme","Provider","value","colorInversionConfig"],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@mui/joy/styles/ColorInversion.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useTheme } from './ThemeProvider';\nimport defaultTheme from './defaultTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ColorInversion = /*#__PURE__*/React.createContext(undefined);\nexport const useColorInversion = childVariant => {\n  const overridableVariants = React.useContext(ColorInversion);\n  return {\n    /**\n     * Resolve the `color` value for the component.\n     * @param {ColorPaletteProp | 'inherit' | undefined} instanceColorProp The color defined on the instance.\n     * @param {ColorPaletteProp | 'inherit' | undefined} defaultColorProp The default color to use when variant inversion is not enabled.\n     */\n    getColor: (instanceColorProp, defaultColorProp) => {\n      if (overridableVariants && childVariant) {\n        if (overridableVariants.includes(childVariant)) {\n          // @ts-ignore internal logic\n          return instanceColorProp || 'context';\n        }\n      }\n      // @ts-ignore internal logic\n      return instanceColorProp || defaultColorProp;\n    }\n  };\n};\nexport function ColorInversionProvider({\n  children,\n  variant\n}) {\n  var _theme$colorInversion;\n  const theme = useTheme();\n  return /*#__PURE__*/_jsx(ColorInversion.Provider, {\n    value: variant ?\n    // `theme` could come from other emotion/styled-components context.\n    ((_theme$colorInversion = theme.colorInversionConfig) != null ? _theme$colorInversion : defaultTheme.colorInversionConfig)[variant] : undefined,\n    children: children\n  });\n}\nexport default ColorInversion;"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,cAAc,GAAG,aAAaL,KAAK,CAACM,aAAN,CAAoBC,SAApB,CAApC;AACA,OAAO,MAAMC,iBAAiB,GAAGC,YAAY,IAAI;EAC/C,MAAMC,mBAAmB,GAAGV,KAAK,CAACW,UAAN,CAAiBN,cAAjB,CAA5B;EACA,OAAO;IACL;AACJ;AACA;AACA;AACA;IACIO,QAAQ,EAAE,CAACC,iBAAD,EAAoBC,gBAApB,KAAyC;MACjD,IAAIJ,mBAAmB,IAAID,YAA3B,EAAyC;QACvC,IAAIC,mBAAmB,CAACK,QAApB,CAA6BN,YAA7B,CAAJ,EAAgD;UAC9C;UACA,OAAOI,iBAAiB,IAAI,SAA5B;QACD;MACF,CANgD,CAOjD;;;MACA,OAAOA,iBAAiB,IAAIC,gBAA5B;IACD;EAfI,CAAP;AAiBD,CAnBM;AAoBP,OAAO,SAASE,sBAAT,OAGJ;EAAA,IAHoC;IACrCC,QADqC;IAErCC;EAFqC,CAGpC;;EACD,IAAIC,qBAAJ;;EACA,MAAMC,KAAK,GAAGnB,QAAQ,EAAtB;EACA,OAAO,aAAaG,IAAI,CAACC,cAAc,CAACgB,QAAhB,EAA0B;IAChDC,KAAK,EAAEJ,OAAO,GACd;IACA,CAAC,CAACC,qBAAqB,GAAGC,KAAK,CAACG,oBAA/B,KAAwD,IAAxD,GAA+DJ,qBAA/D,GAAuFjB,YAAY,CAACqB,oBAArG,EAA2HL,OAA3H,CAFc,GAEwHX,SAHtF;IAIhDU,QAAQ,EAAEA;EAJsC,CAA1B,CAAxB;AAMD;AACD,eAAeZ,cAAf"},"metadata":{},"sourceType":"module"}