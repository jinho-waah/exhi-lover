{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/client/src/component/post/PostTemplate.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport Post from \"./Post\";\nimport colorSet from \"../../lib/styles/colorSet\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemplateBlock = styled.div`\n  padding-top: 0.2rem;\n  box-sizing: border-box;\n  background: #000000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: row wrap;\n`;\n_c = TemplateBlock;\n\nconst PostTemplate = _ref => {\n  _s();\n\n  let {\n    shows\n  } = _ref;\n  const [tags, setTags] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        setError(null);\n        setTags(null);\n        const tagsData = await Promise.all(shows.map(async show => {\n          console.log(show.id);\n          const url = `/api/exhibition_tags/`; // const response = await axios.get(`https://exhi-lover.com${url}`);\n\n          const response = await axios.get(`http://localhost:5100${url}`);\n          if (!response.ok) throw new Error(`Failed to fetch tags for show ID ${show.id}`);\n          const data = await response.json();\n          return {\n            showId: show.id,\n            tags: data.tags\n          };\n        }));\n        const tagsObject = {};\n        tagsData.forEach(_ref2 => {\n          let {\n            showId,\n            tags\n          } = _ref2;\n          return tagsObject[showId] = tags;\n        });\n        setTags(tagsObject);\n      } catch (e) {\n        setError(e);\n        console.log(\"1\");\n      }\n    };\n\n    fetchTags();\n  }, [shows]);\n  console.log({\n    shows\n  });\n  return /*#__PURE__*/_jsxDEV(TemplateBlock, {\n    children: shows.map((show, index) => {\n      const key = `${show.show_name}`; // create unique key prop value\n\n      const colorIndex = index % colorSet.length; // determine color index based on position in array\n\n      const color = colorSet[colorIndex]; // get color from colorSet array\n\n      return /*#__PURE__*/_jsxDEV(Post, {\n        show: show,\n        color: color,\n        tags: tags && tags[show.id]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this); // pass color as prop to Post component\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostTemplate, \"RCjiX3icWyozmgzM7GUvl1NaVC8=\");\n\n_c2 = PostTemplate;\nexport default PostTemplate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TemplateBlock\");\n$RefreshReg$(_c2, \"PostTemplate\");","map":{"version":3,"names":["styled","Post","colorSet","useEffect","useState","axios","TemplateBlock","div","PostTemplate","shows","tags","setTags","error","setError","fetchTags","tagsData","Promise","all","map","show","console","log","id","url","response","get","ok","Error","data","json","showId","tagsObject","forEach","e","index","key","show_name","colorIndex","length","color"],"sources":["/Users/andrew/Desktop/exhi/exhi/client/src/component/post/PostTemplate.js"],"sourcesContent":["import styled from \"styled-components\";\nimport Post from \"./Post\";\nimport colorSet from \"../../lib/styles/colorSet\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst TemplateBlock = styled.div`\n  padding-top: 0.2rem;\n  box-sizing: border-box;\n  background: #000000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: row wrap;\n`;\n\nconst PostTemplate = ({ shows }) => {\n  const [tags, setTags] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        setError(null);\n        setTags(null);\n        const tagsData = await Promise.all(\n          shows.map(async (show) => {\n            console.log(show.id);\n            const url = `/api/exhibition_tags/`;\n            // const response = await axios.get(`https://exhi-lover.com${url}`);\n            const response = await axios.get(`http://localhost:5100${url}`);\n            if (!response.ok)\n              throw new Error(`Failed to fetch tags for show ID ${show.id}`);\n            const data = await response.json();\n            return { showId: show.id, tags: data.tags };\n          })\n        );\n        const tagsObject = {};\n        tagsData.forEach(({ showId, tags }) => (tagsObject[showId] = tags));\n        setTags(tagsObject);\n      } catch (e) {\n        setError(e);\n        console.log(\"1\");\n      }\n    };\n    fetchTags();\n  }, [shows]);\n  console.log({ shows });\n  return (\n    <TemplateBlock>\n      {shows.map((show, index) => {\n        const key = `${show.show_name}`; // create unique key prop value\n        const colorIndex = index % colorSet.length; // determine color index based on position in array\n        const color = colorSet[colorIndex]; // get color from colorSet array\n        return (\n          <Post\n            show={show}\n            key={key}\n            color={color}\n            tags={tags && tags[show.id]}\n          />\n        ); // pass color as prop to Post component\n      })}\n    </TemplateBlock>\n  );\n};\n\nexport default PostTemplate;\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAGN,MAAM,CAACO,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMD,a;;AAUN,MAAME,YAAY,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAClC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,YAAY;MAC5B,IAAI;QACFD,QAAQ,CAAC,IAAD,CAAR;QACAF,OAAO,CAAC,IAAD,CAAP;QACA,MAAMI,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CACrBR,KAAK,CAACS,GAAN,CAAU,MAAOC,IAAP,IAAgB;UACxBC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,EAAjB;UACA,MAAMC,GAAG,GAAI,uBAAb,CAFwB,CAGxB;;UACA,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,wBAAuBF,GAAI,EAAtC,CAAvB;UACA,IAAI,CAACC,QAAQ,CAACE,EAAd,EACE,MAAM,IAAIC,KAAJ,CAAW,oCAAmCR,IAAI,CAACG,EAAG,EAAtD,CAAN;UACF,MAAMM,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;UACA,OAAO;YAAEC,MAAM,EAAEX,IAAI,CAACG,EAAf;YAAmBZ,IAAI,EAAEkB,IAAI,CAAClB;UAA9B,CAAP;QACD,CATD,CADqB,CAAvB;QAYA,MAAMqB,UAAU,GAAG,EAAnB;QACAhB,QAAQ,CAACiB,OAAT,CAAiB;UAAA,IAAC;YAAEF,MAAF;YAAUpB;UAAV,CAAD;UAAA,OAAuBqB,UAAU,CAACD,MAAD,CAAV,GAAqBpB,IAA5C;QAAA,CAAjB;QACAC,OAAO,CAACoB,UAAD,CAAP;MACD,CAlBD,CAkBE,OAAOE,CAAP,EAAU;QACVpB,QAAQ,CAACoB,CAAD,CAAR;QACAb,OAAO,CAACC,GAAR,CAAY,GAAZ;MACD;IACF,CAvBD;;IAwBAP,SAAS;EACV,CA1BQ,EA0BN,CAACL,KAAD,CA1BM,CAAT;EA2BAW,OAAO,CAACC,GAAR,CAAY;IAAEZ;EAAF,CAAZ;EACA,oBACE,QAAC,aAAD;IAAA,UACGA,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOe,KAAP,KAAiB;MAC1B,MAAMC,GAAG,GAAI,GAAEhB,IAAI,CAACiB,SAAU,EAA9B,CAD0B,CACO;;MACjC,MAAMC,UAAU,GAAGH,KAAK,GAAGhC,QAAQ,CAACoC,MAApC,CAF0B,CAEkB;;MAC5C,MAAMC,KAAK,GAAGrC,QAAQ,CAACmC,UAAD,CAAtB,CAH0B,CAGU;;MACpC,oBACE,QAAC,IAAD;QACE,IAAI,EAAElB,IADR;QAGE,KAAK,EAAEoB,KAHT;QAIE,IAAI,EAAE7B,IAAI,IAAIA,IAAI,CAACS,IAAI,CAACG,EAAN;MAJpB,GAEOa,GAFP;QAAA;QAAA;QAAA;MAAA,QADF,CAJ0B,CAWvB;IACJ,CAZA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAjDD;;GAAM3B,Y;;MAAAA,Y;AAmDN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}