{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useSlotProps } from '@mui/base/utils';\nimport Grow from '@mui/material/Grow';\nimport MuiPaper from '@mui/material/Paper';\nimport MuiPopper from '@mui/material/Popper';\nimport MuiTrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback, unstable_ownerDocument as ownerDocument, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { getPickersPopperUtilityClass } from './pickersPopperClasses';\nimport { getActiveElement } from '../utils/utils';\nimport { uncapitalizeObjectKeys } from '../utils/slots-migration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper']\n  };\n  return composeClasses(slots, getPickersPopperUtilityClass, classes);\n};\n\nconst PickersPopperRoot = styled(MuiPopper, {\n  name: 'MuiPickersPopper',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    zIndex: theme.zIndex.modal\n  };\n});\nconst PickersPopperPaper = styled(MuiPaper, {\n  name: 'MuiPickersPopper',\n  slot: 'Paper',\n  overridesResolver: (_, styles) => styles.paper\n})(_ref2 => {\n  let {\n    ownerState\n  } = _ref2;\n  return _extends({\n    transformOrigin: 'top center',\n    outline: 0\n  }, ownerState.placement === 'top' && {\n    transformOrigin: 'bottom center'\n  });\n});\n\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Based on @mui/material/ClickAwayListener without the customization.\n * We can probably strip away even more since children won't be portaled.\n * @param {boolean} active Only listen to clicks when the popper is opened.\n * @param {(event: MouseEvent | TouchEvent) => void} onClickAway The callback to call when clicking outside the popper.\n * @returns {Array} The ref and event handler to listen to the outside clicks.\n */\n\n\nfunction useClickAwayListener(active, onClickAway) {\n  const movedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  React.useEffect(() => {\n    if (!active) {\n      return undefined;\n    } // Ensure that this hook is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n\n\n    function armClickAwayListener() {\n      activatedRef.current = true;\n    }\n\n    document.addEventListener('mousedown', armClickAwayListener, true);\n    document.addEventListener('touchstart', armClickAwayListener, true);\n    return () => {\n      document.removeEventListener('mousedown', armClickAwayListener, true);\n      document.removeEventListener('touchstart', armClickAwayListener, true);\n      activatedRef.current = false;\n    };\n  }, [active]); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  const handleClickAway = useEventCallback(event => {\n    if (!activatedRef.current) {\n      return;\n    } // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n\n\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current); // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!nodeRef.current || // is a TouchEvent?\n    'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    let insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && !insideReactTree) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  const handleSynthetic = () => {\n    syntheticEventRef.current = true;\n  };\n\n  React.useEffect(() => {\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener('touchstart', handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener('touchstart', handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [active, handleClickAway]);\n  React.useEffect(() => {\n    // TODO This behavior is not tested automatically\n    // It's unclear whether this is due to different update semantics in test (batched in act() vs discrete on click).\n    // Or if this is a timing related issues due to different Transition components\n    // Once we get rid of all the manual scheduling (e.g. setTimeout(update, 0)) we can revisit this code+test.\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener('click', handleClickAway);\n      return () => {\n        doc.removeEventListener('click', handleClickAway); // cleanup `handleClickAway`\n\n        syntheticEventRef.current = false;\n      };\n    }\n\n    return undefined;\n  }, [active, handleClickAway]);\n  return [nodeRef, handleSynthetic, handleSynthetic];\n}\n\nexport function PickersPopper(inProps) {\n  var _slots$desktopTransit, _slots$desktopTrapFoc, _slots$desktopPaper, _slots$popper;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPickersPopper'\n  });\n  const {\n    anchorEl,\n    children,\n    containerRef = null,\n    shouldRestoreFocus,\n    onBlur,\n    onDismiss,\n    open,\n    role,\n    placement,\n    components,\n    componentsProps,\n    slots: innerSlots,\n    slotProps: innerSlotProps\n  } = props;\n  const slots = innerSlots != null ? innerSlots : uncapitalizeObjectKeys(components);\n  const slotProps = innerSlotProps != null ? innerSlotProps : componentsProps;\n  React.useEffect(() => {\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Blink?) use 'Esc'\n      if (open && (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc')) {\n        onDismiss();\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onDismiss, open]);\n  const lastFocusedElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (role === 'tooltip' || shouldRestoreFocus && !shouldRestoreFocus()) {\n      return;\n    }\n\n    if (open) {\n      lastFocusedElementRef.current = getActiveElement(document);\n    } else if (lastFocusedElementRef.current && lastFocusedElementRef.current instanceof HTMLElement) {\n      // make sure the button is flushed with updated label, before returning focus to it\n      // avoids issue, where screen reader could fail to announce selected date after selection\n      setTimeout(() => {\n        if (lastFocusedElementRef.current instanceof HTMLElement) {\n          lastFocusedElementRef.current.focus();\n        }\n      });\n    }\n  }, [open, role, shouldRestoreFocus]);\n  const [clickAwayRef, onPaperClick, onPaperTouchStart] = useClickAwayListener(open, onBlur != null ? onBlur : onDismiss);\n  const paperRef = React.useRef(null);\n  const handleRef = useForkRef(paperRef, containerRef);\n  const handlePaperRef = useForkRef(handleRef, clickAwayRef);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      // stop the propagation to avoid closing parent modal\n      event.stopPropagation();\n      onDismiss();\n    }\n  };\n\n  const Transition = (_slots$desktopTransit = slots == null ? void 0 : slots.desktopTransition) != null ? _slots$desktopTransit : Grow;\n  const TrapFocus = (_slots$desktopTrapFoc = slots == null ? void 0 : slots.desktopTrapFocus) != null ? _slots$desktopTrapFoc : MuiTrapFocus;\n  const Paper = (_slots$desktopPaper = slots == null ? void 0 : slots.desktopPaper) != null ? _slots$desktopPaper : PickersPopperPaper;\n  const paperProps = useSlotProps({\n    elementType: Paper,\n    externalSlotProps: slotProps == null ? void 0 : slotProps.desktopPaper,\n    additionalProps: {\n      tabIndex: -1,\n      elevation: 8,\n      ref: handlePaperRef\n    },\n    className: classes.paper,\n    ownerState: {} // Is overridden below to use `placement\n\n  });\n  const Popper = (_slots$popper = slots == null ? void 0 : slots.popper) != null ? _slots$popper : PickersPopperRoot;\n  const popperProps = useSlotProps({\n    elementType: Popper,\n    externalSlotProps: slotProps == null ? void 0 : slotProps.popper,\n    additionalProps: {\n      transition: true,\n      role,\n      open,\n      anchorEl,\n      placement,\n      onKeyDown: handleKeyDown\n    },\n    className: classes.root,\n    ownerState: props\n  });\n  return /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n    children: _ref3 => {\n      let {\n        TransitionProps,\n        placement: popperPlacement\n      } = _ref3;\n      return /*#__PURE__*/_jsx(TrapFocus, _extends({\n        open: open,\n        disableAutoFocus: true // pickers are managing focus position manually\n        // without this prop the focus is returned to the button before `aria-label` is updated\n        // which would force screen readers to read too old label\n        ,\n        disableRestoreFocus: true,\n        disableEnforceFocus: role === 'tooltip',\n        isEnabled: () => true\n      }, slotProps == null ? void 0 : slotProps.desktopTrapFocus, {\n        children: /*#__PURE__*/_jsx(Transition, _extends({}, TransitionProps, slotProps == null ? void 0 : slotProps.desktopTransition, {\n          children: /*#__PURE__*/_jsx(Paper, _extends({}, paperProps, {\n            onClick: event => {\n              var _paperProps$onClick;\n\n              onPaperClick(event);\n              (_paperProps$onClick = paperProps.onClick) == null ? void 0 : _paperProps$onClick.call(paperProps, event);\n            },\n            onTouchStart: event => {\n              var _paperProps$onTouchSt;\n\n              onPaperTouchStart(event);\n              (_paperProps$onTouchSt = paperProps.onTouchStart) == null ? void 0 : _paperProps$onTouchSt.call(paperProps, event);\n            },\n            ownerState: _extends({}, ownerState, {\n              placement: popperPlacement\n            }),\n            children: children\n          }))\n        }))\n      }));\n    }\n  }));\n}","map":{"version":3,"names":["_extends","React","useSlotProps","Grow","MuiPaper","MuiPopper","MuiTrapFocus","unstable_useForkRef","useForkRef","unstable_useEventCallback","useEventCallback","unstable_ownerDocument","ownerDocument","unstable_composeClasses","composeClasses","styled","useThemeProps","getPickersPopperUtilityClass","getActiveElement","uncapitalizeObjectKeys","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","paper","PickersPopperRoot","name","slot","overridesResolver","_","styles","theme","zIndex","modal","PickersPopperPaper","transformOrigin","outline","placement","clickedRootScrollbar","event","doc","documentElement","clientWidth","clientX","clientHeight","clientY","useClickAwayListener","active","onClickAway","movedRef","useRef","syntheticEventRef","nodeRef","activatedRef","useEffect","undefined","armClickAwayListener","current","document","addEventListener","removeEventListener","handleClickAway","insideReactTree","insideDOM","composedPath","indexOf","contains","target","handleSynthetic","handleTouchMove","PickersPopper","inProps","_slots$desktopTransit","_slots$desktopTrapFoc","_slots$desktopPaper","_slots$popper","props","anchorEl","children","containerRef","shouldRestoreFocus","onBlur","onDismiss","open","role","components","componentsProps","innerSlots","slotProps","innerSlotProps","handleKeyDown","nativeEvent","key","lastFocusedElementRef","HTMLElement","setTimeout","focus","clickAwayRef","onPaperClick","onPaperTouchStart","paperRef","handleRef","handlePaperRef","stopPropagation","Transition","desktopTransition","TrapFocus","desktopTrapFocus","Paper","desktopPaper","paperProps","elementType","externalSlotProps","additionalProps","tabIndex","elevation","ref","className","Popper","popper","popperProps","transition","onKeyDown","TransitionProps","popperPlacement","disableAutoFocus","disableRestoreFocus","disableEnforceFocus","isEnabled","onClick","_paperProps$onClick","call","onTouchStart","_paperProps$onTouchSt"],"sources":["/Users/andrew/Desktop/exhi/exhi/client/node_modules/@mui/x-date-pickers/internals/components/PickersPopper.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useSlotProps } from '@mui/base/utils';\nimport Grow from '@mui/material/Grow';\nimport MuiPaper from '@mui/material/Paper';\nimport MuiPopper from '@mui/material/Popper';\nimport MuiTrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback, unstable_ownerDocument as ownerDocument, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { getPickersPopperUtilityClass } from './pickersPopperClasses';\nimport { getActiveElement } from '../utils/utils';\nimport { uncapitalizeObjectKeys } from '../utils/slots-migration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper']\n  };\n  return composeClasses(slots, getPickersPopperUtilityClass, classes);\n};\nconst PickersPopperRoot = styled(MuiPopper, {\n  name: 'MuiPickersPopper',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst PickersPopperPaper = styled(MuiPaper, {\n  name: 'MuiPickersPopper',\n  slot: 'Paper',\n  overridesResolver: (_, styles) => styles.paper\n})(({\n  ownerState\n}) => _extends({\n  transformOrigin: 'top center',\n  outline: 0\n}, ownerState.placement === 'top' && {\n  transformOrigin: 'bottom center'\n}));\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Based on @mui/material/ClickAwayListener without the customization.\n * We can probably strip away even more since children won't be portaled.\n * @param {boolean} active Only listen to clicks when the popper is opened.\n * @param {(event: MouseEvent | TouchEvent) => void} onClickAway The callback to call when clicking outside the popper.\n * @returns {Array} The ref and event handler to listen to the outside clicks.\n */\nfunction useClickAwayListener(active, onClickAway) {\n  const movedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  React.useEffect(() => {\n    if (!active) {\n      return undefined;\n    }\n\n    // Ensure that this hook is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    function armClickAwayListener() {\n      activatedRef.current = true;\n    }\n    document.addEventListener('mousedown', armClickAwayListener, true);\n    document.addEventListener('touchstart', armClickAwayListener, true);\n    return () => {\n      document.removeEventListener('mousedown', armClickAwayListener, true);\n      document.removeEventListener('touchstart', armClickAwayListener, true);\n      activatedRef.current = false;\n    };\n  }, [active]);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    if (!activatedRef.current) {\n      return;\n    }\n\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!nodeRef.current ||\n    // is a TouchEvent?\n    'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n    if (!insideDOM && !insideReactTree) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const handleSynthetic = () => {\n    syntheticEventRef.current = true;\n  };\n  React.useEffect(() => {\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener('touchstart', handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener('touchstart', handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [active, handleClickAway]);\n  React.useEffect(() => {\n    // TODO This behavior is not tested automatically\n    // It's unclear whether this is due to different update semantics in test (batched in act() vs discrete on click).\n    // Or if this is a timing related issues due to different Transition components\n    // Once we get rid of all the manual scheduling (e.g. setTimeout(update, 0)) we can revisit this code+test.\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener('click', handleClickAway);\n      return () => {\n        doc.removeEventListener('click', handleClickAway);\n        // cleanup `handleClickAway`\n        syntheticEventRef.current = false;\n      };\n    }\n    return undefined;\n  }, [active, handleClickAway]);\n  return [nodeRef, handleSynthetic, handleSynthetic];\n}\nexport function PickersPopper(inProps) {\n  var _slots$desktopTransit, _slots$desktopTrapFoc, _slots$desktopPaper, _slots$popper;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPickersPopper'\n  });\n  const {\n    anchorEl,\n    children,\n    containerRef = null,\n    shouldRestoreFocus,\n    onBlur,\n    onDismiss,\n    open,\n    role,\n    placement,\n    components,\n    componentsProps,\n    slots: innerSlots,\n    slotProps: innerSlotProps\n  } = props;\n  const slots = innerSlots != null ? innerSlots : uncapitalizeObjectKeys(components);\n  const slotProps = innerSlotProps != null ? innerSlotProps : componentsProps;\n  React.useEffect(() => {\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Blink?) use 'Esc'\n      if (open && (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc')) {\n        onDismiss();\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onDismiss, open]);\n  const lastFocusedElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (role === 'tooltip' || shouldRestoreFocus && !shouldRestoreFocus()) {\n      return;\n    }\n    if (open) {\n      lastFocusedElementRef.current = getActiveElement(document);\n    } else if (lastFocusedElementRef.current && lastFocusedElementRef.current instanceof HTMLElement) {\n      // make sure the button is flushed with updated label, before returning focus to it\n      // avoids issue, where screen reader could fail to announce selected date after selection\n      setTimeout(() => {\n        if (lastFocusedElementRef.current instanceof HTMLElement) {\n          lastFocusedElementRef.current.focus();\n        }\n      });\n    }\n  }, [open, role, shouldRestoreFocus]);\n  const [clickAwayRef, onPaperClick, onPaperTouchStart] = useClickAwayListener(open, onBlur != null ? onBlur : onDismiss);\n  const paperRef = React.useRef(null);\n  const handleRef = useForkRef(paperRef, containerRef);\n  const handlePaperRef = useForkRef(handleRef, clickAwayRef);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      // stop the propagation to avoid closing parent modal\n      event.stopPropagation();\n      onDismiss();\n    }\n  };\n  const Transition = (_slots$desktopTransit = slots == null ? void 0 : slots.desktopTransition) != null ? _slots$desktopTransit : Grow;\n  const TrapFocus = (_slots$desktopTrapFoc = slots == null ? void 0 : slots.desktopTrapFocus) != null ? _slots$desktopTrapFoc : MuiTrapFocus;\n  const Paper = (_slots$desktopPaper = slots == null ? void 0 : slots.desktopPaper) != null ? _slots$desktopPaper : PickersPopperPaper;\n  const paperProps = useSlotProps({\n    elementType: Paper,\n    externalSlotProps: slotProps == null ? void 0 : slotProps.desktopPaper,\n    additionalProps: {\n      tabIndex: -1,\n      elevation: 8,\n      ref: handlePaperRef\n    },\n    className: classes.paper,\n    ownerState: {} // Is overridden below to use `placement\n  });\n\n  const Popper = (_slots$popper = slots == null ? void 0 : slots.popper) != null ? _slots$popper : PickersPopperRoot;\n  const popperProps = useSlotProps({\n    elementType: Popper,\n    externalSlotProps: slotProps == null ? void 0 : slotProps.popper,\n    additionalProps: {\n      transition: true,\n      role,\n      open,\n      anchorEl,\n      placement,\n      onKeyDown: handleKeyDown\n    },\n    className: classes.root,\n    ownerState: props\n  });\n  return /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n    children: ({\n      TransitionProps,\n      placement: popperPlacement\n    }) => /*#__PURE__*/_jsx(TrapFocus, _extends({\n      open: open,\n      disableAutoFocus: true\n      // pickers are managing focus position manually\n      // without this prop the focus is returned to the button before `aria-label` is updated\n      // which would force screen readers to read too old label\n      ,\n      disableRestoreFocus: true,\n      disableEnforceFocus: role === 'tooltip',\n      isEnabled: () => true\n    }, slotProps == null ? void 0 : slotProps.desktopTrapFocus, {\n      children: /*#__PURE__*/_jsx(Transition, _extends({}, TransitionProps, slotProps == null ? void 0 : slotProps.desktopTransition, {\n        children: /*#__PURE__*/_jsx(Paper, _extends({}, paperProps, {\n          onClick: event => {\n            var _paperProps$onClick;\n            onPaperClick(event);\n            (_paperProps$onClick = paperProps.onClick) == null ? void 0 : _paperProps$onClick.call(paperProps, event);\n          },\n          onTouchStart: event => {\n            var _paperProps$onTouchSt;\n            onPaperTouchStart(event);\n            (_paperProps$onTouchSt = paperProps.onTouchStart) == null ? void 0 : _paperProps$onTouchSt.call(paperProps, event);\n          },\n          ownerState: _extends({}, ownerState, {\n            placement: popperPlacement\n          }),\n          children: children\n        }))\n      }))\n    }))\n  }));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}