{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KakaoMap.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nimport Marker from \"./Marker\";\nimport { Map, MapMarker, CustomOverlayMap } from \"react-kakao-maps-sdk\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction KakaoMap(_ref) {\n  _s();\n\n  let {\n    state,\n    flag\n  } = _ref;\n  const mapHeight = window.innerWidth >= 560 ? 560 : window.innerWidth;\n  const imageSize = {\n    width: 22,\n    height: 26\n  };\n  const spriteSize = {\n    width: 36,\n    height: 98\n  };\n  const position = {\n    lat: 37.54699,\n    lng: 127.09598\n  };\n  const test = Marker();\n  console.log(test);\n  const [center, setCenter] = useState();\n  useEffect(() => {\n    setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n    var container = document.getElementById(\"map\");\n    var options = {\n      center: new kakao.maps.LatLng(state.lat, state.lng),\n      level: 3\n    };\n    var map = new kakao.maps.Map(container, options);\n    var markerPosition = new kakao.maps.LatLng(state.lat, state.lng);\n\n    if (flag === true) {\n      var marker = new kakao.maps.Marker({\n        position: markerPosition\n      });\n      marker.setMap(map);\n    }\n  }, [state, flag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: \"100%\",\n        height: `${mapHeight}px`\n      },\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        center: {\n          center\n        },\n        children: [/*#__PURE__*/_jsxDEV(MapMarker // 마커를 생성합니다\n        , {\n          position: {\n            lat: 37.54699,\n            lng: 127.09598\n          },\n          image: {\n            src: {\n              AccountBalanceIcon\n            },\n            size: {\n              width: 64,\n              height: 69\n            },\n            // 마커이미지의 크기입니다\n            options: {\n              offset: {\n                x: 27,\n                y: 69\n              } // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomOverlayMap, {\n          position: {\n            lat: 37.54699,\n            lng: 127.09598\n          },\n          yAnchor: 1,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"customoverlay\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://map.kakao.com/link/map/11394059\",\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"title\",\n                children: \"\\uAD6C\\uC758\\uC57C\\uAD6C\\uACF5\\uC6D0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(KakaoMap, \"C2EBt6N4G7Kn2nJMWP0ICRqh6y8=\");\n\n_c = KakaoMap;\nexport default _c2 = /*#__PURE__*/React.memo(KakaoMap);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"KakaoMap\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","Marker","Map","MapMarker","CustomOverlayMap","AccountBalanceIcon","KakaoMap","state","flag","mapHeight","window","innerWidth","imageSize","width","height","spriteSize","position","lat","lng","test","console","log","center","setCenter","kakao","maps","LatLng","container","document","getElementById","options","level","map","markerPosition","marker","setMap","src","size","offset","x","y","memo"],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KakaoMap.js"],"sourcesContent":["/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nimport Marker from \"./Marker\";\nimport { Map, MapMarker, CustomOverlayMap } from \"react-kakao-maps-sdk\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\n\nfunction KakaoMap({ state, flag }) {\n  const mapHeight = window.innerWidth >= 560 ? 560 : window.innerWidth;\n  const imageSize = { width: 22, height: 26 };\n  const spriteSize = { width: 36, height: 98 };\n  const position = { lat: 37.54699, lng: 127.09598 };\n  const test = Marker();\n  console.log(test);\n  const [center, setCenter] = useState();\n\n  useEffect(() => {\n    setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n\n    var container = document.getElementById(\"map\");\n    var options = {\n      center: new kakao.maps.LatLng(state.lat, state.lng),\n      level: 3,\n    };\n\n    var map = new kakao.maps.Map(container, options);\n    var markerPosition = new kakao.maps.LatLng(state.lat, state.lng);\n\n    if (flag === true) {\n      var marker = new kakao.maps.Marker({\n        position: markerPosition,\n      });\n      marker.setMap(map);\n    }\n  }, [state, flag]);\n\n  return (\n    <div>\n      <div id=\"map\" style={{ width: \"100%\", height: `${mapHeight}px` }}>\n        <Map center={{ center }}>\n          <MapMarker // 마커를 생성합니다\n            position={{ lat: 37.54699, lng: 127.09598 }}\n            image={{\n              src: { AccountBalanceIcon },\n              size: {\n                width: 64,\n                height: 69,\n              }, // 마커이미지의 크기입니다\n              options: {\n                offset: {\n                  x: 27,\n                  y: 69,\n                }, // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n              },\n            }}\n          />\n          <CustomOverlayMap\n            position={{ lat: 37.54699, lng: 127.09598 }}\n            yAnchor={1}\n          >\n            <div className=\"customoverlay\">\n              <a\n                href=\"https://map.kakao.com/link/map/11394059\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <span className=\"title\">구의야구공원</span>\n              </a>\n            </div>\n          </CustomOverlayMap>\n        </Map>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(KakaoMap);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}