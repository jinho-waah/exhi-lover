{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KakaoMap.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nimport Marker from \"./Marker\";\nimport { Map, MapMarker, CustomOverlayMap, MarkerClusterer } from \"react-kakao-maps-sdk\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction KakaoMap(_ref) {\n  _s();\n\n  let {\n    state,\n    flag\n  } = _ref;\n  const mapHeight = window.innerWidth >= 560 ? 560 : window.innerWidth; // const imageSize = { width: 22, height: 26 };\n  // const spriteSize = { width: 36, height: 98 };\n  // const position = { lat: 37.54699, lng: 127.09598 };\n  // const test = Marker();\n  // console.log(test);\n\n  const [center, setCenter] = useState({\n    lat: 36.5,\n    lng: 127.8\n  }); // setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n  // useEffect(() => {\n  //   // setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n  //   var container = document.getElementById(\"map\");\n  //   var options = {\n  //     center: new kakao.maps.LatLng(state.lat, state.lng),\n  //     level: 3,\n  //   };\n  //   var map = new kakao.maps.Map(container, options);\n  //   var markerPosition = new kakao.maps.LatLng(state.lat, state.lng);\n  //   if (flag === true) {\n  //     var marker = new kakao.maps.Marker({\n  //       position: markerPosition,\n  //     });\n  //     marker.setMap(map);\n  //   }\n  // }, [state, flag]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        center: {\n          lat: 36.2683,\n          lng: 127.6358\n        },\n        style: {\n          width: \"100%\",\n          height: \"360px\"\n        },\n        level: 14,\n        children: /*#__PURE__*/_jsxDEV(MarkerClusterer, {\n          averageCenter: true,\n          minLevel: 10,\n          children: clusterPositionsData.positions.map(pos => /*#__PURE__*/_jsxDEV(MapMarker, {\n            position: pos\n          }, `${pos.lat}-${pos.lng}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(KakaoMap, \"uZEPi3x7LLQy6xEPwqV4bZK3v2g=\");\n\n_c = KakaoMap;\nexport default _c2 = /*#__PURE__*/React.memo(KakaoMap);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"KakaoMap\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","Marker","Map","MapMarker","CustomOverlayMap","MarkerClusterer","AccountBalanceIcon","KakaoMap","state","flag","mapHeight","window","innerWidth","center","setCenter","lat","lng","width","height","clusterPositionsData","positions","map","pos","memo"],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KakaoMap.js"],"sourcesContent":["/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nimport Marker from \"./Marker\";\nimport {\n  Map,\n  MapMarker,\n  CustomOverlayMap,\n  MarkerClusterer,\n} from \"react-kakao-maps-sdk\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\n\nfunction KakaoMap({ state, flag }) {\n  const mapHeight = window.innerWidth >= 560 ? 560 : window.innerWidth;\n  // const imageSize = { width: 22, height: 26 };\n  // const spriteSize = { width: 36, height: 98 };\n  // const position = { lat: 37.54699, lng: 127.09598 };\n  // const test = Marker();\n  // console.log(test);\n  const [center, setCenter] = useState({ lat: 36.5, lng: 127.8 });\n  // setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n  // useEffect(() => {\n  //   // setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n\n  //   var container = document.getElementById(\"map\");\n  //   var options = {\n  //     center: new kakao.maps.LatLng(state.lat, state.lng),\n  //     level: 3,\n  //   };\n\n  //   var map = new kakao.maps.Map(container, options);\n  //   var markerPosition = new kakao.maps.LatLng(state.lat, state.lng);\n\n  //   if (flag === true) {\n  //     var marker = new kakao.maps.Marker({\n  //       position: markerPosition,\n  //     });\n  //     marker.setMap(map);\n  //   }\n  // }, [state, flag]);\n\n  return (\n    <div>\n      {/* <div id=\"map\" style={{ width: \"100%\", height: `${mapHeight}px` }}> */}\n      <div id=\"map\">\n        <Map\n          center={{ lat: 36.2683, lng: 127.6358 }}\n          style={{ width: \"100%\", height: \"360px\" }}\n          level={14}\n        >\n          <MarkerClusterer averageCenter={true} minLevel={10}>\n            {clusterPositionsData.positions.map((pos) => (\n              <MapMarker key={`${pos.lat}-${pos.lng}`} position={pos} />\n            ))}\n          </MarkerClusterer>\n        </Map>\n        {/* <Map center={{ center }}>\n          <MapMarker // 마커를 생성합니다\n            position={{ lat: 37.54699, lng: 127.09598 }}\n            image={{\n              src: { AccountBalanceIcon },\n              size: {\n                width: 64,\n                height: 69,\n              }, // 마커이미지의 크기입니다\n              options: {\n                offset: {\n                  x: 27,\n                  y: 69,\n                }, // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n              },\n            }}\n          />\n          <CustomOverlayMap\n            position={{ lat: 37.54699, lng: 127.09598 }}\n            yAnchor={1}\n          >\n            <div className=\"customoverlay\">\n              <a\n                href=\"https://map.kakao.com/link/map/11394059\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <span className=\"title\">구의야구공원</span>\n              </a>\n            </div>\n          </CustomOverlayMap>\n        </Map> */}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(KakaoMap);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SACEC,GADF,EAEEC,SAFF,EAGEC,gBAHF,EAIEC,eAJF,QAKO,sBALP;AAMA,OAAOC,kBAAP,MAA+B,oCAA/B;;;AAEA,SAASC,QAAT,OAAmC;EAAA;;EAAA,IAAjB;IAAEC,KAAF;IAASC;EAAT,CAAiB;EACjC,MAAMC,SAAS,GAAGC,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,GAA3B,GAAiCD,MAAM,CAACC,UAA1D,CADiC,CAEjC;EACA;EACA;EACA;EACA;;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC;IAAEe,GAAG,EAAE,IAAP;IAAaC,GAAG,EAAE;EAAlB,CAAD,CAApC,CAPiC,CAQjC;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,uBAEE;MAAK,EAAE,EAAC,KAAR;MAAA,uBACE,QAAC,GAAD;QACE,MAAM,EAAE;UAAED,GAAG,EAAE,OAAP;UAAgBC,GAAG,EAAE;QAArB,CADV;QAEE,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAT;UAAiBC,MAAM,EAAE;QAAzB,CAFT;QAGE,KAAK,EAAE,EAHT;QAAA,uBAKE,QAAC,eAAD;UAAiB,aAAa,EAAE,IAAhC;UAAsC,QAAQ,EAAE,EAAhD;UAAA,UACGC,oBAAoB,CAACC,SAArB,CAA+BC,GAA/B,CAAoCC,GAAD,iBAClC,QAAC,SAAD;YAAyC,QAAQ,EAAEA;UAAnD,GAAiB,GAAEA,GAAG,CAACP,GAAI,IAAGO,GAAG,CAACN,GAAI,EAAtC;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA;MALF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAFF;IAAA;IAAA;IAAA;EAAA,QADF;AAkDD;;GA/EQT,Q;;KAAAA,Q;AAiFT,kCAAeT,KAAK,CAACyB,IAAN,CAAWhB,QAAX,CAAf"},"metadata":{},"sourceType":"module"}