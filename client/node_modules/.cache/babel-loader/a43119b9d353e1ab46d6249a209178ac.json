{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KaKaoMap.js\",\n    _s = $RefreshSig$();\n\n// /*global kakao*/\n// import React, { useEffect, useMemo, useRef, useState } from \"react\";\n// import icon from \"../../lib/icon/loc.png\";\n// import iconDark from \"../../lib/icon/dot.png\";\n// import SwipeableEdgeDrawer from \"./SwipeableEdgeDrawer\";\n// import FetchShowTags from \"./FetchShowTags\";\n// function KakaoMap({ lat, lng, flag, galleriesMarker }) {\n//   const mapHeight = (window.innerWidth >= 560 ? 560 : window.innerWidth) * 1.1;\n//   const mapContainer = useRef(null);\n//   const [selectedMarker, setSelectedMarker] = useState(null);\n//   const [drawerOpen, setDrawerOpen] = useState(false); // Add a state variable for drawer visibility\n//   const [lastestClickedMarker, setLastestClickedMarker] = useState(null);\n//   const imageSize = new window.kakao.maps.Size(35, 35);\n//   const darkImageSize = new window.kakao.maps.Size(16, 16);\n//   const galleryMarkerImage = new window.kakao.maps.MarkerImage(icon, imageSize);\n//   const galleryMarkerImageDark = new window.kakao.maps.MarkerImage(\n//     iconDark,\n//     darkImageSize\n//   );\n//   const mapOptions = useMemo(\n//     () => ({\n//       center: new window.kakao.maps.LatLng(lat, lng),\n//       level: 6,\n//     }),\n//     [lat, lng]\n//   );\n//   useEffect(() => {\n//     const map = new window.kakao.maps.Map(mapContainer.current, mapOptions);\n//     const storedLastClickedMarker = localStorage.getItem(\"lastClickedMarker\");\n//     const initialLastClickedMarker = storedLastClickedMarker\n//       ? JSON.parse(storedLastClickedMarker)\n//       : null;\n//     setLastestClickedMarker(\n//       initialLastClickedMarker\n//         ? new window.kakao.maps.LatLng(\n//             initialLastClickedMarker.lat,\n//             initialLastClickedMarker.lng\n//           )\n//         : null\n//     );\n//     if (flag) {\n//       const markerPosition = new window.kakao.maps.LatLng(lat, lng);\n//       const marker = new window.kakao.maps.Marker({\n//         map: map,\n//         position: markerPosition,\n//       });\n//     }\n//     if (lastestClickedMarker) {\n//       map.panTo(lastestClickedMarker);\n//     }\n//     galleriesMarker.forEach((galleryMarker) => {\n//       console.log(\"1st\", galleryMarker);\n//       if (galleryMarker.onDisplay) {\n//         const setGalleryMarker = new window.kakao.maps.Marker({\n//           map: map,\n//           position: new window.kakao.maps.LatLng(\n//             galleryMarker.latlng.lat,\n//             galleryMarker.latlng.lng\n//           ),\n//           image: galleryMarkerImage,\n//           zIndex: 99,\n//         });\n//         // console.log(\"2nd\", galleryMarker);\n//         window.kakao.maps.event.addListener(setGalleryMarker, \"click\", () => {\n//           map.panTo(setGalleryMarker.getPosition());\n//           window.scrollTo({\n//             top: document.body.scrollHeight,\n//             behavior: \"smooth\", // Optional: This provides a smooth scroll animation\n//           });\n//           setSelectedMarker(galleryMarker);\n//           setLastestClickedMarker(setGalleryMarker.getPosition());\n//           localStorage.setItem(\n//             \"lastClickedMarker\",\n//             JSON.stringify({\n//               lat: setGalleryMarker.getPosition().getLat(),\n//               lng: setGalleryMarker.getPosition().getLng(),\n//             })\n//           );\n//           setDrawerOpen(true);\n//         });\n//       } else {\n//         const setGalleryMarker = new window.kakao.maps.Marker({\n//           map: map,\n//           position: new window.kakao.maps.LatLng(\n//             galleryMarker.latlng.lat,\n//             galleryMarker.latlng.lng\n//           ),\n//           image: galleryMarkerImageDark,\n//         });\n//         window.kakao.maps.event.addListener(\n//           setGalleryMarker,\n//           \"click\",\n//           function () {\n//             map.panTo(setGalleryMarker.getPosition());\n//             window.scrollTo({\n//               top: document.body.scrollHeight,\n//               behavior: \"smooth\",\n//             });\n//             // console.log(setGalleryMarker);\n//             setSelectedMarker(setGalleryMarker);\n//             setLastestClickedMarker(setGalleryMarker.getPosition());\n//             localStorage.setItem(\n//               \"lastClickedMarker\",\n//               JSON.stringify({\n//                 lat: setGalleryMarker.getPosition().getLat(),\n//                 lng: setGalleryMarker.getPosition().getLng(),\n//               })\n//             );\n//             setDrawerOpen(true);\n//           }\n//         );\n//       }\n//     });\n//   }, [flag, galleriesMarker]);\n//   return (\n//     <div>\n//       <div\n//         style={{\n//           width: `100%`,\n//           maxWidth: \"560px\",\n//           height: `${mapHeight + 50}px`,\n//           position: \"absolute\",\n//         }}\n//       >\n//         <div\n//           id=\"map\"\n//           ref={mapContainer}\n//           style={{\n//             width: `auto`,\n//             height: `${mapHeight + 50}px`,\n//             // position: \"absolute\",\n//           }}\n//         />\n//         {selectedMarker && drawerOpen ? (\n//           <SwipeableEdgeDrawer\n//             gallery={selectedMarker}\n//             onClose={() => {\n//               setDrawerOpen(false);\n//             }}\n//           />\n//         ) : (\n//           <SwipeableEdgeDrawer />\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n// export default KakaoMap;\n\n/*global kakao*/\nimport React, { useEffect, useRef, useState, useCallback, useMemo } from \"react\";\nimport icon from \"../../lib/icon/loc.png\";\nimport iconDark from \"../../lib/icon/dot.png\";\nimport SwipeableEdgeDrawer from \"./SwipeableEdgeDrawer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction KakaoMap(_ref) {\n  _s();\n\n  let {\n    lat,\n    lng,\n    flag,\n    galleriesMarker\n  } = _ref;\n  const mapHeight = (window.innerWidth >= 560 ? 560 : window.innerWidth) * 1.1;\n  const mapContainer = useRef(null);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [lastestClickedMarker, setLastestClickedMarker] = useState(null);\n  const imageSize = useMemo(() => new window.kakao.maps.Size(35, 35), []);\n  const darkImageSize = useMemo(() => new window.kakao.maps.Size(16, 16), []);\n  const galleryMarkerImage = useMemo(() => new window.kakao.maps.MarkerImage(icon, imageSize), [imageSize]);\n  const galleryMarkerImageDark = useMemo(() => new window.kakao.maps.MarkerImage(iconDark, darkImageSize), [darkImageSize]);\n  const mapOptions = useMemo(() => ({\n    center: new window.kakao.maps.LatLng(lat, lng),\n    level: 6\n  }), [lat, lng]);\n  const createGalleryMarker = useCallback((galleryMarker, map, markerImage) => {\n    const setGalleryMarker = new window.kakao.maps.Marker({\n      map: map,\n      position: new window.kakao.maps.LatLng(galleryMarker.latlng.lat, galleryMarker.latlng.lng),\n      image: markerImage,\n      zIndex: galleryMarker.onDisplay ? 99 : undefined\n    });\n    window.kakao.maps.event.addListener(setGalleryMarker, \"click\", () => {\n      map.panTo(setGalleryMarker.getPosition());\n      window.scrollTo({\n        top: document.body.scrollHeight,\n        behavior: \"smooth\"\n      });\n      setSelectedMarker(galleryMarker);\n      setLastestClickedMarker(setGalleryMarker.getPosition());\n      localStorage.setItem(\"lastClickedMarker\", JSON.stringify({\n        lat: setGalleryMarker.getPosition().getLat(),\n        lng: setGalleryMarker.getPosition().getLng()\n      }));\n      setDrawerOpen(true);\n    });\n  }, []);\n  useEffect(() => {\n    const map = new window.kakao.maps.Map(mapContainer.current, mapOptions);\n    const storedLastClickedMarker = localStorage.getItem(\"lastClickedMarker\");\n    const initialLastClickedMarker = storedLastClickedMarker ? JSON.parse(storedLastClickedMarker) : null;\n    setLastestClickedMarker(initialLastClickedMarker ? new window.kakao.maps.LatLng(initialLastClickedMarker.lat, initialLastClickedMarker.lng) : null);\n\n    if (flag) {\n      const markerPosition = new window.kakao.maps.LatLng(lat, lng);\n      const marker = new window.kakao.maps.Marker({\n        map: map,\n        position: markerPosition\n      });\n    }\n\n    if (lastestClickedMarker) {\n      map.panTo(lastestClickedMarker);\n    }\n\n    galleriesMarker.forEach(galleryMarker => {\n      if (galleryMarker.onDisplay) {\n        createGalleryMarker(galleryMarker, map, galleryMarkerImage);\n      } else {\n        createGalleryMarker(galleryMarker, map, galleryMarkerImageDark);\n      }\n    });\n  }, [flag, galleriesMarker, lastestClickedMarker, createGalleryMarker, galleryMarkerImage, galleryMarkerImageDark, mapOptions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: `100%`,\n        maxWidth: \"560px\",\n        height: `${mapHeight + 50}px`,\n        position: \"absolute\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        ref: mapContainer,\n        className: \"map-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), selectedMarker && drawerOpen ? /*#__PURE__*/_jsxDEV(SwipeableEdgeDrawer, {\n        gallery: selectedMarker,\n        onClose: () => {\n          setDrawerOpen(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SwipeableEdgeDrawer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n}\n\n_s(KakaoMap, \"oWdNEJ8CAyUqPP5X27RbXoKYM38=\");\n\n_c = KakaoMap;\nexport default KakaoMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","useMemo","icon","iconDark","SwipeableEdgeDrawer","KakaoMap","lat","lng","flag","galleriesMarker","mapHeight","window","innerWidth","mapContainer","selectedMarker","setSelectedMarker","drawerOpen","setDrawerOpen","lastestClickedMarker","setLastestClickedMarker","imageSize","kakao","maps","Size","darkImageSize","galleryMarkerImage","MarkerImage","galleryMarkerImageDark","mapOptions","center","LatLng","level","createGalleryMarker","galleryMarker","map","markerImage","setGalleryMarker","Marker","position","latlng","image","zIndex","onDisplay","undefined","event","addListener","panTo","getPosition","scrollTo","top","document","body","scrollHeight","behavior","localStorage","setItem","JSON","stringify","getLat","getLng","Map","current","storedLastClickedMarker","getItem","initialLastClickedMarker","parse","markerPosition","marker","forEach","width","maxWidth","height"],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KaKaoMap.js"],"sourcesContent":["// /*global kakao*/\n// import React, { useEffect, useMemo, useRef, useState } from \"react\";\n// import icon from \"../../lib/icon/loc.png\";\n// import iconDark from \"../../lib/icon/dot.png\";\n// import SwipeableEdgeDrawer from \"./SwipeableEdgeDrawer\";\n// import FetchShowTags from \"./FetchShowTags\";\n\n// function KakaoMap({ lat, lng, flag, galleriesMarker }) {\n//   const mapHeight = (window.innerWidth >= 560 ? 560 : window.innerWidth) * 1.1;\n//   const mapContainer = useRef(null);\n\n//   const [selectedMarker, setSelectedMarker] = useState(null);\n//   const [drawerOpen, setDrawerOpen] = useState(false); // Add a state variable for drawer visibility\n//   const [lastestClickedMarker, setLastestClickedMarker] = useState(null);\n\n//   const imageSize = new window.kakao.maps.Size(35, 35);\n//   const darkImageSize = new window.kakao.maps.Size(16, 16);\n//   const galleryMarkerImage = new window.kakao.maps.MarkerImage(icon, imageSize);\n//   const galleryMarkerImageDark = new window.kakao.maps.MarkerImage(\n//     iconDark,\n//     darkImageSize\n//   );\n\n//   const mapOptions = useMemo(\n//     () => ({\n//       center: new window.kakao.maps.LatLng(lat, lng),\n//       level: 6,\n//     }),\n//     [lat, lng]\n//   );\n\n//   useEffect(() => {\n//     const map = new window.kakao.maps.Map(mapContainer.current, mapOptions);\n\n//     const storedLastClickedMarker = localStorage.getItem(\"lastClickedMarker\");\n//     const initialLastClickedMarker = storedLastClickedMarker\n//       ? JSON.parse(storedLastClickedMarker)\n//       : null;\n\n//     setLastestClickedMarker(\n//       initialLastClickedMarker\n//         ? new window.kakao.maps.LatLng(\n//             initialLastClickedMarker.lat,\n//             initialLastClickedMarker.lng\n//           )\n//         : null\n//     );\n\n//     if (flag) {\n//       const markerPosition = new window.kakao.maps.LatLng(lat, lng);\n//       const marker = new window.kakao.maps.Marker({\n//         map: map,\n//         position: markerPosition,\n//       });\n//     }\n\n//     if (lastestClickedMarker) {\n//       map.panTo(lastestClickedMarker);\n//     }\n\n//     galleriesMarker.forEach((galleryMarker) => {\n//       console.log(\"1st\", galleryMarker);\n//       if (galleryMarker.onDisplay) {\n//         const setGalleryMarker = new window.kakao.maps.Marker({\n//           map: map,\n//           position: new window.kakao.maps.LatLng(\n//             galleryMarker.latlng.lat,\n//             galleryMarker.latlng.lng\n//           ),\n//           image: galleryMarkerImage,\n//           zIndex: 99,\n//         });\n//         // console.log(\"2nd\", galleryMarker);\n\n//         window.kakao.maps.event.addListener(setGalleryMarker, \"click\", () => {\n//           map.panTo(setGalleryMarker.getPosition());\n//           window.scrollTo({\n//             top: document.body.scrollHeight,\n//             behavior: \"smooth\", // Optional: This provides a smooth scroll animation\n//           });\n\n//           setSelectedMarker(galleryMarker);\n//           setLastestClickedMarker(setGalleryMarker.getPosition());\n//           localStorage.setItem(\n//             \"lastClickedMarker\",\n//             JSON.stringify({\n//               lat: setGalleryMarker.getPosition().getLat(),\n//               lng: setGalleryMarker.getPosition().getLng(),\n//             })\n//           );\n//           setDrawerOpen(true);\n//         });\n//       } else {\n//         const setGalleryMarker = new window.kakao.maps.Marker({\n//           map: map,\n//           position: new window.kakao.maps.LatLng(\n//             galleryMarker.latlng.lat,\n//             galleryMarker.latlng.lng\n//           ),\n//           image: galleryMarkerImageDark,\n//         });\n\n//         window.kakao.maps.event.addListener(\n//           setGalleryMarker,\n//           \"click\",\n//           function () {\n//             map.panTo(setGalleryMarker.getPosition());\n//             window.scrollTo({\n//               top: document.body.scrollHeight,\n//               behavior: \"smooth\",\n//             });\n//             // console.log(setGalleryMarker);\n//             setSelectedMarker(setGalleryMarker);\n//             setLastestClickedMarker(setGalleryMarker.getPosition());\n//             localStorage.setItem(\n//               \"lastClickedMarker\",\n//               JSON.stringify({\n//                 lat: setGalleryMarker.getPosition().getLat(),\n//                 lng: setGalleryMarker.getPosition().getLng(),\n//               })\n//             );\n//             setDrawerOpen(true);\n//           }\n//         );\n//       }\n//     });\n//   }, [flag, galleriesMarker]);\n\n//   return (\n//     <div>\n//       <div\n//         style={{\n//           width: `100%`,\n//           maxWidth: \"560px\",\n//           height: `${mapHeight + 50}px`,\n//           position: \"absolute\",\n//         }}\n//       >\n//         <div\n//           id=\"map\"\n//           ref={mapContainer}\n//           style={{\n//             width: `auto`,\n//             height: `${mapHeight + 50}px`,\n//             // position: \"absolute\",\n//           }}\n//         />\n//         {selectedMarker && drawerOpen ? (\n//           <SwipeableEdgeDrawer\n//             gallery={selectedMarker}\n//             onClose={() => {\n//               setDrawerOpen(false);\n//             }}\n//           />\n//         ) : (\n//           <SwipeableEdgeDrawer />\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default KakaoMap;\n\n/*global kakao*/\nimport React, {\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n  useMemo,\n} from \"react\";\nimport icon from \"../../lib/icon/loc.png\";\nimport iconDark from \"../../lib/icon/dot.png\";\nimport SwipeableEdgeDrawer from \"./SwipeableEdgeDrawer\";\n\nfunction KakaoMap({ lat, lng, flag, galleriesMarker }) {\n  const mapHeight = (window.innerWidth >= 560 ? 560 : window.innerWidth) * 1.1;\n  const mapContainer = useRef(null);\n\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [lastestClickedMarker, setLastestClickedMarker] = useState(null);\n\n  const imageSize = useMemo(() => new window.kakao.maps.Size(35, 35), []);\n  const darkImageSize = useMemo(() => new window.kakao.maps.Size(16, 16), []);\n  const galleryMarkerImage = useMemo(\n    () => new window.kakao.maps.MarkerImage(icon, imageSize),\n    [imageSize]\n  );\n  const galleryMarkerImageDark = useMemo(\n    () => new window.kakao.maps.MarkerImage(iconDark, darkImageSize),\n    [darkImageSize]\n  );\n\n  const mapOptions = useMemo(\n    () => ({\n      center: new window.kakao.maps.LatLng(lat, lng),\n      level: 6,\n    }),\n    [lat, lng]\n  );\n\n  const createGalleryMarker = useCallback((galleryMarker, map, markerImage) => {\n    const setGalleryMarker = new window.kakao.maps.Marker({\n      map: map,\n      position: new window.kakao.maps.LatLng(\n        galleryMarker.latlng.lat,\n        galleryMarker.latlng.lng\n      ),\n      image: markerImage,\n      zIndex: galleryMarker.onDisplay ? 99 : undefined,\n    });\n\n    window.kakao.maps.event.addListener(setGalleryMarker, \"click\", () => {\n      map.panTo(setGalleryMarker.getPosition());\n      window.scrollTo({\n        top: document.body.scrollHeight,\n        behavior: \"smooth\",\n      });\n\n      setSelectedMarker(galleryMarker);\n      setLastestClickedMarker(setGalleryMarker.getPosition());\n      localStorage.setItem(\n        \"lastClickedMarker\",\n        JSON.stringify({\n          lat: setGalleryMarker.getPosition().getLat(),\n          lng: setGalleryMarker.getPosition().getLng(),\n        })\n      );\n      setDrawerOpen(true);\n    });\n  }, []);\n\n  useEffect(() => {\n    const map = new window.kakao.maps.Map(mapContainer.current, mapOptions);\n\n    const storedLastClickedMarker = localStorage.getItem(\"lastClickedMarker\");\n    const initialLastClickedMarker = storedLastClickedMarker\n      ? JSON.parse(storedLastClickedMarker)\n      : null;\n\n    setLastestClickedMarker(\n      initialLastClickedMarker\n        ? new window.kakao.maps.LatLng(\n            initialLastClickedMarker.lat,\n            initialLastClickedMarker.lng\n          )\n        : null\n    );\n\n    if (flag) {\n      const markerPosition = new window.kakao.maps.LatLng(lat, lng);\n      const marker = new window.kakao.maps.Marker({\n        map: map,\n        position: markerPosition,\n      });\n    }\n\n    if (lastestClickedMarker) {\n      map.panTo(lastestClickedMarker);\n    }\n\n    galleriesMarker.forEach((galleryMarker) => {\n      if (galleryMarker.onDisplay) {\n        createGalleryMarker(galleryMarker, map, galleryMarkerImage);\n      } else {\n        createGalleryMarker(galleryMarker, map, galleryMarkerImageDark);\n      }\n    });\n  }, [\n    flag,\n    galleriesMarker,\n    lastestClickedMarker,\n    createGalleryMarker,\n    galleryMarkerImage,\n    galleryMarkerImageDark,\n    mapOptions,\n  ]);\n\n  return (\n    <div>\n      <div\n        style={{\n          width: `100%`,\n          maxWidth: \"560px\",\n          height: `${mapHeight + 50}px`,\n          position: \"absolute\",\n        }}\n      >\n        <div id=\"map\" ref={mapContainer} className=\"map-container\" />\n        {selectedMarker && drawerOpen ? (\n          <SwipeableEdgeDrawer\n            gallery={selectedMarker}\n            onClose={() => {\n              setDrawerOpen(false);\n            }}\n          />\n        ) : (\n          <SwipeableEdgeDrawer />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default KakaoMap;\n"],"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"},"metadata":{},"sourceType":"module"}