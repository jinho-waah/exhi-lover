{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// import styled from \"styled-components\";\n// import axios from \"axios\";\n// import colorSet from \"../../lib/styles/colorSet\";\n// import TagsCheckBox from \"./TagsCheckBox\";\n// import HorizontalLine from \"../common/HorizontalLine\";\n// import PostTemplate from \"../post/PostTemplate\";\n// function IdToShow({ TagItems }) {\n//   const [tagIdsUrl, setTagIdsUrl] = useState(\"\");\n//   const [showsId, setShowsId] = useState(null);\n//   const [shows, setShows] = useState(null);\n//   const [tags, setTags] = useState(null);\n//   const [tagsId, setTagsId] = useState(null);\n//   const [error, setError] = useState(null);\n//   useEffect(() => {\n//     const tagObject = TagItems.reduce((acc, tagName) => {\n//       if (database.hasOwnProperty(tagName)) {\n//         acc[tagName] = database[tagName];\n//       }\n//       return acc;\n//     }, {});\n//     const tagIds = Object.values(tagObject).filter(\n//       (value) => typeof value === \"number\"\n//     );\n//     const tagIdsString = tagIds.join(\"&\");\n//     tagIds.sort((a, b) => a - b);\n//     const url = tagIdsString\n//       ? `/api/exhibition_showId/${tagIdsString}`\n//       : \"/api/shows\";\n//     const fetchShowsId = async () => {\n//       try {\n//         setError(null);\n//         setShowsId(null);\n//         // const response = await axios.get(`https://exhi-lover.com${url}`);\n//         const response = await axios.get(`http://localhost:5100${url}`);\n//         if (url !== \"/api/shows\") {\n//           const exhibitionIds = response.data.map(\n//             ({ exhibition_id }) => exhibition_id\n//           );\n//           exhibitionIds.sort((a, b) => a - b);\n//           setShowsId(exhibitionIds);\n//           console.log(showsId);\n//           setShows(null);\n//         } else if (url === \"/api/shows\") {\n//           setShows(response.data);\n//         }\n//       } catch (e) {\n//         setError(e);\n//       }\n//     };\n//     fetchShowsId();\n//   }, [TagItems]);\n//   useEffect(() => {\n//     const fetchShow = async () => {\n//       if (showsId !== null) {\n//         try {\n//           setError(null);\n//           setShows(null);\n//           const showUrl = showsId ? `/api/shows_id/${showsId}` : \"/api/shows\";\n//           // const response = await axios.get(`https://exhi-lover.com${showUrl}`);\n//           const response = await axios.get(`http://localhost:5100${showUrl}`);\n//           setShows(response.data);\n//         } catch (e) {\n//           setError(e);\n//         }\n//       }\n//     };\n//     fetchShow();\n//   }, [showsId]);\n//   return { shows, tags };\n// }\n// export default IdToShow;","map":{"version":3,"names":[],"sources":["/Users/andrew/Desktop/exhi/exhi/client/src/component/hashtag/IdToShow.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\n// import styled from \"styled-components\";\n// import axios from \"axios\";\n// import colorSet from \"../../lib/styles/colorSet\";\n// import TagsCheckBox from \"./TagsCheckBox\";\n// import HorizontalLine from \"../common/HorizontalLine\";\n// import PostTemplate from \"../post/PostTemplate\";\n\n// function IdToShow({ TagItems }) {\n//   const [tagIdsUrl, setTagIdsUrl] = useState(\"\");\n//   const [showsId, setShowsId] = useState(null);\n//   const [shows, setShows] = useState(null);\n//   const [tags, setTags] = useState(null);\n//   const [tagsId, setTagsId] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const tagObject = TagItems.reduce((acc, tagName) => {\n//       if (database.hasOwnProperty(tagName)) {\n//         acc[tagName] = database[tagName];\n//       }\n//       return acc;\n//     }, {});\n//     const tagIds = Object.values(tagObject).filter(\n//       (value) => typeof value === \"number\"\n//     );\n//     const tagIdsString = tagIds.join(\"&\");\n//     tagIds.sort((a, b) => a - b);\n//     const url = tagIdsString\n//       ? `/api/exhibition_showId/${tagIdsString}`\n//       : \"/api/shows\";\n\n//     const fetchShowsId = async () => {\n//       try {\n//         setError(null);\n//         setShowsId(null);\n//         // const response = await axios.get(`https://exhi-lover.com${url}`);\n//         const response = await axios.get(`http://localhost:5100${url}`);\n//         if (url !== \"/api/shows\") {\n//           const exhibitionIds = response.data.map(\n//             ({ exhibition_id }) => exhibition_id\n//           );\n//           exhibitionIds.sort((a, b) => a - b);\n\n//           setShowsId(exhibitionIds);\n//           console.log(showsId);\n//           setShows(null);\n//         } else if (url === \"/api/shows\") {\n//           setShows(response.data);\n//         }\n//       } catch (e) {\n//         setError(e);\n//       }\n//     };\n\n//     fetchShowsId();\n//   }, [TagItems]);\n\n//   useEffect(() => {\n//     const fetchShow = async () => {\n//       if (showsId !== null) {\n//         try {\n//           setError(null);\n//           setShows(null);\n//           const showUrl = showsId ? `/api/shows_id/${showsId}` : \"/api/shows\";\n//           // const response = await axios.get(`https://exhi-lover.com${showUrl}`);\n//           const response = await axios.get(`http://localhost:5100${showUrl}`);\n//           setShows(response.data);\n//         } catch (e) {\n//           setError(e);\n//         }\n//       }\n//     };\n\n//     fetchShow();\n//   }, [showsId]);\n\n//   return { shows, tags };\n// }\n\n// export default IdToShow;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA"},"metadata":{},"sourceType":"module"}