{"ast":null,"code":"import _classCallCheck from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classPrivateFieldInitSpec from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateFieldSet from \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\n\nvar _online, _cleanup, _setup;\n\n// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = (_online = /*#__PURE__*/new WeakMap(), _cleanup = /*#__PURE__*/new WeakMap(), _setup = /*#__PURE__*/new WeakMap(), /*#__PURE__*/function (_Subscribable) {\n  _inherits(OnlineManager, _Subscribable);\n\n  var _super = _createSuper(OnlineManager);\n\n  function OnlineManager() {\n    var _this;\n\n    _classCallCheck(this, OnlineManager);\n\n    _this = _super.call(this);\n\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _online, {\n      writable: true,\n      value: true\n    });\n\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _cleanup, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _setup, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldSet(_assertThisInitialized(_this), _setup, function (onOnline) {\n      if (!isServer && window.addEventListener) {\n        var onlineListener = function onlineListener() {\n          return onOnline(true);\n        };\n\n        var offlineListener = function offlineListener() {\n          return onOnline(false);\n        };\n\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return function () {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n\n      return;\n    });\n\n    return _this;\n  }\n\n  _createClass(OnlineManager, [{\n    key: \"onSubscribe\",\n    value: function onSubscribe() {\n      if (!_classPrivateFieldGet(this, _cleanup)) {\n        this.setEventListener(_classPrivateFieldGet(this, _setup));\n      }\n    }\n  }, {\n    key: \"onUnsubscribe\",\n    value: function onUnsubscribe() {\n      if (!this.hasListeners()) {\n        var _classPrivateFieldGet2;\n\n        (_classPrivateFieldGet2 = _classPrivateFieldGet(this, _cleanup)) === null || _classPrivateFieldGet2 === void 0 ? void 0 : _classPrivateFieldGet2.call(this);\n\n        _classPrivateFieldSet(this, _cleanup, void 0);\n      }\n    }\n  }, {\n    key: \"setEventListener\",\n    value: function setEventListener(setup) {\n      var _classPrivateFieldGet3;\n\n      _classPrivateFieldSet(this, _setup, setup);\n\n      (_classPrivateFieldGet3 = _classPrivateFieldGet(this, _cleanup)) === null || _classPrivateFieldGet3 === void 0 ? void 0 : _classPrivateFieldGet3.call(this);\n\n      _classPrivateFieldSet(this, _cleanup, setup(this.setOnline.bind(this)));\n    }\n  }, {\n    key: \"setOnline\",\n    value: function setOnline(online) {\n      var changed = _classPrivateFieldGet(this, _online) !== online;\n\n      if (changed) {\n        _classPrivateFieldSet(this, _online, online);\n\n        this.listeners.forEach(function (listener) {\n          listener(online);\n        });\n      }\n    }\n  }, {\n    key: \"isOnline\",\n    value: function isOnline() {\n      return _classPrivateFieldGet(this, _online);\n    }\n  }]);\n\n  return OnlineManager;\n}(Subscribable));\nvar onlineManager = new OnlineManager();\nexport { OnlineManager, onlineManager };","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA,SAASA,YAAT,QAA6B,mBAA7B;AACA,SAASC,QAAT,QAAyB,YAAzB;AAKO,IAAMC;EAAA;;EAAA;;EAMX,yBAAc;IAAA;;IAAA;;IACZ;;IADY;MAAA;MAAA,OALJ;IAKI;;IAAA;MAAA;MAAA;IAAA;;IAAA;MAAA;MAAA;IAAA;;IAEZ,6DAAc,UAACC,QAAD,EAAc;MAG1B,IAAI,CAACF,QAAD,IAAaG,OAAOC,gBAAxB,EAA0C;QACxC,IAAMC,iBAAiB,SAAjBA,cAAiB;UAAA,OAAMH,SAAS,IAAT,CAAN;QAAA,CAAvB;;QACA,IAAMI,kBAAkB,SAAlBA,eAAkB;UAAA,OAAMJ,SAAS,KAAT,CAAN;QAAA,CAAxB;;QAEAC,OAAOC,gBAAP,CAAwB,QAAxB,EAAkCC,cAAlC,EAAkD,KAAlD;QACAF,OAAOC,gBAAP,CAAwB,SAAxB,EAAmCE,eAAnC,EAAoD,KAApD;QAEA,OAAO,YAAM;UAEXH,OAAOI,mBAAP,CAA2B,QAA3B,EAAqCF,cAArC;UACAF,OAAOI,mBAAP,CAA2B,SAA3B,EAAsCD,eAAtC;QACF,CAJA;MAKF;;MAEA;IACF,CAlBA;;IAFY;EAqBd;;EA3BW;IAAA;IAAA,OA6BD,uBAAoB;MAC5B,IAAI,uBAAC,IAAD,WAAJ,EAAoB;QAClB,KAAKE,gBAAL,uBAAsB,IAAtB;MACF;IACF;EAjCW;IAAA;IAAA,OAmCD,yBAAgB;MACxB,IAAI,CAAC,KAAKC,YAAL,EAAL,EAA0B;QAAA;;QACxB;;QACA,sCAAgB,MAAhB;MACF;IACF;EAxCW;IAAA;IAAA,OA0CX,0BAAiBC,KAAjB,EAAuC;MAAA;;MACrC,oCAAcA,KAAd;;MACA;;MACA,sCAAgBA,MAAM,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAN,CAAhB;IACF;EA9CW;IAAA;IAAA,OAgDX,mBAAUC,MAAV,EAAiC;MAC/B,IAAMC,UAAU,yCAAiBD,MAAjC;;MAEA,IAAIC,OAAJ,EAAa;QACX,qCAAeD,MAAf;;QACA,KAAKE,SAAL,CAAeC,OAAf,CAAuB,UAACC,QAAD,EAAc;UACnCA,SAASJ,MAAT;QACD,CAFD;MAGF;IACF;EAzDW;IAAA;IAAA,OA2DX,oBAAoB;MAClB,6BAAO,IAAP;IACF;EA7DW;;EAAA;AAAA,EAAsBd,YAAtB,EAAN;AAgEA,IAAMmB,gBAAgB,IAAIjB,aAAJ,EAAtB","names":["Subscribable","isServer","OnlineManager","onOnline","window","addEventListener","onlineListener","offlineListener","removeEventListener","setEventListener","hasListeners","setup","setOnline","bind","online","changed","listeners","forEach","listener","onlineManager"],"sources":["/Users/andrew/node_modules/@tanstack/query-core/src/onlineManager.ts"],"sourcesContent":["import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (online: boolean) => void\ntype SetupFn = (setOnline: Listener) => (() => void) | undefined\n\nexport class OnlineManager extends Subscribable<Listener> {\n  #online = true\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onOnline) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true)\n        const offlineListener = () => onOnline(false)\n        // Listen to online\n        window.addEventListener('online', onlineListener, false)\n        window.addEventListener('offline', offlineListener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', onlineListener)\n          window.removeEventListener('offline', offlineListener)\n        }\n      }\n\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup(this.setOnline.bind(this))\n  }\n\n  setOnline(online: boolean): void {\n    const changed = this.#online !== online\n\n    if (changed) {\n      this.#online = online\n      this.listeners.forEach((listener) => {\n        listener(online)\n      })\n    }\n  }\n\n  isOnline(): boolean {\n    return this.#online\n  }\n}\n\nexport const onlineManager = new OnlineManager()\n"]},"metadata":{},"sourceType":"module"}