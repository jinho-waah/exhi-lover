{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport createRequestSaga from \"/Users/andrew/Desktop/exhi/exhi/client/src/lib/createRequestSaga\";\nimport * as postsApi from \"../lib/api/post\";\nimport { takeLatest } from \"redux-saga/effects\";\nexport const VIEW_POST = \"post/VIEW_POST\";\nexport const VIEW_POST_SUCCESS = \"post/VIEW_POST_SUCCESS\";\nexport const VIEW_POST_FAILURE = \"post/VIEW_POST_FAILURE\";\nexport const viewPost = createAction(VIEW_POST);\nconst viewPostSaga = createRequestSaga(VIEW_POST, postsApi.viewPost);\nexport function* postSaga() {\n  yield takeLatest(VIEW_POST, viewPostSaga);\n}\nconst initialState = {\n  post: null,\n  error: null\n};\nconst post = handleActions({\n  [VIEW_POST_SUCCESS]: (state, _ref) => {\n    let {\n      payload: post\n    } = _ref;\n    return { ...state,\n      post\n    };\n  },\n  [VIEW_POST_FAILURE]: (state, _ref2) => {\n    let {\n      payload: error\n    } = _ref2;\n    return { ...state,\n      error\n    };\n  }\n}, initialState);\nexport default post;","map":{"version":3,"names":["createAction","handleActions","createRequestSaga","postsApi","takeLatest","VIEW_POST","VIEW_POST_SUCCESS","VIEW_POST_FAILURE","viewPost","viewPostSaga","postSaga","initialState","post","error","state","payload"],"sources":["/Users/andrew/Desktop/exhi/exhi/client/src/modules/post.js"],"sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport createRequestSaga from \"/Users/andrew/Desktop/exhi/exhi/client/src/lib/createRequestSaga\";\nimport * as postsApi from \"../lib/api/post\";\nimport { takeLatest } from \"redux-saga/effects\";\n\nexport const VIEW_POST = \"post/VIEW_POST\";\nexport const VIEW_POST_SUCCESS = \"post/VIEW_POST_SUCCESS\";\nexport const VIEW_POST_FAILURE = \"post/VIEW_POST_FAILURE\";\n\nexport const viewPost = createAction(VIEW_POST);\n\nconst viewPostSaga = createRequestSaga(VIEW_POST, postsApi.viewPost);\nexport function* postSaga() {\n  yield takeLatest(VIEW_POST, viewPostSaga);\n}\n\nconst initialState = {\n  post: null,\n  error: null,\n};\n\nconst post = handleActions(\n  {\n    [VIEW_POST_SUCCESS]: (state, { payload: post }) => ({\n      ...state,\n      post,\n    }),\n    [VIEW_POST_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n  },\n  initialState\n);\n\nexport default post;\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,MAA8B,kEAA9B;AACA,OAAO,KAAKC,QAAZ,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,OAAO,MAAMC,SAAS,GAAG,gBAAlB;AACP,OAAO,MAAMC,iBAAiB,GAAG,wBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,wBAA1B;AAEP,OAAO,MAAMC,QAAQ,GAAGR,YAAY,CAACK,SAAD,CAA7B;AAEP,MAAMI,YAAY,GAAGP,iBAAiB,CAACG,SAAD,EAAYF,QAAQ,CAACK,QAArB,CAAtC;AACA,OAAO,UAAUE,QAAV,GAAqB;EAC1B,MAAMN,UAAU,CAACC,SAAD,EAAYI,YAAZ,CAAhB;AACD;AAED,MAAME,YAAY,GAAG;EACnBC,IAAI,EAAE,IADa;EAEnBC,KAAK,EAAE;AAFY,CAArB;AAKA,MAAMD,IAAI,GAAGX,aAAa,CACxB;EACE,CAACK,iBAAD,GAAqB,CAACQ,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEH;IAAX,CAAR;IAAA,OAA+B,EAClD,GAAGE,KAD+C;MAElDF;IAFkD,CAA/B;EAAA,CADvB;EAKE,CAACL,iBAAD,GAAqB,CAACO,KAAD;IAAA,IAAQ;MAAEC,OAAO,EAAEF;IAAX,CAAR;IAAA,OAAgC,EACnD,GAAGC,KADgD;MAEnDD;IAFmD,CAAhC;EAAA;AALvB,CADwB,EAWxBF,YAXwB,CAA1B;AAcA,eAAeC,IAAf"},"metadata":{},"sourceType":"module"}