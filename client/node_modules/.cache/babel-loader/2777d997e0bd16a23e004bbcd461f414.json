{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/client/src/component/post/PostTemplate.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport Post from \"./Post\";\nimport colorSet from \"../../lib/styles/colorSet\";\nimport { useEffect, useState, memo } from \"react\";\nimport axios from \"axios\";\nimport { fetchShowTagsId, fetchTagName } from \"../../lib/api/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TemplateBlock = styled.div`\n  padding-top: 0.2rem;\n  box-sizing: border-box;\n  background: #000000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: row wrap;\n`;\n_c = TemplateBlock;\n\nconst PostTemplate = _ref => {\n  _s();\n\n  let {\n    shows\n  } = _ref;\n  const [tags, setTags] = useState(null);\n  const [tagsId, setTagsId] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTagsId = async () => {\n      try {\n        setError(null);\n        const tagsIdData = await Promise.all(shows.map(async show => {\n          const data = await fetchShowTagsId(show.id);\n          return data;\n        }));\n\n        if (tagsIdData.length > 0) {\n          const tagsIdArray = tagsIdData.reduce((acc, innerArray) => {\n            innerArray.forEach(row => {\n              const {\n                exhibition_id,\n                tag_id\n              } = row;\n              const index = acc.findIndex(obj => obj.exhibition_id === exhibition_id);\n\n              if (index === -1) {\n                acc.push({\n                  exhibition_id,\n                  tags: [tag_id]\n                });\n              } else {\n                acc[index].tags.push(tag_id);\n              }\n            });\n            return acc;\n          }, []);\n          setTagsId(tagsIdArray);\n        }\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    fetchTagsId();\n  }, [shows]);\n  useEffect(() => {\n    const fetchTag = async () => {\n      try {\n        setError(null);\n        const tagData = await Promise.all(tagsId.map(async _ref2 => {\n          let {\n            exhibition_id,\n            tags\n          } = _ref2;\n          const tagNames = await Promise.all(tags.map(async tagId => {\n            const name = await fetchTagName(tagId);\n            return name;\n          }));\n          return {\n            exhibition_id,\n            tagNames\n          };\n        }));\n        setTags(tagData.reduce((acc, _ref3) => {\n          let {\n            exhibition_id,\n            tagNames\n          } = _ref3;\n          acc[exhibition_id] = tagNames;\n          return acc;\n        }, {}));\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    if (tagsId !== null) {\n      fetchTag();\n    }\n  }, [tagsId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TemplateBlock, {\n      children: shows.map((show, index) => {\n        const key = `${show.show_name}`; // create unique key prop value\n\n        const colorIndex = index % colorSet.length; // determine color index based on position in array\n\n        const color = colorSet[colorIndex]; // get color from colorSet array\n\n        return /*#__PURE__*/_jsxDEV(Post, {\n          show: show,\n          color: color,\n          tags: tags === null || tags === void 0 ? void 0 : tags[show.id]\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this); // pass color as prop to Post component\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PostTemplate, \"e2gu2TFi3Ow74SJwvemRq0mOUkc=\");\n\n_c2 = PostTemplate;\nexport default _c3 = /*#__PURE__*/memo(PostTemplate);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TemplateBlock\");\n$RefreshReg$(_c2, \"PostTemplate\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["styled","Post","colorSet","useEffect","useState","memo","axios","fetchShowTagsId","fetchTagName","TemplateBlock","div","PostTemplate","shows","tags","setTags","tagsId","setTagsId","error","setError","fetchTagsId","tagsIdData","Promise","all","map","show","data","id","length","tagsIdArray","reduce","acc","innerArray","forEach","row","exhibition_id","tag_id","index","findIndex","obj","push","e","fetchTag","tagData","tagNames","tagId","name","key","show_name","colorIndex","color"],"sources":["/Users/andrew/Desktop/exhi/exhi/client/src/component/post/PostTemplate.js"],"sourcesContent":["import styled from \"styled-components\";\nimport Post from \"./Post\";\nimport colorSet from \"../../lib/styles/colorSet\";\nimport { useEffect, useState, memo } from \"react\";\nimport axios from \"axios\";\nimport { fetchShowTagsId, fetchTagName } from \"../../lib/api/Api\";\n\nconst TemplateBlock = styled.div`\n  padding-top: 0.2rem;\n  box-sizing: border-box;\n  background: #000000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: row wrap;\n`;\n\nconst PostTemplate = ({ shows }) => {\n  const [tags, setTags] = useState(null);\n  const [tagsId, setTagsId] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTagsId = async () => {\n      try {\n        setError(null);\n\n        const tagsIdData = await Promise.all(\n          shows.map(async (show) => {\n            const data = await fetchShowTagsId(show.id);\n            return data;\n          })\n        );\n\n        if (tagsIdData.length > 0) {\n          const tagsIdArray = tagsIdData.reduce((acc, innerArray) => {\n            innerArray.forEach((row) => {\n              const { exhibition_id, tag_id } = row;\n              const index = acc.findIndex(\n                (obj) => obj.exhibition_id === exhibition_id\n              );\n              if (index === -1) {\n                acc.push({ exhibition_id, tags: [tag_id] });\n              } else {\n                acc[index].tags.push(tag_id);\n              }\n            });\n            return acc;\n          }, []);\n          setTagsId(tagsIdArray);\n        }\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    fetchTagsId();\n  }, [shows]);\n\n  useEffect(() => {\n    const fetchTag = async () => {\n      try {\n        setError(null);\n        const tagData = await Promise.all(\n          tagsId.map(async ({ exhibition_id, tags }) => {\n            const tagNames = await Promise.all(\n              tags.map(async (tagId) => {\n                const name = await fetchTagName(tagId);\n                return name;\n              })\n            );\n            return { exhibition_id, tagNames };\n          })\n        );\n        setTags(\n          tagData.reduce((acc, { exhibition_id, tagNames }) => {\n            acc[exhibition_id] = tagNames;\n            return acc;\n          }, {})\n        );\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    if (tagsId !== null) {\n      fetchTag();\n    }\n  }, [tagsId]);\n\n  return (\n    <>\n      <TemplateBlock>\n        {shows.map((show, index) => {\n          const key = `${show.show_name}`; // create unique key prop value\n          const colorIndex = index % colorSet.length; // determine color index based on position in array\n          const color = colorSet[colorIndex]; // get color from colorSet array\n          return (\n            <Post show={show} key={key} color={color} tags={tags?.[show.id]} />\n          ); // pass color as prop to Post component\n        })}\n      </TemplateBlock>\n    </>\n  );\n};\n\nexport default memo(PostTemplate);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}