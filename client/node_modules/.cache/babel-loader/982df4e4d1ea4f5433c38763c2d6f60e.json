{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/MapTemplate.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from \"react\";\n// import styled from \"styled-components\";\n// import KakaoMap from \"./KaKaoMap\";\n// import Marker from \"./Marker\";\n// import { useQuery } from \"@tanstack/react-query\";\n// const MapBox = styled.div`\n//   width: 100%;\n//   align-items: center;\n//   margin: 0;\n//   @media (max-width: 560px) {\n//     height: calc(110vw + 50px);\n//   }\n//   @media (min-width: 561px) {\n//     height: 666px;\n//   }\n// `;\n// const fetchUserLocation = () => {\n//   return new Promise((resolve, reject) => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.getCurrentPosition(\n//         (position) => {\n//           resolve({\n//             lat: position.coords.latitude,\n//             lng: position.coords.longitude,\n//           });\n//         },\n//         (err) => {\n//           reject(new Error(\"geolocation을 사용할 수 없어요.\"));\n//         }\n//       );\n//     } else {\n//       reject(new Error(\"geolocation을 지원하지 않습니다.\"));\n//     }\n//   });\n// };\n// const MapTemplate = () => {\n//   const [flag, setFlag] = useState(false); // marker 활성화를 위한 flag 유지\n//   const {\n//     data: userLocation,\n//     isError: locationError,\n//     isLoading: locationLoading,\n//   } = useQuery({\n//     queryKey: [\"userLocation\"],\n//     queryFn: fetchUserLocation,\n//   });\n//   const { positions, isLoading: markersLoading } = Marker(); // Marker에서 positions과 로딩 상태 받아옴\n//   useEffect(() => {\n//     if (!locationLoading && !markersLoading && userLocation) {\n//       setFlag(true); // 모든 로딩이 완료되었을 때 flag를 true로 설정\n//     }\n//   }, [locationLoading, markersLoading, userLocation]);\n//   if (locationError) {\n//     return <div>{locationError.message}</div>;\n//   }\n//   return (\n//     <MapBox>\n//       {flag && (\n//         <KakaoMap\n//           lat={userLocation.lat}\n//           lng={userLocation.lng}\n//           flag={flag} // showMarker에 flag 값 전달\n//           galleriesMarker={positions} // 갤러리 마커 데이터 전달\n//         />\n//       )}\n//     </MapBox>\n//   );\n// };\n// export default MapTemplate;\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport KakaoMap from \"./KaKaoMap\";\nimport Marker from \"./Marker\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapBox = styled.div`\n  width: 100%;\n  align-items: center;\n  margin: 0;\n\n  @media (max-width: 560px) {\n    height: calc(110vw + 50px);\n  }\n\n  @media (min-width: 561px) {\n    height: 666px;\n  }\n`;\n_c = MapBox;\n\nconst fetchUserLocation = async () => {\n  if (navigator.geolocation) {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(position => {\n        resolve({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, err => {\n        reject(new Error(\"geolocation을 사용할 수 없어요.\"));\n      });\n    });\n  } else {\n    throw new Error(\"geolocation을 지원하지 않습니다.\");\n  }\n};\n\nconst MapTemplate = () => {\n  _s();\n\n  const [flag, setFlag] = useState(false);\n  const {\n    data: userLocation,\n    error: locationError,\n    isLoading: locationLoading\n  } = useQuery({\n    queryKey: [\"userLocation\"],\n    queryFn: fetchUserLocation\n  });\n  const {\n    data: positions = [],\n    isLoading: markersLoading\n  } = Marker();\n  useEffect(() => {\n    if (!locationLoading && !markersLoading && userLocation) {\n      setFlag(true);\n    }\n  }, [locationLoading, markersLoading, userLocation]);\n\n  if (locationError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: locationError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MapBox, {\n    children: flag && /*#__PURE__*/_jsxDEV(KakaoMap, {\n      lat: userLocation.lat,\n      lng: userLocation.lng,\n      flag: flag,\n      galleriesMarker: positions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapTemplate, \"LOZxuzLN4hMXbRxyVLt4iX+3Nj8=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = MapTemplate;\nexport default MapTemplate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapBox\");\n$RefreshReg$(_c2, \"MapTemplate\");","map":{"version":3,"names":["React","useEffect","useState","styled","KakaoMap","Marker","useQuery","MapBox","div","fetchUserLocation","navigator","geolocation","Promise","resolve","reject","getCurrentPosition","position","lat","coords","latitude","lng","longitude","err","Error","MapTemplate","flag","setFlag","data","userLocation","error","locationError","isLoading","locationLoading","queryKey","queryFn","positions","markersLoading","message"],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/MapTemplate.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import styled from \"styled-components\";\n// import KakaoMap from \"./KaKaoMap\";\n// import Marker from \"./Marker\";\n// import { useQuery } from \"@tanstack/react-query\";\n\n// const MapBox = styled.div`\n//   width: 100%;\n//   align-items: center;\n//   margin: 0;\n\n//   @media (max-width: 560px) {\n//     height: calc(110vw + 50px);\n//   }\n\n//   @media (min-width: 561px) {\n//     height: 666px;\n//   }\n// `;\n\n// const fetchUserLocation = () => {\n//   return new Promise((resolve, reject) => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.getCurrentPosition(\n//         (position) => {\n//           resolve({\n//             lat: position.coords.latitude,\n//             lng: position.coords.longitude,\n//           });\n//         },\n//         (err) => {\n//           reject(new Error(\"geolocation을 사용할 수 없어요.\"));\n//         }\n//       );\n//     } else {\n//       reject(new Error(\"geolocation을 지원하지 않습니다.\"));\n//     }\n//   });\n// };\n\n// const MapTemplate = () => {\n//   const [flag, setFlag] = useState(false); // marker 활성화를 위한 flag 유지\n\n//   const {\n//     data: userLocation,\n//     isError: locationError,\n//     isLoading: locationLoading,\n//   } = useQuery({\n//     queryKey: [\"userLocation\"],\n//     queryFn: fetchUserLocation,\n//   });\n\n//   const { positions, isLoading: markersLoading } = Marker(); // Marker에서 positions과 로딩 상태 받아옴\n\n//   useEffect(() => {\n//     if (!locationLoading && !markersLoading && userLocation) {\n//       setFlag(true); // 모든 로딩이 완료되었을 때 flag를 true로 설정\n//     }\n//   }, [locationLoading, markersLoading, userLocation]);\n\n//   if (locationError) {\n//     return <div>{locationError.message}</div>;\n//   }\n\n//   return (\n//     <MapBox>\n//       {flag && (\n//         <KakaoMap\n//           lat={userLocation.lat}\n//           lng={userLocation.lng}\n//           flag={flag} // showMarker에 flag 값 전달\n//           galleriesMarker={positions} // 갤러리 마커 데이터 전달\n//         />\n//       )}\n//     </MapBox>\n//   );\n// };\n\n// export default MapTemplate;\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport KakaoMap from \"./KaKaoMap\";\nimport Marker from \"./Marker\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nconst MapBox = styled.div`\n  width: 100%;\n  align-items: center;\n  margin: 0;\n\n  @media (max-width: 560px) {\n    height: calc(110vw + 50px);\n  }\n\n  @media (min-width: 561px) {\n    height: 666px;\n  }\n`;\n\nconst fetchUserLocation = async () => {\n  if (navigator.geolocation) {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          resolve({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          });\n        },\n        (err) => {\n          reject(new Error(\"geolocation을 사용할 수 없어요.\"));\n        }\n      );\n    });\n  } else {\n    throw new Error(\"geolocation을 지원하지 않습니다.\");\n  }\n};\n\nconst MapTemplate = () => {\n  const [flag, setFlag] = useState(false);\n\n  const {\n    data: userLocation,\n    error: locationError,\n    isLoading: locationLoading,\n  } = useQuery({\n    queryKey: [\"userLocation\"],\n    queryFn: fetchUserLocation,\n  });\n\n  const { data: positions = [], isLoading: markersLoading } = Marker();\n\n  useEffect(() => {\n    if (!locationLoading && !markersLoading && userLocation) {\n      setFlag(true);\n    }\n  }, [locationLoading, markersLoading, userLocation]);\n\n  if (locationError) {\n    return <div>{locationError.message}</div>;\n  }\n\n  return (\n    <MapBox>\n      {flag && (\n        <KakaoMap\n          lat={userLocation.lat}\n          lng={userLocation.lng}\n          flag={flag}\n          galleriesMarker={positions}\n        />\n      )}\n    </MapBox>\n  );\n};\n\nexport default MapTemplate;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;AAEA,MAAMC,MAAM,GAAGJ,MAAM,CAACK,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;KAAMD,M;;AAcN,MAAME,iBAAiB,GAAG,YAAY;EACpC,IAAIC,SAAS,CAACC,WAAd,EAA2B;IACzB,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACtCJ,SAAS,CAACC,WAAV,CAAsBI,kBAAtB,CACGC,QAAD,IAAc;QACZH,OAAO,CAAC;UACNI,GAAG,EAAED,QAAQ,CAACE,MAAT,CAAgBC,QADf;UAENC,GAAG,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG;QAFf,CAAD,CAAP;MAID,CANH,EAOGC,GAAD,IAAS;QACPR,MAAM,CAAC,IAAIS,KAAJ,CAAU,yBAAV,CAAD,CAAN;MACD,CATH;IAWD,CAZM,CAAP;EAaD,CAdD,MAcO;IACL,MAAM,IAAIA,KAAJ,CAAU,yBAAV,CAAN;EACD;AACF,CAlBD;;AAoBA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,KAAD,CAAhC;EAEA,MAAM;IACJyB,IAAI,EAAEC,YADF;IAEJC,KAAK,EAAEC,aAFH;IAGJC,SAAS,EAAEC;EAHP,IAIF1B,QAAQ,CAAC;IACX2B,QAAQ,EAAE,CAAC,cAAD,CADC;IAEXC,OAAO,EAAEzB;EAFE,CAAD,CAJZ;EASA,MAAM;IAAEkB,IAAI,EAAEQ,SAAS,GAAG,EAApB;IAAwBJ,SAAS,EAAEK;EAAnC,IAAsD/B,MAAM,EAAlE;EAEAJ,SAAS,CAAC,MAAM;IACd,IAAI,CAAC+B,eAAD,IAAoB,CAACI,cAArB,IAAuCR,YAA3C,EAAyD;MACvDF,OAAO,CAAC,IAAD,CAAP;IACD;EACF,CAJQ,EAIN,CAACM,eAAD,EAAkBI,cAAlB,EAAkCR,YAAlC,CAJM,CAAT;;EAMA,IAAIE,aAAJ,EAAmB;IACjB,oBAAO;MAAA,UAAMA,aAAa,CAACO;IAApB;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE,QAAC,MAAD;IAAA,UACGZ,IAAI,iBACH,QAAC,QAAD;MACE,GAAG,EAAEG,YAAY,CAACX,GADpB;MAEE,GAAG,EAAEW,YAAY,CAACR,GAFpB;MAGE,IAAI,EAAEK,IAHR;MAIE,eAAe,EAAEU;IAJnB;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CApCD;;GAAMX,W;UAOAlB,Q;;;MAPAkB,W;AAsCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}