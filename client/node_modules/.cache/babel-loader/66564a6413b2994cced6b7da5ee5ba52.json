{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/client/src/component/items/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport Post from \"../Post\";\nimport Typography from \"@mui/material/Typography\";\nimport axios from \"axios\";\nimport ShowBox from \"../../pages/ShowBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst handValueChange = e => {\n  let nextState = {};\n  nextState[e.target.name] = e.target.value;\n  this.setState(nextState);\n};\n\nfunction Search() {\n  _s();\n\n  const [shows, setShows] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchShows = async () => {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null);\n        setShows(null); //local에서 할때\n        //const response = await axios.get(\"http://localhost:5100/api/shows\");\n        //build할때\n\n        const response = await axios.get(\"https://exhi-lover.com/api/shows\");\n        setShows(response.data); // 데이터는 response.data 안에 들어있습니다.\n\n        console.log(shows);\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    fetchShows();\n  }, []);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }, this);\n  if (!shows) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ShowBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Search, \"VxLDQCHQIXJ7hBohkb5khdzsdzo=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","Box","TextField","Paper","Post","Typography","axios","ShowBox","handValueChange","e","nextState","target","name","value","setState","Search","shows","setShows","error","setError","fetchShows","response","get","data","console","log"],"sources":["/Users/andrew/Desktop/exhi/exhi/client/src/component/items/Search.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport Post from \"../Post\";\nimport Typography from \"@mui/material/Typography\";\nimport axios from \"axios\";\nimport ShowBox from \"../../pages/ShowBox\";\n\nconst handValueChange = (e) => {\n  let nextState = {};\n  nextState[e.target.name] = e.target.value;\n  this.setState(nextState);\n};\n\nfunction Search() {\n  const [shows, setShows] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchShows = async () => {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null);\n        setShows(null);\n\n        //local에서 할때\n        //const response = await axios.get(\"http://localhost:5100/api/shows\");\n        //build할때\n        const response = await axios.get(\"https://exhi-lover.com/api/shows\");\n        setShows(response.data); // 데이터는 response.data 안에 들어있습니다.\n        console.log(shows);\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    fetchShows();\n  }, []);\n\n  if (error) return <div>에러가 발생했습니다</div>;\n  if (!shows) return null;\n\n  return (\n    <>\n      <ShowBox />\n    </>\n  );\n}\n\nexport default Search;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;;;AAEA,MAAMC,eAAe,GAAIC,CAAD,IAAO;EAC7B,IAAIC,SAAS,GAAG,EAAhB;EACAA,SAAS,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,CAAT,GAA2BH,CAAC,CAACE,MAAF,CAASE,KAApC;EACA,KAAKC,QAAL,CAAcJ,SAAd;AACD,CAJD;;AAMA,SAASK,MAAT,GAAkB;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,IAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMoB,UAAU,GAAG,YAAY;MAC7B,IAAI;QACF;QACAD,QAAQ,CAAC,IAAD,CAAR;QACAF,QAAQ,CAAC,IAAD,CAAR,CAHE,CAKF;QACA;QACA;;QACA,MAAMI,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,kCAAV,CAAvB;QACAL,QAAQ,CAACI,QAAQ,CAACE,IAAV,CAAR,CATE,CASuB;;QACzBC,OAAO,CAACC,GAAR,CAAYT,KAAZ;MACD,CAXD,CAWE,OAAOP,CAAP,EAAU;QACVU,QAAQ,CAACV,CAAD,CAAR;MACD;IACF,CAfD;;IAiBAW,UAAU;EACX,CAnBQ,EAmBN,EAnBM,CAAT;EAqBA,IAAIF,KAAJ,EAAW,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACX,IAAI,CAACF,KAAL,EAAY,OAAO,IAAP;EAEZ,oBACE;IAAA,uBACE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAKD;;GAjCQD,M;;KAAAA,M;AAmCT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}