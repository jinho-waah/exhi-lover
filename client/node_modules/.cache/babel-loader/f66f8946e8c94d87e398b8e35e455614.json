{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KakaoMap.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nimport Marker from \"./Marker\";\nimport { Map, MapMarker, CustomOverlayMap, EventMarkerContainer } from \"react-kakao-maps-sdk\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport icon from \"../../lib/icon/loc7.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction KakaoMap(_ref) {\n  _s();\n\n  let {\n    state,\n    flag\n  } = _ref;\n  const mapHeight = window.innerWidth >= 560 ? 560 : window.innerWidth;\n  const center = state;\n  const [isOpen, setIsOpen] = useState(false);\n  const marker = Marker();\n  console.log(typeof marker, marker); // useEffect(() => {\n  //   setCenter(state);\n  // }, [state]);\n  // const [center, setCenter] = useState({ lat: 36.5, lng: 127.8 });\n  // setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n  // useEffect(() => {\n  //   // setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n  //   var container = document.getElementById(\"map\");\n  //   var options = {\n  //     center: new kakao.maps.LatLng(state.lat, state.lng),\n  //     level: 3,\n  //   };\n  //   var map = new kakao.maps.Map(container, options);\n  //   var markerPosition = new kakao.maps.LatLng(state.lat, state.lng);\n  //   if (flag === true) {\n  //     var marker = new kakao.maps.Marker({\n  //       position: markerPosition,\n  //     });\n  //     marker.setMap(map);\n  //   }\n  // }, [state, flag]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Map // 지도를 표시할 Container\n    , {\n      center: center,\n      style: {\n        // 지도의 크기\n        width: \"100%\",\n        height: `${mapHeight}px`\n      },\n      level: 3 // 지도의 확대 레벨\n      ,\n      children: [flag && /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: center\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 18\n      }, this), marker.map((position, index) => /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: position.latlng // 마커를 표시할 위치\n        ,\n        clickable: true,\n        onClick: () => setIsOpen(true),\n        image: {\n          src: icon,\n          size: {\n            width: 33,\n            height: 33\n          } // 마커이미지의 크기입니다\n\n        },\n        title: position.title // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n        ,\n        children: isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            minWidth: \"150px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"close\",\n            width: \"14\",\n            height: \"13\",\n            src: \"https://t1.daumcdn.net/localimg/localimages/07/mapjsapi/2x/bt_close.gif\",\n            style: {\n              position: \"absolute\",\n              right: \"5px\",\n              top: \"5px\",\n              cursor: \"pointer\"\n            },\n            onClick: () => setIsOpen(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"5px\",\n              color: \"#000\"\n            },\n            children: position.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, `${position.title}-${position.latlng}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(KakaoMap, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = KakaoMap;\nexport default _c2 = /*#__PURE__*/React.memo(KakaoMap);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"KakaoMap\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","Marker","Map","MapMarker","CustomOverlayMap","EventMarkerContainer","AccountBalanceIcon","icon","KakaoMap","state","flag","mapHeight","window","innerWidth","center","isOpen","setIsOpen","marker","console","log","width","height","map","position","index","latlng","src","size","title","minWidth","right","top","cursor","padding","color","memo"],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KakaoMap.js"],"sourcesContent":["/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nimport Marker from \"./Marker\";\nimport {\n  Map,\n  MapMarker,\n  CustomOverlayMap,\n  EventMarkerContainer,\n} from \"react-kakao-maps-sdk\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport icon from \"../../lib/icon/loc7.png\";\n\nfunction KakaoMap({ state, flag }) {\n  const mapHeight = window.innerWidth >= 560 ? 560 : window.innerWidth;\n  const center = state;\n  const [isOpen, setIsOpen] = useState(false);\n  const marker = Marker();\n  console.log(typeof marker, marker);\n  // useEffect(() => {\n  //   setCenter(state);\n  // }, [state]);\n  // const [center, setCenter] = useState({ lat: 36.5, lng: 127.8 });\n  // setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n  // useEffect(() => {\n  //   // setCenter(new kakao.maps.LatLng(state.lat, state.lng));\n\n  //   var container = document.getElementById(\"map\");\n  //   var options = {\n  //     center: new kakao.maps.LatLng(state.lat, state.lng),\n  //     level: 3,\n  //   };\n\n  //   var map = new kakao.maps.Map(container, options);\n  //   var markerPosition = new kakao.maps.LatLng(state.lat, state.lng);\n\n  //   if (flag === true) {\n  //     var marker = new kakao.maps.Marker({\n  //       position: markerPosition,\n  //     });\n  //     marker.setMap(map);\n  //   }\n  // }, [state, flag]);\n\n  return (\n    <div>\n      <Map // 지도를 표시할 Container\n        center={center}\n        style={{\n          // 지도의 크기\n          width: \"100%\",\n          height: `${mapHeight}px`,\n        }}\n        level={3} // 지도의 확대 레벨\n      >\n        {flag && <MapMarker position={center} />}\n        {marker.map((position, index) => (\n          <MapMarker\n            key={`${position.title}-${position.latlng}`}\n            position={position.latlng} // 마커를 표시할 위치\n            clickable={true}\n            onClick={() => setIsOpen(true)}\n            image={{\n              src: icon,\n              size: {\n                width: 33,\n                height: 33,\n              }, // 마커이미지의 크기입니다\n            }}\n            title={position.title} // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n          >\n            {/* MapMarker의 자식을 넣어줌으로 해당 자식이 InfoWindow로 만들어지게 합니다 */}\n            {/* 인포윈도우에 표출될 내용으로 HTML 문자열이나 React Component가 가능합니다 */}\n            {isOpen && (\n              <div style={{ minWidth: \"150px\" }}>\n                <img\n                  alt=\"close\"\n                  width=\"14\"\n                  height=\"13\"\n                  src=\"https://t1.daumcdn.net/localimg/localimages/07/mapjsapi/2x/bt_close.gif\"\n                  style={{\n                    position: \"absolute\",\n                    right: \"5px\",\n                    top: \"5px\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => setIsOpen(false)}\n                />\n                <div style={{ padding: \"5px\", color: \"#000\" }}>\n                  {position.title}\n                </div>\n              </div>\n            )}\n          </MapMarker>\n        ))}\n      </Map>\n    </div>\n  );\n}\n\nexport default React.memo(KakaoMap);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SACEC,GADF,EAEEC,SAFF,EAGEC,gBAHF,EAIEC,oBAJF,QAKO,sBALP;AAMA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;;AAEA,SAASC,QAAT,OAAmC;EAAA;;EAAA,IAAjB;IAAEC,KAAF;IAASC;EAAT,CAAiB;EACjC,MAAMC,SAAS,GAAGC,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,GAA3B,GAAiCD,MAAM,CAACC,UAA1D;EACA,MAAMC,MAAM,GAAGL,KAAf;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,KAAD,CAApC;EACA,MAAMiB,MAAM,GAAGhB,MAAM,EAArB;EACAiB,OAAO,CAACC,GAAR,CAAY,OAAOF,MAAnB,EAA2BA,MAA3B,EALiC,CAMjC;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,uBACE,QAAC,GAAD,CAAK;IAAL;MACE,MAAM,EAAEH,MADV;MAEE,KAAK,EAAE;QACL;QACAM,KAAK,EAAE,MAFF;QAGLC,MAAM,EAAG,GAAEV,SAAU;MAHhB,CAFT;MAOE,KAAK,EAAE,CAPT,CAOY;MAPZ;MAAA,WASGD,IAAI,iBAAI,QAAC,SAAD;QAAW,QAAQ,EAAEI;MAArB;QAAA;QAAA;QAAA;MAAA,QATX,EAUGG,MAAM,CAACK,GAAP,CAAW,CAACC,QAAD,EAAWC,KAAX,kBACV,QAAC,SAAD;QAEE,QAAQ,EAAED,QAAQ,CAACE,MAFrB,CAE6B;QAF7B;QAGE,SAAS,EAAE,IAHb;QAIE,OAAO,EAAE,MAAMT,SAAS,CAAC,IAAD,CAJ1B;QAKE,KAAK,EAAE;UACLU,GAAG,EAAEnB,IADA;UAELoB,IAAI,EAAE;YACJP,KAAK,EAAE,EADH;YAEJC,MAAM,EAAE;UAFJ,CAFD,CAKF;;QALE,CALT;QAYE,KAAK,EAAEE,QAAQ,CAACK,KAZlB,CAYyB;QAZzB;QAAA,UAgBGb,MAAM,iBACL;UAAK,KAAK,EAAE;YAAEc,QAAQ,EAAE;UAAZ,CAAZ;UAAA,wBACE;YACE,GAAG,EAAC,OADN;YAEE,KAAK,EAAC,IAFR;YAGE,MAAM,EAAC,IAHT;YAIE,GAAG,EAAC,yEAJN;YAKE,KAAK,EAAE;cACLN,QAAQ,EAAE,UADL;cAELO,KAAK,EAAE,KAFF;cAGLC,GAAG,EAAE,KAHA;cAILC,MAAM,EAAE;YAJH,CALT;YAWE,OAAO,EAAE,MAAMhB,SAAS,CAAC,KAAD;UAX1B;YAAA;YAAA;YAAA;UAAA,QADF,eAcE;YAAK,KAAK,EAAE;cAAEiB,OAAO,EAAE,KAAX;cAAkBC,KAAK,EAAE;YAAzB,CAAZ;YAAA,UACGX,QAAQ,CAACK;UADZ;YAAA;YAAA;YAAA;UAAA,QAdF;QAAA;UAAA;UAAA;UAAA;QAAA;MAjBJ,GACQ,GAAEL,QAAQ,CAACK,KAAM,IAAGL,QAAQ,CAACE,MAAO,EAD5C;QAAA;QAAA;QAAA;MAAA,QADD,CAVH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAsDD;;GArFQjB,Q;;KAAAA,Q;AAuFT,kCAAeV,KAAK,CAACqC,IAAN,CAAW3B,QAAX,CAAf"},"metadata":{},"sourceType":"module"}