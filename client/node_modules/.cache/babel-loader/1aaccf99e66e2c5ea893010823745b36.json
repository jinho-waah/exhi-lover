{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KakaoMap.js\";\n\n/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Marker from \"./Marker\";\nimport { Map, MapMarker, CustomOverlayMap, useMap } from \"react-kakao-maps-sdk\";\nimport icon from \"../../lib/icon/loc7.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoBox = styled.div`\n  position: absolute;\n  width: 200px;\n  height: 200px;\n  background: white;\n  z-index: 30;\n`;\n\nfunction KakaoMap(_ref) {\n  var _s = $RefreshSig$();\n\n  let {\n    state,\n    flag\n  } = _ref;\n  const mapHeight = window.innerWidth >= 560 ? 560 : window.innerWidth;\n  const center = state;\n  const marker = Marker();\n  console.log(typeof marker, marker);\n\n  const EventMarkerContainer = _ref2 => {\n    _s();\n\n    let {\n      position\n    } = _ref2;\n    const [isVisible, setIsVisible] = useState(false);\n    const map = useMap();\n    const Test = new kakao.maps.CustomOverlay({});\n    return /*#__PURE__*/_jsxDEV(MapMarker, {\n      position: position.latlng // 마커를 표시할 위치\n      ,\n      onClick: mark => {\n        setIsVisible(true);\n        map.panTo(mark.getPosition());\n      },\n      image: {\n        src: icon,\n        size: {\n          width: 33,\n          height: 33\n        } // 마커이미지의 크기\n\n      },\n      children: isVisible &&\n      /*#__PURE__*/\n      // <CustomOverlayMap position={position.latlng} yAnchor={1.15}>\n      //   </CustomOverlayMap>\n      _jsxDEV(\"div\", {\n        className: \"hi\",\n        style: {\n          padding: \"42px\",\n          backgroundColor: \"#fff\",\n          color: \"#000\",\n          zIndex: 30\n        },\n        children: \"Custom Overlay!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(EventMarkerContainer, \"MgnoDnPhdrdG17q8cYL8glgG9Vc=\", false, function () {\n    return [useMap];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Map // 지도를 표시할 Container\n    , {\n      center: center,\n      style: {\n        // 지도의 크기\n        width: \"100%\",\n        height: `${mapHeight}px`\n      },\n      level: 3 // 지도의 확대 레벨\n      ,\n      children: [flag && /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: center\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 18\n      }, this), marker.map((position, index) => /*#__PURE__*/_jsxDEV(EventMarkerContainer, {\n        position: position\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_c = KakaoMap;\nexport default _c2 = /*#__PURE__*/React.memo(KakaoMap);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"KakaoMap\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","styled","Marker","Map","MapMarker","CustomOverlayMap","useMap","icon","InfoBox","div","KakaoMap","state","flag","mapHeight","window","innerWidth","center","marker","console","log","EventMarkerContainer","position","isVisible","setIsVisible","map","Test","kakao","maps","CustomOverlay","latlng","mark","panTo","getPosition","src","size","width","height","padding","backgroundColor","color","zIndex","index","memo"],"sources":["/Users/andrew/Desktop/exhi/exhi/exhi-lover/client/src/component/map/KakaoMap.js"],"sourcesContent":["/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Marker from \"./Marker\";\nimport { Map, MapMarker, CustomOverlayMap, useMap } from \"react-kakao-maps-sdk\";\nimport icon from \"../../lib/icon/loc7.png\";\n\nconst InfoBox = styled.div`\n  position: absolute;\n  width: 200px;\n  height: 200px;\n  background: white;\n  z-index: 30;\n`;\n\nfunction KakaoMap({ state, flag }) {\n  const mapHeight = window.innerWidth >= 560 ? 560 : window.innerWidth;\n  const center = state;\n  const marker = Marker();\n  console.log(typeof marker, marker);\n\n  const EventMarkerContainer = ({ position }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const map = useMap();\n\n    const Test = new kakao.maps.CustomOverlay({});\n    return (\n      <MapMarker\n        position={position.latlng} // 마커를 표시할 위치\n        onClick={(mark) => {\n          setIsVisible(true);\n          map.panTo(mark.getPosition());\n        }}\n        image={{\n          src: icon,\n          size: {\n            width: 33,\n            height: 33,\n          }, // 마커이미지의 크기\n        }}\n      >\n        {isVisible && (\n          // <CustomOverlayMap position={position.latlng} yAnchor={1.15}>\n          //   </CustomOverlayMap>\n\n          <div\n            className=\"hi\"\n            style={{\n              padding: \"42px\",\n              backgroundColor: \"#fff\",\n              color: \"#000\",\n              zIndex: 30,\n            }}\n          >\n            Custom Overlay!\n          </div>\n        )}\n      </MapMarker>\n    );\n  };\n\n  return (\n    <div>\n      <Map // 지도를 표시할 Container\n        center={center}\n        style={{\n          // 지도의 크기\n          width: \"100%\",\n          height: `${mapHeight}px`,\n        }}\n        level={3} // 지도의 확대 레벨\n      >\n        {flag && <MapMarker position={center} />}\n        {marker.map((position, index) => (\n          <EventMarkerContainer key={index} position={position} />\n        ))}\n      </Map>\n    </div>\n  );\n}\n\nexport default React.memo(KakaoMap);\n"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,gBAAzB,EAA2CC,MAA3C,QAAyD,sBAAzD;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;AAEA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,SAASC,QAAT,OAAmC;EAAA;;EAAA,IAAjB;IAAEC,KAAF;IAASC;EAAT,CAAiB;EACjC,MAAMC,SAAS,GAAGC,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,GAA3B,GAAiCD,MAAM,CAACC,UAA1D;EACA,MAAMC,MAAM,GAAGL,KAAf;EACA,MAAMM,MAAM,GAAGf,MAAM,EAArB;EACAgB,OAAO,CAACC,GAAR,CAAY,OAAOF,MAAnB,EAA2BA,MAA3B;;EAEA,MAAMG,oBAAoB,GAAG,SAAkB;IAAA;;IAAA,IAAjB;MAAEC;IAAF,CAAiB;IAC7C,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,KAAD,CAA1C;IACA,MAAMwB,GAAG,GAAGlB,MAAM,EAAlB;IAEA,MAAMmB,IAAI,GAAG,IAAIC,KAAK,CAACC,IAAN,CAAWC,aAAf,CAA6B,EAA7B,CAAb;IACA,oBACE,QAAC,SAAD;MACE,QAAQ,EAAEP,QAAQ,CAACQ,MADrB,CAC6B;MAD7B;MAEE,OAAO,EAAGC,IAAD,IAAU;QACjBP,YAAY,CAAC,IAAD,CAAZ;QACAC,GAAG,CAACO,KAAJ,CAAUD,IAAI,CAACE,WAAL,EAAV;MACD,CALH;MAME,KAAK,EAAE;QACLC,GAAG,EAAE1B,IADA;QAEL2B,IAAI,EAAE;UACJC,KAAK,EAAE,EADH;UAEJC,MAAM,EAAE;QAFJ,CAFD,CAKF;;MALE,CANT;MAAA,UAcGd,SAAS;MAAA;MACR;MACA;MAEA;QACE,SAAS,EAAC,IADZ;QAEE,KAAK,EAAE;UACLe,OAAO,EAAE,MADJ;UAELC,eAAe,EAAE,MAFZ;UAGLC,KAAK,EAAE,MAHF;UAILC,MAAM,EAAE;QAJH,CAFT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAlBJ;MAAA;MAAA;MAAA;IAAA,QADF;EAiCD,CAtCD;;EANiC,GAM3BpB,oBAN2B;IAAA,QAQnBd,MARmB;EAAA;;EA8CjC,oBACE;IAAA,uBACE,QAAC,GAAD,CAAK;IAAL;MACE,MAAM,EAAEU,MADV;MAEE,KAAK,EAAE;QACL;QACAmB,KAAK,EAAE,MAFF;QAGLC,MAAM,EAAG,GAAEvB,SAAU;MAHhB,CAFT;MAOE,KAAK,EAAE,CAPT,CAOY;MAPZ;MAAA,WASGD,IAAI,iBAAI,QAAC,SAAD;QAAW,QAAQ,EAAEI;MAArB;QAAA;QAAA;QAAA;MAAA,QATX,EAUGC,MAAM,CAACO,GAAP,CAAW,CAACH,QAAD,EAAWoB,KAAX,kBACV,QAAC,oBAAD;QAAkC,QAAQ,EAAEpB;MAA5C,GAA2BoB,KAA3B;QAAA;QAAA;QAAA;MAAA,QADD,CAVH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;;KAhEQ/B,Q;AAkET,kCAAeZ,KAAK,CAAC4C,IAAN,CAAWhC,QAAX,CAAf"},"metadata":{},"sourceType":"module"}